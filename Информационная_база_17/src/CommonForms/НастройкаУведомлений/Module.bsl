#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Заполнение уведомлений и настроек уведомлений
	ПолучитьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияСУЗКлиент.ПередЗакрытием(
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Модифицированность) Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Настройки были изменены. Сохранить изменения?'");
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьНастройкиНаКлиенте();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПровайдерSMSПриИзменении(Элемент)
	
	ЛогинДляОтправкиSMS = "";
	ПарольДляОтправкиSMS = "";
	ИмяОтправителя = "";
	Если ПровайдерSMS = ПредопределенноеЗначение("Перечисление.ПровайдерыSMS.GSMINFORM") Тогда
		Элементы.ЛогинДляОтправкиSMS.Заголовок = НСтр("ru = 'ID кабинета'");
		Элементы.ПарольДляОтправкиSMS.Заголовок = НСтр("ru = 'API-ключ'");
		Элементы.ИмяОтправителя.АвтоОтметкаНезаполненного = Истина;
	Иначе
		Элементы.ЛогинДляОтправкиSMS.Заголовок = НСтр("ru = 'Логин'");
		Элементы.ПарольДляОтправкиSMS.Заголовок = НСтр("ru = 'Пароль'");
		Элементы.ИмяОтправителя.АвтоОтметкаНезаполненного = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеУслугиНажатие(Элемент)
	
	//Если ПровайдерSMS = ПредопределенноеЗначение("Перечисление.ПровайдерыSMS.Билайн") Тогда
	//	ПерейтиПоНавигационнойСсылке("http://b2b.beeline.ru/msk/sb/mobile/services/index.wbp?id=3a15308a-7b14-4f8e-acda-0841dd6c750e");
	//ИначеЕсли ПровайдерSMS = ПредопределенноеЗначение("Перечисление.ПровайдерыSMS.МТС") Тогда
	//	ПерейтиПоНавигационнойСсылке("http://www.mtscommunicator.ru/service/");
	//ИначеЕсли ПровайдерSMS = ПредопределенноеЗначение("Перечисление.ПровайдерыSMS.SMSRU") Тогда
	//	ПерейтиПоНавигационнойСсылке("http://sms.ru");
	//ИначеЕсли ПровайдерSMS = ПредопределенноеЗначение("Перечисление.ПровайдерыSMS.SMSЦЕНТР") Тогда
	//	ПерейтиПоНавигационнойСсылке("http://smsc.ru");
	//ИначеЕсли ПровайдерSMS = ПредопределенноеЗначение("Перечисление.ПровайдерыSMS.СМСУслуги") Тогда
	//	ПерейтиПоНавигационнойСсылке("http://sms-uslugi.ru");
	//ИначеЕсли ПровайдерSMS = ПредопределенноеЗначение("Перечисление.ПровайдерыSMS.GSMINFORM") Тогда
	//	ПерейтиПоНавигационнойСсылке("http://gsm-inform.ru");
	//Иначе
	//	АдресВИнтернете = "";
	//	ОтправкаSMSКлиентПереопределяемый.ПриПолученииАдресаПровайдераВИнтернете(ПровайдерSMS, АдресВИнтернете);
	//	Если Не ПустаяСтрока(АдресВИнтернете) Тогда
	//		ПерейтиПоНавигационнойСсылке(АдресВИнтернете);
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерSMSПриИзменении(Элемент)
	
	Если РазмерSMS = 0 Тогда
		РазмерSMS = РаботаСУведомлениямиКлиентСервер.РазмерSMS(
			1,
			ИспользоватьТранслитерациюSMS);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерSMSРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	КоличествоЧастей = РаботаСУведомлениямиКлиентСервер.КоличествоЧастейSMS(
		РазмерSMS,
		ИспользоватьТранслитерациюSMS);
	РазмерSMS = РаботаСУведомлениямиКлиентСервер.РазмерSMS(
		КоличествоЧастей + Направление,
		ИспользоватьТранслитерациюSMS);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьТранслитерациюSMSПриИзменении(Элемент)
	
	КоличествоЧастей = РаботаСУведомлениямиКлиентСервер.КоличествоЧастейSMS(
		РазмерSMS,
		Не ИспользоватьТранслитерациюSMS);
	РазмерSMS = РаботаСУведомлениямиКлиентСервер.РазмерSMS(
		КоличествоЧастей,
		ИспользоватьТранслитерациюSMS);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПодпискиУведомлений

&НаКлиенте
Процедура ПодпискиУведомленийПриИзменении(Элемент)
	
	ОбновитьПодпискаАктивна(
		ПодпискиУведомлений,
		СрокиУведомлений,
		ЧастотыУведомлений,
		ДополнительныеНастройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	СохранитьНастройкиНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОчиститьЗавершение", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Очистить настройки уведомлений всех пользователей?'");
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура УведомленияSMS(Команда)
	
	ОткрытьФорму("Документ.УведомлениеПоSMS.ФормаСписка");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьНастройки()
	
	// Уведомления
	ПодпискиУведомлений.Очистить();
	ДоступныеПодписки = РегистрыСведений.НастройкиУведомлений.ДоступныеПодписки();
	Для Каждого Подписка Из ДоступныеПодписки Цикл
		НоваяСтрока = ПодпискиУведомлений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Подписка);
		НоваяСтрока.ПоПочте = РегистрыСведений.НастройкиУведомлений.ПолучитьПодпискуПоУмолчанию(
			Подписка.ВидСобытия,
			Перечисления.СпособыУведомления.ПоПочте);
		НоваяСтрока.Окном = РегистрыСведений.НастройкиУведомлений.ПолучитьПодпискуПоУмолчанию(
			Подписка.ВидСобытия,
			Перечисления.СпособыУведомления.Окном);
	КонецЦикла;
	Элементы.ПодпискиУведомлений.Видимость = (ПодпискиУведомлений.Количество() <> 0);
	
	// Частоты и сроки уведомлений - Сроки уведомлений
	СрокиУведомлений.Очистить();
	ДоступныеСроки = РегистрыСведений.НастройкиУведомлений.ДоступныеСроки();
	Для Каждого НастройкаСрока Из ДоступныеСроки Цикл
		НоваяСтрока = СрокиУведомлений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, НастройкаСрока);
		НоваяСтрока.Срок = РегистрыСведений.НастройкиУведомлений.ПолучитьСрокПоУмолчанию(
			НастройкаСрока.ВидСобытия);
	КонецЦикла;
	Элементы.СрокиУведомлений.Видимость = (СрокиУведомлений.Количество() <> 0);
	
	// Частоты и сроки уведомлений - Частоты уведомлений
	ЧастотыУведомлений.Очистить();
	ДоступныеЧастоты = РегистрыСведений.НастройкиУведомлений.ДоступныеЧастоты();
	Для Каждого НастройкаЧастоты Из ДоступныеЧастоты Цикл
		НоваяСтрока = ЧастотыУведомлений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, НастройкаЧастоты);
		НоваяСтрока.Частота = РегистрыСведений.НастройкиУведомлений.ПолучитьЧастотуПоУмолчанию(
			НастройкаЧастоты.ВидСобытия);
	КонецЦикла;
	Элементы.ЧастотыУведомлений.Видимость = (ЧастотыУведомлений.Количество() <> 0);
	
	// Дополнительные настройки
	ДополнительныеНастройки.Очистить();
	ДоступныеДополнительныеНастройки = РегистрыСведений.НастройкиУведомлений.ДоступныеДополнительныеНастройки();
	Для Каждого ДополнительнаяНастройка Из ДоступныеДополнительныеНастройки Цикл
		НоваяСтрока = ДополнительныеНастройки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДополнительнаяНастройка);
		НоваяСтрока.Значение = РегистрыСведений.НастройкиУведомлений.ПолучитьДополнительнуюНастройкуПоУмолчанию(
			ДополнительнаяНастройка.Настройка);
	КонецЦикла;
	Элементы.ДополнительныеНастройки.Видимость = (ДополнительныеНастройки.Количество() <> 0);
	
	// Дополнительные настройки - Разрешить пользователям изменять настройки уведомлений
	РазрешитьИзменятьНастройкиУведомлений = РегистрыСведений.НастройкиУведомлений.РазрешеноИзменятьНастройки();
	
	// Дополнительные настройки - Адрес публикации на веб-сервере
	АдресПубликацииНаВебСервере = Константы.АдресПубликацииНаВебСервере.Получить();
	
	// Обновление данных об активности подписок.
	ОбновитьПодпискаАктивна(
		ПодпискиУведомлений,
		СрокиУведомлений,
		ЧастотыУведомлений,
		ДополнительныеНастройки);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиНаКлиенте()
	
	// Сохранение настроек и закрытие формы.
	СохранитьНастройки();
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	НачатьТранзакцию();
	Попытка
		
		// Уведомления
		Для Каждого Подписка Из ПодпискиУведомлений Цикл
			РегистрыСведений.НастройкиУведомлений.УстановитьПодпискуПоУмолчанию(
				Подписка.ВидСобытия,
				Перечисления.СпособыУведомления.ПоПочте,
				Подписка.ПоПочте);
			РегистрыСведений.НастройкиУведомлений.УстановитьПодпискуПоУмолчанию(
				Подписка.ВидСобытия,
				Перечисления.СпособыУведомления.Окном,
				Подписка.Окном);
		КонецЦикла;
		
		// Частоты и сроки уведомлений - Сроки уведомлений
		Для Каждого НастройкаСрока Из СрокиУведомлений Цикл
			РегистрыСведений.НастройкиУведомлений.УстановитьСрокПоУмолчанию(
				НастройкаСрока.ВидСобытия,
				НастройкаСрока.Срок);
		КонецЦикла;
		
		// Частоты и сроки уведомлений - Частоты уведомлений
		Для Каждого НастройкаЧастоты Из ЧастотыУведомлений Цикл
			РегистрыСведений.НастройкиУведомлений.УстановитьЧастотуПоУмолчанию(
				НастройкаЧастоты.ВидСобытия,
				НастройкаЧастоты.Частота);
		КонецЦикла;
		
		// Дополнительные настройки
		Для Каждого ДополнительнаяНастройка Из ДополнительныеНастройки Цикл
			РегистрыСведений.НастройкиУведомлений.УстановитьДополнительнуюНастройкуПоУмолчанию(
				ДополнительнаяНастройка.Настройка,
				ДополнительнаяНастройка.Значение);
		КонецЦикла;
		
		// Дополнительные настройки - Разрешить пользователям изменять настройки уведомлений
		Константы.РазрешитьИзменятьНастройкиУведомлений.Установить(РазрешитьИзменятьНастройкиУведомлений);
		
		// Дополнительные настройки - Адрес публикации на веб-сервере
		Константы.АдресПубликацииНаВебСервере.Установить(АдресПубликацииНаВебСервере);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПодпискаАктивна(
	ПодпискиУведомлений,
	СрокиУведомлений,
	ЧастотыУведомлений,
	ДополнительныеНастройки)
	
	ПараметрыОтбора = Новый Структура("ОсновноеСобытие");
	
	Для Каждого НастройкаСрока Из СрокиУведомлений Цикл
		ПараметрыОтбора.ОсновноеСобытие = НастройкаСрока.ВидСобытия;
		НайденныеСтроки = ПодпискиУведомлений.НайтиСтроки(ПараметрыОтбора);
		ПодпискаАктивна = Ложь;
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			ПодпискаАктивна = ПодпискаАктивна
				Или НайденнаяСтрока.ПоПочте
				Или НайденнаяСтрока.ПоSMS
				Или НайденнаяСтрока.Окном
				Или НайденнаяСтрока.ПоPush;
		КонецЦикла;
		НастройкаСрока.ПодпискаАктивна = ПодпискаАктивна;
	КонецЦикла;
	
	Для Каждого НастройкаЧастоты Из ЧастотыУведомлений Цикл
		ПараметрыОтбора.ОсновноеСобытие = НастройкаЧастоты.ВидСобытия;
		НайденныеСтроки = ПодпискиУведомлений.НайтиСтроки(ПараметрыОтбора);
		ПодпискаАктивна = Ложь;
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			ПодпискаАктивна = ПодпискаАктивна
				Или НайденнаяСтрока.ПоПочте
				Или НайденнаяСтрока.ПоSMS
				Или НайденнаяСтрока.Окном
				Или НайденнаяСтрока.ПоPush;
		КонецЦикла;
		НастройкаЧастоты.ПодпискаАктивна = ПодпискаАктивна;
	КонецЦикла;
	
	Для Каждого ДополнительнаяНастройка Из ДополнительныеНастройки Цикл
		ПараметрыОтбора.ОсновноеСобытие = ДополнительнаяНастройка.ВидСобытия;
		НайденныеСтроки = ПодпискиУведомлений.НайтиСтроки(ПараметрыОтбора);
		ПодпискаАктивна = Ложь;
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			ПодпискаАктивна = ПодпискаАктивна
				Или НайденнаяСтрока.ПоПочте
				Или НайденнаяСтрока.ПоSMS
				Или НайденнаяСтрока.Окном
				Или НайденнаяСтрока.ПоPush;
		КонецЦикла;
		ДополнительнаяНастройка.ПодпискаАктивна = ПодпискаАктивна;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНаСервере()
	
	РегистрыСведений.НастройкиУведомлений.УдалитьВсеНастройкиПользователей();
	
КонецПроцедуры

#КонецОбласти