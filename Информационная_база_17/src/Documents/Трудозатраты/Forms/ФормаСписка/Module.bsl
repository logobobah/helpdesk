
&НаКлиенте
Процедура Сформировать(Команда)
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Месяц", НачалоМесяца(ДобавитьМесяц(ТекущаяДата(),-1)));
	ОткрытьФорму("Документ.Трудозатраты.Форма.ФормированиеДокументов", ПараметрыОткрытия);
	ЭтаФорма.ОбновитьОтображениеДанных();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.КоманднаяПанель;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	МассивГрупп = Новый Массив;
	МассивГрупп.Добавить(Элементы.ГруппаУстановитьСостояние);
	МассивГрупп.Добавить(Элементы.СписокКонтекстноеМенюГруппаУстановитьСостояние);
	ЗаполнитьГруппуИзмененияСостояния("УстановитьСостояние_", МассивГрупп);
КонецПроцедуры

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ФормированиеТрудозатратЗавершено" Тогда
		Элементы.Список.Обновить();
		ЭтаФорма.ОбновитьОтображениеДанных(Элементы.Список);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура УстановитьСостояние_(Команда)
	ИмяКоманды = Команда.Имя;
	Имя = Сред(ИмяКоманды,СтрНайти(ИмяКоманды, "_")+1);
	Состояние = ПредопределенноеЗначение("Перечисление.СостоянияТрудозатрат." + Имя);
	
	ВыделенныеДокументы = Элементы.Список.ВыделенныеСтроки;
	ИзменитьСостояние(ВыделенныеДокументы, Состояние);
	ОповеститьОбИзменении(?(ВыделенныеДокументы.Количество() = 1, ВыделенныеДокументы[0], Тип("ДокументСсылка.Трудозатраты")));

КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ЗаполнитьГруппуИзмененияСостояния(ИмяПроцедуры, МассивГрупп)
	Для Каждого Статус Из Перечисления.СостоянияТрудозатрат Цикл
		ИмяКоманды = ИмяПроцедуры + XMLСтрока(Статус);
		Команда = Команды.Добавить(ИмяКоманды);
		Команда.Заголовок = Статус;
		Команда.Действие = ИмяПроцедуры;
		Для Каждого ГруппаЭлементов Из МассивГрупп Цикл
			Элемент = Элементы.Добавить(ГруппаЭлементов.Имя + Команда.Имя, Тип("КнопкаФормы"), ГруппаЭлементов);
			Элемент.ИмяКоманды = ИмяКоманды;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ИзменитьСостояние(Знач ВыделенныеДокументы, Состояние)
	Перем Ошибки, Отказ;
	
	Для Каждого Документ Из ВыделенныеДокументы Цикл
		Попытка
			Объект = Документ.ПолучитьОбъект();
			Объект.Заблокировать();
			Объект.Состояние = Состояние;
			Если Объект.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияТрудозатрат.Оплачен") Тогда
				ТекДата = ТекущаяДата();
				Для Каждого СтрокаТЧ Из Объект.Оплата Цикл
					Если СтрокаТЧ.Дата = '00010101' Тогда
						СтрокаТЧ.Дата = ТекДата;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			Объект.Записать(?(Объект.Проведен,РежимЗаписиДокумента.Проведение,РежимЗаписиДокумента.Запись));
		Исключение
			Инфо = ИнформацияОбОшибке();
			Текст = НСтр("ru = 'Ошибка изменения трудозатрат <%1>: %2'");
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, Объект.Ссылка, Инфо.Причина.Описание);
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "", Текст, Неопределено);
		КонецПопытки;
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
КонецПроцедуры
