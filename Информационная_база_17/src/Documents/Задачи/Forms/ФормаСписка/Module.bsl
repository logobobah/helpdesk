&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Список.УсловноеОформление.Элементы.Очистить();
	Документы.Задачи.УстановитьУсловноеОформление(Список, Элементы.Список.Шрифт, "Дата,ДатаСтатуса");
	
	ЭлементОформления = Список.УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементОформления.Отбор, "Статус", ВидСравненияКомпоновкиДанных.НеРавно, ПредопределенноеЗначение("Перечисление.СтатусыЗадач.Ожидание"));
	ЭлементОформления.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных("ВернутьИзОжидания");
	
	СистемаУчетаЗадачСервер.ФормаСпискаВыбораПриСозданииНаСервере(Список, Элементы.Список, Параметры);
	
	// Настройка автоматического открытия формы при начале работы порграммы
	Элементы.ФормаОткрыватьПриЗапускеПрограммы.Пометка = СтрНайти(СистемаУчетаЗадачСервер.ПриЗапускеОткрыватьРаздел(),"Задачи") <> 0;
	
	ФормаОжидающих = Ложь;
	Если Параметры.Свойство("ФормаОжидающих") Тогда
		Заголовок = Нстр("ru = 'Ожидающие'");
		ФормаОжидающих = Параметры.ФормаОжидающих;
	ИначеЕсли Параметры.Свойство("ФормаЗавершенных") Тогда
		Заголовок = ?(Параметры.ФормаЗавершенных, Нстр("ru = 'Завершенные задачи'"),Заголовок);
	КонецЕсли;
	
	Элементы.ВернутьИзОжидания.Видимость = ФормаОжидающих;
	Элементы.ФормаВернутьИзОжидания.Видимость = ФормаОжидающих;
	Элементы.СписокВернутьИзОжидания.Видимость = ФормаОжидающих;
	
	ЗадачиВызовСервера.ЗаполнитьГруппуИзмененияСтатуса(Элементы, Команды, "УстановитьСтатус_", "СписокКонтекстноеМеню", Элементы.СписокКонтекстноеМенюГруппаУстановитьСтатус);
	
	Если Параметры.Отбор.Свойство("Статус") Или Параметры.ФиксированныеНастройки <> Неопределено Тогда
		Для каждого ЭлементОтбора Из Список.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
			Если ЭлементОтбора.Представление = "ГруппаСтатусы" Тогда
				ЭлементОтбора.Использование = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если Параметры.Свойство("ОтборПоПараметру") Тогда
		//Установка отбора по параметру
		ИмяРеквизита = "";
		Если ТипЗнч(Параметры.ОтборПоПараметру) = Тип("СправочникСсылка.Заказчики") Тогда
			ИмяРеквизита = "Заказчик";
		ИначеЕсли ТипЗнч(Параметры.ОтборПоПараметру) = Тип("СправочникСсылка.Проекты") Тогда
			ИмяРеквизита = "Проект";
		ИначеЕсли ТипЗнч(Параметры.ОтборПоПараметру) = Тип("СправочникСсылка.КонтактныеЛицаЗаказчиков") Тогда
			ИмяРеквизита = "КонтактноеЛицоЗаказчика";
		ИначеЕсли ТипЗнч(Параметры.ОтборПоПараметру) = Тип("СправочникСсылка.КалендариСотрудников") Тогда
			ИмяРеквизита = "КалендарьСотрудника";
		ИначеЕсли ТипЗнч(Параметры.ОтборПоПараметру) = Тип("СправочникСсылка.Пользователи") Тогда
			ИмяРеквизита = "Исполнитель";
		КонецЕсли;
		Если Не ПустаяСтрока(ИмяРеквизита) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма.Список, ИмяРеквизита, Параметры.ОтборПоПараметру, ВидСравненияКомпоновкиДанных.Равно, , ЗначениеЗаполнено(Параметры.ОтборПоПараметру));
		КонецЕсли;
	КонецЕсли;
	
	Элементы.Список.СоздатьЭлементыФормыПользовательскихНастроек(Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки, РежимОтображенияНастроекКомпоновкиДанных.БыстрыйДоступ, 1);
	
	Если Параметры.ФиксированныеНастройки <> Неопределено Тогда
		МассивЭлементовОтбора = ОбщегоНазначенияКлиентСервер.НайтиЭлементыИГруппыОтбора(Параметры.ФиксированныеНастройки.Отбор, "Ссылка");
		Если МассивЭлементовОтбора.Количество() = 1 Тогда
			ИДОтбораПоСсылке = Параметры.ФиксированныеНастройки.Отбор.ПолучитьИдентификаторПоОбъекту(МассивЭлементовОтбора[0]);
		КонецЕсли;
	КонецЕсли;

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.КоманднаяПанель;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьСтатусНаСервере(МассивЗадач, Статус)
	Документы.Задачи.УстановитьСтатусИсполнителяЗадач(МассивЗадач, Статус);
КонецПроцедуры

&НаКлиенте
Процедура ВернутьИзОжидания(Команда)
	
	УстановитьСтатусНаСервере(Элементы.Список.ВыделенныеСтроки, ПредопределенноеЗначение("Перечисление.СтатусыЗадач.Новая"));
	ОповеститьОбИзменении(Тип("ДокументСсылка.Задачи"));
	Оповестить("Задачи.ИзменениеСтатуса", ПредопределенноеЗначение("Перечисление.СтатусыЗадач.Ожидание"), ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле = Элементы.ВернутьИзОжидания Тогда
		СтандартнаяОбработка = Ложь;
		МассивЗадач = Новый Массив;
		МассивЗадач.Добавить(ВыбраннаяСтрока);
		УстановитьСтатусНаСервере(МассивЗадач, ПредопределенноеЗначение("Перечисление.СтатусыЗадач.Новая"));
		ОповеститьОбИзменении(ВыбраннаяСтрока);
		Возврат;
	КонецЕсли;
	
	Если ИДОтбораПоСсылке <> Неопределено Тогда
		ЭлементОтбора = Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.ПолучитьОбъектПоИдентификатору(ИДОтбораПоСсылке);
		ЭлементОтбора.ПравоеЗначение.Добавить(ВыбраннаяСтрока);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатус_(Команда)
	ЗадачиКлиент.ОбработкаКомандыИзмененияСтатуса(ЭтаФорма, Элементы.Список.ВыделенныеСтроки, Команда);
КонецПроцедуры

&НаКлиенте
Процедура СписокОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	Элементы.Список.Обновить();
	Оповестить("Задачи.ИзменениеСтатуса", ПредопределенноеЗначение("Перечисление.СтатусыЗадач.Ожидание"), ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗадач.Ожидание");
	Если Источник <> ЭтаФорма И ИмяСобытия = "Задачи.ИзменениеСтатуса" И Параметр = Статус Тогда
		Элементы.Список.Обновить();
	//ИначеЕсли ИмяСобытия = "Изменилась настройка" И Параметр.Свойство("ПриЗапускеОткрыватьРаздел") Тогда
	//	Элементы.ФормаОткрыватьПриЗапускеПрограммы.Пометка =  СтрНайти(Параметр.ПриЗапускеОткрыватьРаздел, "Задачи") <> 0;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СписокПриЗагрузкеПользовательскихНастроекНаСервере(Элемент, Настройки)
	Элементы.Список.СоздатьЭлементыФормыПользовательскихНастроек(Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки, РежимОтображенияНастроекКомпоновкиДанных.БыстрыйДоступ, 1);
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	Элементы.Список.СоздатьЭлементыФормыПользовательскихНастроек(Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки, РежимОтображенияНастроекКомпоновкиДанных.БыстрыйДоступ, 1);
КонецПроцедуры

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура СоздатьЗадачуПоШаблону(Команда)
	//Открыть форму выбора шаблона
	ЗадачиКлиент.ОткрытьВыборШаблонаЗадач();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТег(Команда)
	
	КлассификацияКонтактовКлиент.УстановитьТег(Элементы.Список.ВыделенныеСтроки, НСтр("ru='задаче,задачам,задачам'"));
	
КонецПроцедуры

#КонецОбласти

// Настройка автоматического открытия формы при начале работы порграммы

&НаСервереБезКонтекста
Процедура ИзменитьНастройкуОткрытияПриЗапускеПрограммы(НоваяНастройка)

	СистемаУчетаЗадачСервер.ЗаписатьПриЗапускеОткрыватьРаздел(НоваяНастройка);

КонецПроцедуры
 
&НаКлиенте
Процедура ОткрыватьПриЗапускеПрограммы(Команда)
	
	ЗначениеНастройки = ?(Элементы.ФормаОткрыватьПриЗапускеПрограммы.Пометка, "Задачи-", "Задачи");
	ИзменитьНастройкуОткрытияПриЗапускеПрограммы(ЗначениеНастройки);
	Элементы.ФормаОткрыватьПриЗапускеПрограммы.Пометка = НЕ Элементы.ФормаОткрыватьПриЗапускеПрограммы.Пометка;
	//Оповестить("Изменилась настройка", Новый Структура("ПриЗапускеОткрыватьРаздел", ЗначениеНастройки))
	
КонецПроцедуры

