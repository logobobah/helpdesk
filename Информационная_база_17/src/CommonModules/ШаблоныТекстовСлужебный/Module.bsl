
Функция ПолучитьМетаданныеОбластиПрименения(ОбластьПрименения)
	Если ОбластьПрименения = Перечисления.ОбластиПримененияШаблоновТекстов.Задача Тогда
		Возврат Метаданные.Документы.Задачи;
	ИначеЕсли ОбластьПрименения = Перечисления.ОбластиПримененияШаблоновТекстов.ЗаписьКалендаря Тогда
		Возврат Метаданные.Справочники.ЗаписиКалендаряСотрудника;
	КонецЕсли;
	Возврат Метаданные.Документы.ИсходящееПисьмо;
КонецФункции


Функция СведенияОШаблоне(ПараметрыШаблона) Экспорт
	
	СведенияОШаблоне = КонструкторСведенийОШаблоне();
	
	ИмяУзлаОбщихРеквизитов = ИмяУзлаОбщихРеквизитов();
	
	Если ТипЗнч(СведенияОШаблоне.ОбщиеРеквизиты) = Тип("ДеревоЗначений") Тогда
		Для каждого ОбщийРеквизит Из ОбщиеРеквизиты(СведенияОШаблоне.ОбщиеРеквизиты).Строки Цикл
			Если Не СтрНачинаетсяС(ОбщийРеквизит.Имя, ИмяУзлаОбщихРеквизитов + ".") Тогда
				ОбщийРеквизит.Имя = ИмяУзлаОбщихРеквизитов + "." + ОбщийРеквизит.Имя;
			КонецЕсли;
		КонецЦикла;
	Иначе
		СведенияОШаблоне.ОбщиеРеквизиты = ДеревоРеквизитов();
		ОбщиеРеквизитыДерево = ОпределитьОбщиеРеквизиты();
		СведенияОШаблоне.ОбщиеРеквизиты = ОбщиеРеквизиты(ОбщиеРеквизитыДерево);
	КонецЕсли;
	
	ОпределитьСписокРеквизитовИВложений(СведенияОШаблоне, ПараметрыШаблона);
	
	Возврат СведенияОШаблоне;
	
КонецФункции

// Функция-конструктор сведений о шаблоне.
// 
// Возвращаемое значение:
//  Структура - Описание:
//    * Назначение - Строка -
//    * Вложения - ТаблицаЗначений - где:
//       ** Имя - Строка -
//       ** Идентификатор - Строка -
//       ** Представление - Строка -
//       ** МенеджерПечати - Строка -
//       ** ПараметрыПечати - Структура -
//       ** ТипФайла - Строка -
//       ** Статус - Строка -
//       ** Реквизит - Строка -
//       ** ИмяПараметра - Строка -
//   * ОбщиеРеквизиты 
//   * Реквизиты - ДеревоЗначений - где:
//       ** Имя - Строка -
//       ** Представление - Строка -
//       ** Подсказка - Строка -
//       ** Формат - Строка -
//       ** Тип - ОписаниеТипов -
//       ** ПроизвольныйПараметр - Булево -
// 
Функция КонструкторСведенийОШаблоне()
	
	СведенияОШаблоне = Новый Структура();
	
	НастройкиШаблоновСообщений = ШаблоныТекстовСлужебныйПовтИсп.ПриОпределенииНастроек();
	
	СведенияОШаблоне.Вставить("Реквизиты", ДеревоРеквизитов());
	СведенияОШаблоне.Вставить("ОбщиеРеквизиты", НастройкиШаблоновСообщений.ОбщиеРеквизиты);
	
	Возврат СведенияОШаблоне;
	
КонецФункции

// Работа с реквизитами вспомогательные методы 
// 
// Возвращаемое значение:
//  ДеревоЗначений - содержит колонки:
//    * Имя - Строка - 
//    * Представление - Строка - 
//    * Подсказка - Строка - 
//    * Формат - Строка -  
//    * Тип - ОписаниеТипов -
//    * ПроизвольныйПараметр - Булево -
//
Функция ДеревоРеквизитов()
	
	ТипСтрока = Новый ОписаниеТипов("Строка");
	Реквизиты = Новый ДеревоЗначений;
	Реквизиты.Колонки.Добавить("Имя", ТипСтрока);
	Реквизиты.Колонки.Добавить("Представление", ТипСтрока);
	Реквизиты.Колонки.Добавить("Подсказка", ТипСтрока);
	Реквизиты.Колонки.Добавить("Формат", ТипСтрока);
	Реквизиты.Колонки.Добавить("Тип", Новый ОписаниеТипов("ОписаниеТипов"));
	Реквизиты.Колонки.Добавить("ПроизвольныйПараметр", Новый ОписаниеТипов("Булево"));
	
	Возврат Реквизиты;
	
КонецФункции

Функция ЗаголовокОбщиеРеквизиты() Экспорт
	Возврат НСтр("ru = 'Общие реквизиты'");
КонецФункции

Функция ИмяУзлаОбщихРеквизитов() Экспорт
	Возврат НСтр("ru = 'ОбщиеРеквизиты'");
КонецФункции

Функция ОбщиеРеквизиты(Реквизиты) Экспорт
	
	УзелРеквизитов = Реквизиты.Строки.Найти(ИмяУзлаОбщихРеквизитов(), "Имя");
	Если УзелРеквизитов = Неопределено Тогда
		УзелРеквизитов = Реквизиты.Строки.Добавить();
		УзелРеквизитов.Имя = ИмяУзлаОбщихРеквизитов();
		УзелРеквизитов.Представление = ЗаголовокОбщиеРеквизиты();
	КонецЕсли;
	
	Возврат УзелРеквизитов;
	
КонецФункции

Функция ОпределитьОбщиеРеквизиты() Экспорт
	
	ОбщиеРеквизиты = ДеревоРеквизитов();
	ОбщиеРеквизитыСтроки = ОбщиеРеквизиты(ОбщиеРеквизиты);
	
	ДобавитьОбщийРеквизит(ОбщиеРеквизитыСтроки, "ТекущаяДата", НСтр("ru = 'Текущая дата'"), Новый ОписаниеТипов("Дата"));
	ДобавитьОбщийРеквизит(ОбщиеРеквизитыСтроки, "ЗаголовокСистемы", НСтр("ru = 'Заголовок системы'"));
	ДобавитьОбщийРеквизит(ОбщиеРеквизитыСтроки, "АдресБазыВИнтернете", НСтр("ru = 'Адрес базы в Интернете'"), Новый ОписаниеТипов("Строка"));
	ДобавитьОбщийРеквизит(ОбщиеРеквизитыСтроки, "АдресБазыВЛокальнойСети", НСтр("ru = 'Адрес базы в локальной сети'"), Новый ОписаниеТипов("Строка"));
	ДобавитьОбщийРеквизит(ОбщиеРеквизитыСтроки, "ТекущийПользователь", НСтр("ru = 'Текущий исполнитель'"), Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	РазвернутьРеквизит(ИмяУзлаОбщихРеквизитов() + ".ТекущийПользователь", ОбщиеРеквизитыСтроки.Строки,, 
		"Подразделение, ФизическоеЛицо, Недействителен, ИдентификаторПользователяИБ, ИдентификаторПользователяСервиса, Подготовлен, Служебный");
	
	Возврат ОбщиеРеквизиты;
	
КонецФункции

Процедура ДобавитьОбщийРеквизит(ОбщиеРеквизиты, Имя, Представление, Тип = Неопределено)
	
	НовыйРеквизит = ОбщиеРеквизиты.Строки.Добавить();
	НовыйРеквизит.Имя = ИмяУзлаОбщихРеквизитов() + "." + Имя;
	НовыйРеквизит.Представление = Представление;
	Если Тип = Неопределено Тогда
		НовыйРеквизит.Тип = Новый ОписаниеТипов("Строка");
	Иначе
		НовыйРеквизит.Тип = Тип;
	КонецЕсли;
	
КонецПроцедуры

Функция ДобавитьРеквизит(Знач Имя, Узел)
	
	ИмяУзла = Узел.Родитель.Имя;
	Если НЕ СтрНачинаетсяС(Имя, ИмяУзла + ".") Тогда
		Имя = ИмяУзла + "." + Имя;
	КонецЕсли;
	
	НовыйРеквизит = Узел.Добавить();
	НовыйРеквизит.Имя = Имя;
	НовыйРеквизит.Представление = Имя;
	
	Возврат НовыйРеквизит;
	
КонецФункции

Функция РазвернутьРеквизит(Знач Имя, Узел, СписокРеквизитов = "", ИсключаяРеквизиты = "") Экспорт
	
	Реквизит = Узел.Найти(Имя, "Имя", Ложь);
	Если Реквизит <> Неопределено Тогда
		РазвернутьРеквизитПоМетаданнымОбъекта(Реквизит, СписокРеквизитов, ИсключаяРеквизиты, Имя);
	Иначе
		Имя = Узел.Родитель.Имя + "." + Имя;
		Реквизит = Узел.Найти(Имя, "Имя", Ложь);
		Если СтрЧислоВхождений(Имя, ".") > 1 Тогда
			Возврат Реквизит.Строки;
		КонецЕсли;
		
		Если Реквизит <> Неопределено Тогда
			РазвернутьРеквизитПоМетаданнымОбъекта(Реквизит, СписокРеквизитов, ИсключаяРеквизиты, Имя);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Реквизит.Строки;
	
КонецФункции

Процедура РазвернутьРеквизитПоМетаданнымОбъекта(Реквизит, СписокРеквизитов, ИсключаяРеквизиты, Знач Префикс)
	
	Если ТипЗнч(Реквизит.Тип) = Тип("ОписаниеТипов") Тогда
		УзелРеквизитов = Реквизит.Строки;
		Префикс = Префикс + ?(Прав(Префикс, 1) <> ".", ".", "");
		Для каждого Тип Из Реквизит.Тип.Типы() Цикл
			МетаданныеОбъект = Метаданные.НайтиПоТипу(Тип);
			Если МетаданныеОбъект <> Неопределено Тогда
				РеквизитыПоМетаданнымОбъекта(УзелРеквизитов, МетаданныеОбъект, СписокРеквизитов, ИсключаяРеквизиты, Префикс);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура РеквизитыПоМетаданнымОбъекта(Реквизиты, МетаданныеОбъект, СписокРеквизитов = "", ИсключаяРеквизиты = "", Знач Префикс = "")
	
	СведенияОСпискеРеквизитов = Новый Структура("СписокРеквизитов, СписокСодержитДанные");
	СведенияОСпискеРеквизитов.СписокРеквизитов  = СтрРазделить(ВРег(СписокРеквизитов), ",", Ложь);
	СведенияОСпискеРеквизитов.СписокСодержитДанные = (СведенияОСпискеРеквизитов.СписокРеквизитов.Количество() > 0);
	
	СведенияОИсключаемыхРеквизитах = Новый Структура("СписокРеквизитов, СписокСодержитДанные");
	СведенияОИсключаемыхРеквизитах.СписокРеквизитов = СтрРазделить(ВРег(ИсключаяРеквизиты), ",", Ложь);
	СведенияОИсключаемыхРеквизитах.СписокСодержитДанные = (СведенияОИсключаемыхРеквизитах.СписокРеквизитов.Количество() > 0);
	
	Если НЕ ОбщегоНазначения.ЭтоПеречисление(МетаданныеОбъект) Тогда
		Для каждого Реквизит Из МетаданныеОбъект.Реквизиты Цикл
			Если НЕ СтрНачинаетсяС(Реквизит.Имя, "Удалить") Тогда
				Если Реквизит.Тип.Типы().Количество() = 1 И Реквизит.Тип.Типы()[0] = Тип("ХранилищеЗначения") Тогда
					Продолжить;
				КонецЕсли;
				ДобавитьРеквизитПоМетаданнымОбъекта(Реквизиты, Реквизит, Префикс, СведенияОСпискеРеквизитов, СведенияОИсключаемыхРеквизитах);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СкрываемыеСтандартныеРеквизиты(СведенияОИсключаемыхРеквизитах.СписокРеквизитов);
	СведенияОИсключаемыхРеквизитах.СписокСодержитДанные = Истина;
	Для каждого Реквизит Из МетаданныеОбъект.СтандартныеРеквизиты Цикл
		ДобавитьРеквизитПоМетаданнымОбъекта(Реквизиты, Реквизит, Префикс, СведенияОСпискеРеквизитов, СведенияОИсключаемыхРеквизитах);
	КонецЦикла;
	
	Если НЕ ОбщегоНазначения.ЭтоПеречисление(МетаданныеОбъект) Тогда
		ДобавитьРеквизитыСвойств(МетаданныеОбъект, Префикс, Реквизиты, СведенияОИсключаемыхРеквизитах, СведенияОСпискеРеквизитов);
		ДобавитьРеквизитыКонтактнойИнформации(МетаданныеОбъект, Префикс, Реквизиты, СведенияОИсключаемыхРеквизитах, СведенияОСпискеРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьРеквизитыКонтактнойИнформации(МетаданныеОбъект, Префикс, Реквизиты, СведенияОИсключаемыхРеквизитах, СведенияОСпискеРеквизитов)
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		Ссылка = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(МетаданныеОбъект.ПолноеИмя()).ПустаяСсылка();
		МодульУправлениеКонтактнойИнформацией = ОбщегоНазначения.ОбщийМодуль("УправлениеКонтактнойИнформацией");
		ВидыКонтактнойИнформацией = МодульУправлениеКонтактнойИнформацией.ВидыКонтактнойИнформацияОбъекта(Ссылка);
		Если ВидыКонтактнойИнформацией.Количество() > 0 Тогда
			Для каждого ВидКонтактнойИнформацией Из ВидыКонтактнойИнформацией Цикл
				ДобавитьРеквизитПоМетаданнымОбъекта(Реквизиты, ВидКонтактнойИнформацией.Ссылка, Префикс, СведенияОСпискеРеквизитов, СведенияОИсключаемыхРеквизитах);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьРеквизитыСвойств(МетаданныеОбъект, Префикс, Реквизиты, СведенияОИсключаемыхРеквизитах, СведенияОСпискеРеквизитов)
	
	Свойства = Новый Массив;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
		МодульУправлениеСвойствами = ОбщегоНазначения.ОбщийМодуль("УправлениеСвойствами");
		ПустаяСсылка = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(МетаданныеОбъект.ПолноеИмя()).ПустаяСсылка();
		ПолучатьДопСведения = МодульУправлениеСвойствами.ИспользоватьДопСведения(ПустаяСсылка);
		ПолучатьДопРеквизиты = МодульУправлениеСвойствами.ИспользоватьДопРеквизиты(ПустаяСсылка);
		
		Если ПолучатьДопРеквизиты Или ПолучатьДопСведения Тогда
			Свойства = МодульУправлениеСвойствами.СвойстваОбъекта(ПустаяСсылка, ПолучатьДопРеквизиты, ПолучатьДопСведения);
			Для каждого Свойство Из Свойства Цикл
				ДобавитьРеквизитПоМетаданнымОбъекта(Реквизиты, Свойство, Префикс, СведенияОСпискеРеквизитов, СведенияОИсключаемыхРеквизитах);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьРеквизитПоМетаданнымОбъекта(Реквизиты, Реквизит, Префикс, СведенияОСпискеРеквизитов, СведенияОИсключаемыхРеквизитах);
	
	Если ТипЗнч(Реквизит) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
		ИмяРеквизита = Реквизит.Наименование;
		Представление = Реквизит.Наименование;
		Тип = Реквизит.ТипЗначения;
		Формат = Реквизит.ФорматСвойства;
	ИначеЕсли ТипЗнч(Реквизит) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
		ИмяРеквизита = Реквизит.Наименование;
		Представление = Реквизит.Наименование;
		Тип = Новый ОписаниеТипов("Строка");
		Формат = "";
	Иначе
		ИмяРеквизита = Реквизит.Имя;
		Представление = Реквизит.Представление();
		Тип = Реквизит.Тип;
		Формат = Реквизит.Формат;
	КонецЕсли;
	
	Если СведенияОСпискеРеквизитов.СписокСодержитДанные
		И СведенияОСпискеРеквизитов.СписокРеквизитов.Найти(ВРег(СокрЛП(ИмяРеквизита))) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОИсключаемыхРеквизитах.СписокСодержитДанные
		И СведенияОИсключаемыхРеквизитах.СписокРеквизитов.Найти(ВРег(СокрЛП(ИмяРеквизита))) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НовыйСтрока = Реквизиты.Добавить();
	НовыйСтрока.Имя = Префикс + ИмяРеквизита;
	НовыйСтрока.Представление = Представление;
	НовыйСтрока.Тип = Тип;
	НовыйСтрока.Формат = Формат;
	
КонецПроцедуры

//ПараметрыШаблона - Ссылка на шаблон
Процедура ОпределитьСписокРеквизитовИВложений(СведенияОШаблоне, ПараметрыШаблона)
	
	// Реквизиты
	МетаданныеОбъект = ПолучитьМетаданныеОбластиПрименения(ПараметрыШаблона.ОбластьПрименения);
	РеквизитыОбъектаНазначения = РеквизитыОбъектаНазначения(СведенияОШаблоне.Реквизиты, ПараметрыШаблона.ОбластьПрименения);
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(МетаданныеОбъект.ПолноеИмя());
	РеквизитыПоМетаданнымОбъекта(РеквизитыОбъектаНазначения, МетаданныеОбъект,,, МетаданныеОбъект.Имя + ".");
	
	Префикс = МетаданныеОбъект.Имя + ".";
	Представление = МетаданныеОбъект.Представление();
	
	СсылкаНаОбъект = РеквизитыОбъектаНазначения.Добавить();
	СсылкаНаОбъект.Представление = НСтр("ru = 'Ссылка на'") + " """ + Представление + """";
	СсылкаНаОбъект.Имя           = Префикс + "ВнешняяСсылкаНаОбъект";
	СсылкаНаОбъект.Тип  = Новый ОписаниеТипов("Строка");
		
	//МенеджерОбъекта.ПриПодготовкеШаблонаСообщения(РеквизитыОбъектаНазначения, СведенияОШаблоне.Вложения, ПараметрыШаблона);
	
	Для каждого РеквизитОбъектаНазначения Из РеквизитыОбъектаНазначения Цикл
		Если Не СтрНачинаетсяС(РеквизитОбъектаНазначения.Имя, Префикс) Тогда
			РеквизитОбъектаНазначения.Имя = Префикс + РеквизитОбъектаНазначения.Имя;
		КонецЕсли;
		Если РеквизитОбъектаНазначения.Тип.Типы().Количество() = 1 Тогда
			ТипОбъекта = Метаданные.НайтиПоТипу(РеквизитОбъектаНазначения.Тип.Типы()[0]);
			Если ТипОбъекта <> Неопределено И СтрНачинаетсяС(ТипОбъекта.ПолноеИмя(), "Справочник") Тогда
				РазвернутьРеквизит(РеквизитОбъектаНазначения.Имя, РеквизитыОбъектаНазначения);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Реквизиты объекта основания.
//
// Параметры:
//  Реквизиты - ДеревоЗначений - где:
//   * Имя - Строка - 
//   * Представление - Строка - 
//  ПолноеИмяТипаНазначения - Строка -
//  Представление - Строка -
// 
// Возвращаемое значение:
//  ДеревоЗначений - где:
//    * Имя - Строка - 
//    * Представление - Строка -
//
Функция РеквизитыОбъектаНазначения(Реквизиты, ОбластьПрименения)
	
	МетаданныеОбъект = ПолучитьМетаданныеОбластиПрименения(ОбластьПрименения);
	ИмяРодителя = МетаданныеОбъект.Имя;
	Представление = МетаданныеОбъект.Представление();
	
	УзелРеквизитовОбъектаНазначения = Реквизиты.Строки.Найти(ИмяРодителя, "Имя");
	Если УзелРеквизитовОбъектаНазначения = Неопределено Тогда
		УзелРеквизитовОбъектаНазначения = Реквизиты.Строки.Добавить();
		УзелРеквизитовОбъектаНазначения.Имя = ИмяРодителя;
		УзелРеквизитовОбъектаНазначения.Представление = Представление;
	КонецЕсли;
	
	Возврат УзелРеквизитовОбъектаНазначения.Строки;
	
КонецФункции

Процедура СкрываемыеСтандартныеРеквизиты(Массив)
	
	ДобавитьВМассивУникальноеЗначение(Массив, "ПометкаУдаления");
	ДобавитьВМассивУникальноеЗначение(Массив, "Проведен");
	ДобавитьВМассивУникальноеЗначение(Массив, "Ссылка");
	ДобавитьВМассивУникальноеЗначение(Массив, "Предопределенный");
	ДобавитьВМассивУникальноеЗначение(Массив, "ИмяПредопределенныхДанных");
	ДобавитьВМассивУникальноеЗначение(Массив, "ЭтоГруппа");
	ДобавитьВМассивУникальноеЗначение(Массив, "Родитель");
	ДобавитьВМассивУникальноеЗначение(Массив, "Владелец");
	
КонецПроцедуры

Процедура ДобавитьВМассивУникальноеЗначение(Массив, Значение)
	Если Массив.Найти(Значение) = Неопределено Тогда
		Массив.Добавить(ВРег(Значение));
	КонецЕсли;
КонецПроцедуры

#Область ОбработкаСообщения
	
// Создание сообщения по шаблону
// Параметры:
//  ПараметрыОтправки - Структура - где:
//    * ДополнительныеПараметры - Структура -
//
// Возвращаемое значение:
//   Структура - Описание:
//   * Вложения - ТаблицаЗначений - где:
//     ** Представление - Строка - 
//     ** АдресВоВременномХранилище - Строка - 
//     ** Кодировка - Строка -  
//     ** Идентификатор - Строка -  
//   * СообщенияПользователю - ФиксированныйМассив -
//   * ДополнительныеПараметры - Структура - где:
//     ** Отправитель - Строка -
//   * Получатель - Неопределено -
//   * Текст - Строка -
//   * Тема - Строка -
//
Функция СформироватьСообщение(Шаблон, Предмет, ТекстШаблона) Экспорт
	
	Если Шаблон = Справочники.ШаблоныТекстов.ПустаяСсылка() Тогда
		Возврат "";
	КонецЕсли;
	Если Предмет = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	
	// Извлекаем из шаблона параметры
	ПараметрыТекстаСообщения = ПараметрыИзТекстаСообщения(ТекстШаблона);
	
	// Заполняем параметры
	Сообщение = ЗаполнитьПараметрыСообщения(Предмет, ПараметрыТекстаСообщения);
	
	//МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Предмет.Ссылка);
	//Если МенеджерОбъекта <> Неопределено Тогда
	//	МенеджерОбъекта.ПриФормированииСообщения(Сообщение, ПараметрыОтправки.Предмет, ПараметрыШаблона);
	//КонецЕсли;
	
	// Заполнение значений параметров
	Результат = УстановитьЗначенияРеквизитовВТекстСообщения(ТекстШаблона, ПараметрыТекстаСообщения);
	
	Возврат Результат;
	
КонецФункции

// Возвращает соответствие параметров текста сообщения шаблона.
//
// Параметры:
//  ТекстШаблона - текст.
//
// Возвращаемое значение:
//  Соответствие   - соответствие имеющихся в тексте сообщения параметров.
//
Функция ПараметрыИзТекстаСообщения(ТекстШаблона) Экспорт
	
	МассивПараметров = Новый Соответствие;
	
	ДлинаСообщения = СтрДлина(ТекстШаблона);
	
	Текст = ТекстШаблона;
	Позиция = СтрНайти(Текст, "[");
	Пока Позиция > 0 Цикл
		Если Позиция + 1 > ДлинаСообщения Тогда
			Прервать;
		КонецЕсли;
		ПозицияОкончание = СтрНайти(Текст, "]", НаправлениеПоиска.СНачала, Позиция + 1);
		Если ПозицияОкончание > 0 Тогда
			НайденныйПараметр = Сред(Текст, Позиция + 1, ПозицияОкончание - Позиция - 1);
			МассивПараметров.Вставить(НайденныйПараметр, "");
		ИначеЕсли ПозицияОкончание = 0 Тогда
			ПозицияОкончание = Позиция + 1;
		КонецЕсли;
		Если ПозицияОкончание > ДлинаСообщения Тогда
			Прервать;
		КонецЕсли;
		Позиция = СтрНайти(Текст, "[", НаправлениеПоиска.СНачала, ПозицияОкончание);
	КонецЦикла;
	
	СоответствиеПараметров = Новый Соответствие;
	Для каждого ЭлементаМассиваПараметров Из МассивПараметров Цикл
		ПозицияФормат = СтрНайти(ЭлементаМассиваПараметров.Ключ, "{");
		Если ПозицияФормат > 0 Тогда
			ИмяПараметра  = Лев(ЭлементаМассиваПараметров.Ключ, ПозицияФормат - 1);
			СтрокаФормата = Сред(ЭлементаМассиваПараметров.Ключ, ПозицияФормат );
		Иначе
			ИмяПараметра  = ЭлементаМассиваПараметров.Ключ;
			СтрокаФормата = "";
		КонецЕсли;
		МассивРазобранныйПараметр = СтрРазделить(ИмяПараметра, ".", Ложь);
		Если МассивРазобранныйПараметр.Количество() < 2 Тогда
			Продолжить;
		КонецЕсли;
		
		УстановитьЭлементСоответствия(СоответствиеПараметров, МассивРазобранныйПараметр, СтрокаФормата);
	КонецЦикла;
	
	Возврат СоответствиеПараметров;
	
КонецФункции

Процедура УстановитьЭлементСоответствия(СоответствиеПараметров, Знач МассивРазобранныйПараметр, СтрокаФормата)
	ЭлементСоответствия = СоответствиеПараметров.Получить(МассивРазобранныйПараметр[0]);
	Если ЭлементСоответствия = "" Тогда //Уже существует реквизит
		СоответствиеПараметров.Вставить(МассивРазобранныйПараметр[0]+"_Ссылка", "");
		ЭлементСоответствия = Неопределено;
	КонецЕсли;
	Если ЭлементСоответствия = Неопределено Тогда
		Если МассивРазобранныйПараметр.Количество() > 1 Тогда
			ВнутреннийЭлементСоответствия = Новый Соответствие;
			СоответствиеПараметров.Вставить(МассивРазобранныйПараметр[0], ВнутреннийЭлементСоответствия);
			МассивРазобранныйПараметр.Удалить(0);
			УстановитьЭлементСоответствия(ВнутреннийЭлементСоответствия, МассивРазобранныйПараметр, СтрокаФормата)
		Иначе
			Если СоответствиеПараметров[МассивРазобранныйПараметр[0] + СтрокаФормата] = Неопределено Тогда
				СоответствиеПараметров.Вставить(МассивРазобранныйПараметр[0] + СтрокаФормата, "");
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если МассивРазобранныйПараметр.Количество() > 1 Тогда
			МассивРазобранныйПараметр.Удалить(0);
			УстановитьЭлементСоответствия(ЭлементСоответствия, МассивРазобранныйПараметр, СтрокаФормата)
		Иначе
			Если СоответствиеПараметров[МассивРазобранныйПараметр[0] + СтрокаФормата] = Неопределено Тогда
				СоответствиеПараметров.Вставить(МассивРазобранныйПараметр[0] + СтрокаФормата, "");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ЗаполнитьПараметрыСообщения(Предмет, ПараметрыТекстаСообщения)
	
	Сообщение = Новый Структура("ЗначенияРеквизитов, ЗначенияОбщихРеквизитов");
	Сообщение.ЗначенияОбщихРеквизитов = Новый Соответствие;
	Сообщение.ЗначенияРеквизитов = Новый Соответствие;
	ИмяОбъекта = "";
	
	Если Предмет <> Неопределено Тогда
		ПредметМетаданные = Предмет.Ссылка.Метаданные(); // ОбъектМетаданных
		ИмяОбъекта = ПредметМетаданные.Имя;
		ПолноеИмяТипаНазначения = ПредметМетаданные.ПолноеИмя();
		
		Если ПараметрыТекстаСообщения[ИмяОбъекта] <> Неопределено Тогда
			
			ЗаполнитьЗначенияРеквизитовПоПараметрам(Сообщение, ПараметрыТекстаСообщения[ИмяОбъекта], Предмет);
			
		Иначе
			Сообщение.ЗначенияРеквизитов = ?(ПараметрыТекстаСообщения[ПолноеИмяТипаНазначения] <> Неопределено,
				ПараметрыТекстаСообщения[ПолноеИмяТипаНазначения], Новый Соответствие);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПараметрыТекстаСообщения[ИмяУзлаОбщихРеквизитов()] <> Неопределено Тогда
		ЗаполнитьОбщиеРеквизиты(ПараметрыТекстаСообщения[ИмяУзлаОбщихРеквизитов()]);
		Сообщение.ЗначенияОбщихРеквизитов = ПараметрыТекстаСообщения[ШаблоныТекстовСлужебный.ИмяУзлаОбщихРеквизитов()];
	КонецЕсли;
	
	Возврат Сообщение;
	
КонецФункции

Процедура ЗаполнитьЗначенияРеквизитовПоПараметрам(Сообщение, Знач ПараметрыТекстаСообщения, Предмет)
	
	//Заполнение значений реквизитов
	ЗаполнитьРеквизитыПоПредмету(ПараметрыТекстаСообщения, Предмет);
	
	ЗаполнитьРеквизитыСвойствИКонтактнойИнформации(ПараметрыТекстаСообщения, Предмет);
	Сообщение.ЗначенияРеквизитов = ПараметрыТекстаСообщения;

КонецПроцедуры

Процедура ЗаполнитьРеквизитыПоПредмету(Реквизиты, Предмет)
	
	МетаданныеОбъекта = Предмет.Ссылка.Метаданные();
	ПараметрыОснования = ОпределитьРеквизитыДляЗапросаПоМетаданным(Реквизиты, МетаданныеОбъекта);
	
	СписокРеквизитов = Сред(СписокПараметров(ПараметрыОснования), 3);
	Если ЗначениеЗаполнено(СписокРеквизитов) Тогда
		Запрос = Новый Запрос;
		ЗапросТекст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	%1
		|ИЗ
		|	%2 КАК %3
		|ГДЕ
		|	%3.Ссылка = &Ссылка";

		ЗапросТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ЗапросТекст, СписокРеквизитов, МетаданныеОбъекта.ПолноеИмя(), МетаданныеОбъекта.Имя);
		
		Запрос.УстановитьПараметр("Ссылка", Предмет.Ссылка);
		Запрос.Текст = ЗапросТекст;
		
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		Если РезультатЗапроса.Количество() > 0 Тогда
			РезультатЗапроса = СтрокаТаблицыЗначенийВСоответствие(РезультатЗапроса[0]);
			УстановитьПараметрыИзЗапроса(Реквизиты, РезультатЗапроса);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ОпределитьРеквизитыДляЗапросаПоМетаданным(Знач ПараметрыТекстаСообщения, МетаданныеОбъекта)
	
	ПараметрыОснования = СкопироватьСоответствие(ПараметрыТекстаСообщения);
	ОбработатьОпределитьРеквизитыДляЗапросаПоМетаданным(ПараметрыОснования, МетаданныеОбъекта);
	Возврат ПараметрыОснования;
	
КонецФункции

Процедура ОбработатьОпределитьРеквизитыДляЗапросаПоМетаданным(ПараметрыОснования, МетаданныеОбъекта)
	
	Для каждого ПараметрОснования Из ПараметрыОснования Цикл
		Позиция = СтрНайти(ПараметрОснования.Ключ, "{");
		Если Позиция > 0 Тогда
			ИмяПараметра = Лев(ПараметрОснования.Ключ, Позиция - 1);
		Иначе
			ИмяПараметра = ПараметрОснования.Ключ;
		КонецЕсли;
		Если ТипЗнч(ПараметрОснования.Значение) = Тип("Соответствие") Тогда
			МетаданныеОбъектаПоКлючу = МетаданныеОбъекта.Реквизиты.Найти(ИмяПараметра);
			Если МетаданныеОбъектаПоКлючу <> Неопределено Тогда
				Для каждого Тип Из МетаданныеОбъектаПоКлючу.Тип.Типы() Цикл
					ОбработатьОпределитьРеквизитыДляЗапросаПоМетаданным(ПараметрОснования.Значение, Метаданные.НайтиПоТипу(Тип));
				КонецЦикла;
			Иначе
				ПараметрыОснования.Удалить(ПараметрОснования.Ключ);
			КонецЕсли;
		ИначеЕсли МетаданныеОбъекта.Реквизиты.Найти(ИмяПараметра) = Неопределено Тогда
			РеквизитНеНайден = Истина;
			Для каждого СтандартныеРеквизиты Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
				Если СтрСравнить(СтандартныеРеквизиты.Имя, ИмяПараметра) = 0 Тогда
					РеквизитНеНайден = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если РеквизитНеНайден Тогда
				ПараметрыОснования.Удалить(ПараметрОснования.Ключ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция СписокПараметров(ПараметрыТекстаСообщения, Префикс = "")
	
	СписокРеквизитов = "";
	Для каждого Реквизит Из ПараметрыТекстаСообщения Цикл
		Если ТипЗнч(Реквизит.Значение) = Тип("Соответствие") Тогда
			СписокРеквизитов = СписокРеквизитов + СписокПараметров(Реквизит.Значение, Реквизит.Ключ + ".");
		КонецЕсли;
		ИмяРеквизита = Реквизит.Ключ;
		ПозицияФормат = СтрНайти(ИмяРеквизита, "{");
		Если ПозицияФормат > 0 Тогда
			ИмяРеквизита = Лев(ИмяРеквизита, ПозицияФормат - 1);
		КонецЕсли;
		СписокРеквизитов = СписокРеквизитов + ", " + Префикс + ИмяРеквизита + " КАК " + СтрЗаменить(Префикс + ИмяРеквизита, ".", "_");
	КонецЦикла;
	
	Возврат СписокРеквизитов;
	
КонецФункции

Функция СкопироватьСоответствие(Источник)
	
	Получатель = Новый Соответствие;
	
	Для каждого Элемент Из Источник Цикл
		Если ТипЗнч(Элемент.Значение) = Тип("Соответствие") Тогда
			Получатель[Элемент.Ключ] = СкопироватьСоответствие(Элемент.Значение);
		Иначе
			Получатель[Элемент.Ключ] = Элемент.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Получатель;
	
КонецФункции

Функция СтрокаТаблицыЗначенийВСоответствие(СтрокаТаблицыЗначений)
	
	Соответствие = Новый Соответствие;
	Для каждого Колонка Из СтрокаТаблицыЗначений.Владелец().Колонки Цикл
		Соответствие.Вставить(Колонка.Имя, СтрокаТаблицыЗначений[Колонка.Имя]);
	КонецЦикла;
	
	Возврат Соответствие;
	
КонецФункции

Процедура УстановитьПараметрыИзЗапроса(Параметры, Результат, Знач Префикс = "")
	
	Если ЗначениеЗаполнено(Префикс) Тогда
		Префикс = Префикс + "_";
	КонецЕсли;
	Для каждого ЗначениеПараметра Из Параметры Цикл
		Если ТипЗнч(Параметры[ЗначениеПараметра.Ключ]) = Тип("Соответствие") Тогда
			УстановитьПараметрыИзЗапроса(Параметры[ЗначениеПараметра.Ключ], Результат, Префикс + ЗначениеПараметра.Ключ);
		Иначе
			Если ПустаяСтрока(ЗначениеПараметра.Значение) Тогда
				ПозицияФормата = СтрНайти(ЗначениеПараметра.Ключ, "{");
				Если ПозицияФормата > 0 Тогда
					ИмяПараметра = Лев(ЗначениеПараметра.Ключ, ПозицияФормата - 1);
					СтрокаФормата =Сред(ЗначениеПараметра.Ключ, ПозицияФормата + 1, СтрДлина(ЗначениеПараметра.Ключ) - СтрДлина(ИмяПараметра) -2);
					Значение = Результат.Получить(Префикс + ИмяПараметра);
					Если СтрНачинаетсяС(СтрокаФормата , "Д") Тогда
						Параметры[ЗначениеПараметра.Ключ] = Формат(ПреобразоватьСтрокиКТипу(Значение, "Дата"), СтрокаФормата);
					ИначеЕсли СтрНачинаетсяС(СтрокаФормата , "Ч") Тогда
						Параметры[ЗначениеПараметра.Ключ] = Формат(ПреобразоватьСтрокиКТипу(Значение, "Число"), СтрокаФормата);
					ИначеЕсли СтрНачинаетсяС(СтрокаФормата , "Б") Тогда
						Параметры[ЗначениеПараметра.Ключ] = Формат(ПреобразоватьСтрокиКТипу(Значение, "Булево"), СтрокаФормата);
					Иначе
						Параметры[ЗначениеПараметра.Ключ] = Формат(Результат.Получить(Префикс + ИмяПараметра), СтрокаФормата);
					КонецЕсли;
				ИначеЕсли Прав(ЗначениеПараметра.Ключ, 7) = "_Ссылка" Тогда //Заполнение дополнительных полей
					ИзмененныйКлюч = Лев(ЗначениеПараметра.Ключ, СтрДлина(ЗначениеПараметра.Ключ)-7);
					Параметры[ЗначениеПараметра.Ключ] = ?(Результат[Префикс + ИзмененныйКлюч] <> Неопределено, Результат[Префикс + ИзмененныйКлюч], "");
				Иначе
					Параметры[ЗначениеПараметра.Ключ] = ?(Результат[Префикс + ЗначениеПараметра.Ключ] <> Неопределено, Результат[Префикс + ЗначениеПараметра.Ключ], "");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьРеквизитыСвойствИКонтактнойИнформации(ПараметрыТекстаСообщения, Предмет);
	
	МетаданныеОбъекта = Предмет.Ссылка.Метаданные();
	ЗначенияСвойств = ЗначенияРеквизитовСвойств(Предмет);
	КонтактнаяИнформацияОбъектов = ЗначенияРеквизитовКонтактнойИнформации(Предмет);
	
	Для каждого ПараметрОснования Из ПараметрыТекстаСообщения Цикл
		Если ТипЗнч(ПараметрОснования.Значение) = Тип("Соответствие") Тогда
			МетаданныеОбъектаПоКлючу = МетаданныеОбъекта.Реквизиты.Найти(ПараметрОснования.Ключ);
			Если МетаданныеОбъектаПоКлючу <> Неопределено Тогда
				ЗаполнитьРеквизитыСвойствИКонтактнойИнформации(ПараметрОснования.Значение, Предмет[ПараметрОснования.Ключ]);
			КонецЕсли;
		Иначе
			РеквизитНеНайден = Истина;
			Если ЗначенияСвойств <> Неопределено Тогда
				Для каждого СтрокаСвойство Из ЗначенияСвойств Цикл
					Если СтрСравнить(СтрокаСвойство.Свойство.Наименование, ПараметрОснования.Ключ) = 0 Тогда
						ПараметрыТекстаСообщения[ПараметрОснования.Ключ] = Строка(СтрокаСвойство.Значение);
						РеквизитНеНайден = Ложь;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если РеквизитНеНайден И КонтактнаяИнформацияОбъектов <> Неопределено Тогда
				Для каждого КонтактнаяИнформацияОбъекта Из КонтактнаяИнформацияОбъектов Цикл
					Если СтрСравнить(КонтактнаяИнформацияОбъекта.Вид.Наименование, ПараметрОснования.Ключ) = 0 Тогда
						Если ЗначениеЗаполнено(ПараметрыТекстаСообщения[ПараметрОснования.Ключ]) Тогда
							ПредыдущиеЗначение = ПараметрыТекстаСообщения[ПараметрОснования.Ключ] +", ";
						Иначе
							ПредыдущиеЗначение = "";
						КонецЕсли;
						ПараметрыТекстаСообщения[ПараметрОснования.Ключ] = ПредыдущиеЗначение + Строка(КонтактнаяИнформацияОбъекта.Представление);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ЗначенияРеквизитовКонтактнойИнформации(Предмет)
	
	КонтактнаяИнформацияОбъектов = Неопределено;
		
	ОбъектыСКонтактнойИнформацией = Новый Массив;
	ОбъектыСКонтактнойИнформацией.Добавить(Предмет);
	ВидыКонтактнойИнформации = УправлениеКонтактнойИнформацией.ВидыКонтактнойИнформацияОбъекта(Предмет.Ссылка);
	Если ВидыКонтактнойИнформации.Количество() > 0 Тогда
		КонтактнаяИнформацияОбъектов = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(ОбъектыСКонтактнойИнформацией,,, ТекущаяДатаСеанса());
	КонецЕсли;
	
	Возврат КонтактнаяИнформацияОбъектов;
	
КонецФункции

Процедура ЗаполнитьОбщиеРеквизиты(ОбщиеРеквизиты)
	
	Если ТипЗнч(ОбщиеРеквизиты) = Тип("Соответствие") Тогда
		Если ОбщиеРеквизиты.Получить("ТекущаяДата") <> Неопределено Тогда
			ОбщиеРеквизиты["ТекущаяДата"] = ТекущаяДатаСеанса();
		КонецЕсли;
		Если ОбщиеРеквизиты.Получить("ЗаголовокСистемы") <> Неопределено Тогда
			ОбщиеРеквизиты["ЗаголовокСистемы"] = ИмяЭтойИнформационнойБазы();
		КонецЕсли;
		Если ОбщиеРеквизиты.Получить("АдресБазыВИнтернете") <> Неопределено Тогда
			ОбщиеРеквизиты["АдресБазыВИнтернете"] = ОбщегоНазначения.АдресПубликацииИнформационнойБазыВИнтернете();
		КонецЕсли;
		Если ОбщиеРеквизиты.Получить("АдресБазыВЛокальнойСети") <> Неопределено Тогда
			ОбщиеРеквизиты["АдресБазыВЛокальнойСети"] = ОбщегоНазначения.АдресПубликацииИнформационнойБазыВЛокальнойСети();
		КонецЕсли;
		Если ОбщиеРеквизиты.Получить("ТекущийПользователь") <> Неопределено Тогда
			ТекущийПользователь = Пользователи.АвторизованныйПользователь();
			ОбщиеРеквизиты["ТекущийПользователь"] = ТекущийПользователь;
			Если ТипЗнч(ОбщиеРеквизиты.Получить("ТекущийПользователь")) = Тип("Соответствие") Тогда
				ЗаполнитьРеквизитыПоПредмету(ОбщиеРеквизиты.Получить("ТекущийПользователь"), ТекущийПользователь);
				ЗаполнитьРеквизитыСвойствИКонтактнойИнформации(ОбщиеРеквизиты.Получить("ТекущийПользователь"), ТекущийПользователь);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Получает заголовок системы, а если он не задан - синоним метаданных конфигурации.
Функция ИмяЭтойИнформационнойБазы()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Константы.ЗаголовокСистемы.Получить();
	
	Если ПустаяСтрока(Результат) Тогда
		
		Результат = Метаданные.Синоним;
		
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция УстановитьЗначенияРеквизитовВТекстСообщения(ТекстШаблона, ПараметрыТекстаСообщения, Знач Префикс = "")
	
	Результат = ТекстШаблона;
	Для каждого СписокРеквизитов Из ПараметрыТекстаСообщения Цикл
		Если ТипЗнч(СписокРеквизитов.Значение) = Тип("Соответствие") Тогда
			Результат = УстановитьЗначенияРеквизитовВТекстСообщения(Результат, СписокРеквизитов.Значение, Префикс + СписокРеквизитов.Ключ + ".");
		Иначе
			Результат = СтрЗаменить(Результат, "[" + Префикс + СписокРеквизитов.Ключ + "]", СписокРеквизитов.Значение);
			Если Прав(СписокРеквизитов.Ключ, 7) = "_Ссылка" Тогда //Заполнение дополнительных полей
				ИзмененныйКлюч = Лев(СписокРеквизитов.Ключ, СтрДлина(СписокРеквизитов.Ключ)-7);
				Результат = СтрЗаменить(Результат, "[" + Префикс + ИзмененныйКлюч + "]", СписокРеквизитов.Значение);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция ЗначенияРеквизитовСвойств(Предмет)
	
	ЗначенияСвойств = Новый ТаблицаЗначений;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
		МодульУправлениеСвойствами = ОбщегоНазначения.ОбщийМодуль("УправлениеСвойствами");
		ПолучатьДопСведения = МодульУправлениеСвойствами.ИспользоватьДопСведения(Предмет.Ссылка);
		ПолучатьДопРеквизиты = МодульУправлениеСвойствами.ИспользоватьДопРеквизиты(Предмет.Ссылка);
		
		Если ПолучатьДопРеквизиты Или ПолучатьДопСведения Тогда
			ЗначенияСвойств = МодульУправлениеСвойствами.ЗначенияСвойств(Предмет.Ссылка, ПолучатьДопРеквизиты, ПолучатьДопСведения);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ЗначенияСвойств;
	
КонецФункции

Функция ПреобразоватьСтрокиКТипу(Значение, Тип)
	ОписаниеТипа = Новый ОписаниеТипов(Тип);
	Возврат ОписаниеТипа.ПривестиЗначение(Значение);
КонецФункции


#КонецОбласти
