Функция ПолучитьОсновногоЗаказчикаПроекта(Знач Проект) Экспорт
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Проект, "ОсновнойЗаказчик");
КонецФункции

Процедура ЗаполнитьГруппуИзмененияСтатуса(ЭлементыФормы, КомандыФормы, Знач ИмяПроцедуры, Знач ИмяЭлемента, Знач ГруппаФормы, Знач СтатусыИсключения = Неопределено) Экспорт
	
	Если СтатусыИсключения = Неопределено Тогда
		СтатусыИсключения = Новый Массив;
	КонецЕсли;
	Для каждого Статус Из Перечисления.СтатусыЗадач Цикл
		
		Если СтатусыИсключения.Найти(Статус) <> Неопределено Тогда Продолжить; КонецЕсли;
		
		ИмяКоманды = ИмяПроцедуры + XMLСтрока(Статус);
		Команда = КомандыФормы.Добавить(ИмяКоманды);
		Команда.Заголовок = Статус;
		Команда.Действие = ИмяПроцедуры;
		Элемент = ЭлементыФормы.Добавить(ИмяЭлемента + Команда.Имя, Тип("КнопкаФормы"), ГруппаФормы);
		Элемент.ИмяКоманды = ИмяКоманды;
	КонецЦикла;
КонецПроцедуры

Процедура УстановитьСтатусИсполнителяЗадач(Знач ВыделенныеСтроки, Знач Статус, Знач Исполнитель = Неопределено) Экспорт
	Документы.Задачи.УстановитьСтатусИсполнителяЗадач(ВыделенныеСтроки, Статус, Исполнитель);
КонецПроцедуры

Функция НеобходимоВыбратьИсполнителя(Знач МассивЗадач, Знач Статус, Знач Исполнитель) Экспорт
	
	Если ЗначениеЗаполнено(Исполнитель) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Документы.Задачи.ПолучитьСтатусыБезПроверкиИсполнителя().Найти(Статус) <> Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СоответствиеЗначений = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивЗадач, "Исполнитель");
	Для каждого КлючИЗначение Из СоответствиеЗначений Цикл
		Если Не ЗначениеЗаполнено(КлючИЗначение.Значение) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

Процедура УстановитьСледующийСтатусЗадачи(Знач ВыделенныеСтроки, Предыдущий = Ложь) Экспорт
	
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	ВсегоСтатусов = Перечисления.СтатусыЗадач.Количество()-1;
	ИндексСтатуса = Перечисления.СтатусыЗадач.Индекс(ВыделенныеСтроки[0].Статус);
	//С последних статусов состояния задач изменять не нужно
	Если (Предыдущий И ИндексСтатуса = 0) ИЛИ (Не Предыдущий И ИндексСтатуса = ВсегоСтатусов) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Изменение статуса не выполнено.");
		Возврат;
	КонецЕсли;
	НовыйСтатус = Перечисления.СтатусыЗадач[ИндексСтатуса + ?(Предыдущий,-1,1)];
	Документы.Задачи.УстановитьСтатусИсполнителяЗадач(ВыделенныеСтроки, НовыйСтатус);
	
КонецПроцедуры

Функция ИспользованиеШаблоновЗадач() Экспорт
	ПараметрыВозврата = Новый Структура("Ключ,Значение");
	Пользователь = ПараметрыСеанса.АвторизованныйПользователь;
	Если  ТипЗнч(Пользователь) = Тип("СправочникСсылка.ВнешниеПользователи") Тогда
		ПараметрыВозврата.Вставить("Ключ","Заказчик");
		ПараметрыВозврата.Вставить("Значение", Пользователь.ОбъектАвторизации.Владелец);
	Иначе
		ПараметрыВозврата.Вставить("Ключ","Исполнитель");
		ПараметрыВозврата.Вставить("Значение", Пользователь);
	КонецЕсли;
	УстановитьПривилегированныйРежим(Истина);
	Возврат Не Справочники.ШаблоныЗадач.НайтиПоРеквизиту(ПараметрыВозврата.Ключ, ПараметрыВозврата.Значение).Пустая();
КонецФункции

Функция ПолучитьЦветПриоритета(Приоритет) Экспорт
	Возврат РегистрыСведений.ЦветаПриоритетов.ПолучитьЦветПриоритета(Приоритет);
КонецФункции

