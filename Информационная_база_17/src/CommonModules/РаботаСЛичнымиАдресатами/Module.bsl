
// Записывает личные контакты в информационную базу
Функция ЗаписатьКонтакты(МассивКонтактов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЧислоЗагруженных = 0;
	
	Для Каждого Описание Из МассивКонтактов Цикл
		
		Элемент = Справочники.ЛичныеАдресаты.СоздатьЭлемент();
		
		Элемент.Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
		
		Элемент.Наименование = Описание.Наименование;
		Если Не ЗначениеЗаполнено(Элемент.Наименование) Тогда
			Элемент.Наименование = Описание.ПредставлениеEmail;
		КонецЕсли;	
		
		Элемент.Организация = Описание.Организация;
		Элемент.Должность = Описание.Должность;
		
		// EmailАдресата
		Если ЗначениеЗаполнено(Описание.EmailАдресата) И Найти(Описание.EmailАдресата, "@") <> 0 Тогда
			НовСтр = Элемент.КонтактнаяИнформация.Добавить();
			НовСтр.ЗначенияПолей = Описание.EmailАдресата;
			НовСтр.АдресЭП = Описание.EmailАдресата;
			НовСтр.Представление = Описание.EmailАдресата;
			НовСтр.Вид = Справочники.ВидыКонтактнойИнформации.EmailАдресата;
			НовСтр.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
		КонецЕсли;
		
		// РабочийТелефонАдресата
		Если ЗначениеЗаполнено(Описание.РабочийТелефонАдресата) Тогда
			НовСтр = Элемент.КонтактнаяИнформация.Добавить();
			НовСтр.НомерТелефона = Описание.РабочийТелефонАдресата;
			НовСтр.Представление = Описание.РабочийТелефонАдресата;
			НовСтр.ЗначенияПолей = Описание.РабочийТелефонАдресата;
			НовСтр.Вид = Справочники.ВидыКонтактнойИнформации.РабочийТелефонАдресата;
			НовСтр.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
		КонецЕсли;
		
		// ПочтовыйАдресАдресата
		Если ЗначениеЗаполнено(Описание.ПочтовыйАдресАдресата) Тогда
			НовСтр = Элемент.КонтактнаяИнформация.Добавить();
			НовСтр.ЗначенияПолей = Описание.ПочтовыйАдресАдресата;
			НовСтр.Представление = Описание.ПочтовыйАдресАдресата;
			НовСтр.Вид = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресАдресата;
			НовСтр.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
			НовСтр.Город = Описание.Город;
			НовСтр.Страна = Описание.Страна;
			НовСтр.Регион = Описание.Регион;
		КонецЕсли;
		
		Если ЕстьТакойЛичныйАдресат(Элемент) Тогда
			Продолжить;
		КонецЕсли;	
		
		Если ЕстьТакойЗаказчик(Элемент) Тогда
			Продолжить;
		КонецЕсли;	
		
		Если ЕстьТакоеКонтактноеЛицо(Элемент) Тогда
			Продолжить;
		КонецЕсли;	
		
		Элемент.Записать();
		ЧислоЗагруженных = ЧислоЗагруженных + 1;
		
	КонецЦикла;	
	
	Возврат ЧислоЗагруженных;
	
КонецФункции

Функция ЕстьТакойЛичныйАдресат(Элемент) 
	
	Запрос = Новый Запрос;
	Запрос.Текст
	 = "ВЫБРАТЬ
	   |	ЛичныеАдресаты.Наименование,
	   |	ЛичныеАдресаты.КонтактнаяИнформация.(
	   |		Ссылка,
	   |		НомерСтроки,
	   |		АдресЭП,
	   |		Вид,
	   |		Город,
	   |		ДоменноеИмяСервера,
	   |		ЗначенияПолей,
	   |		НомерТелефона,
	   |		НомерТелефонаБезКодов,
	   |		Представление,
	   |		Регион,
	   |		Страна,
	   |		Тип
	   |	)
	   |ИЗ
	   |	Справочник.ЛичныеАдресаты КАК ЛичныеАдресаты
	   |ГДЕ
	   |	ЛичныеАдресаты.Пользователь = &Пользователь";
	   
	Запрос.УстановитьПараметр("Пользователь", ПользователиКлиентСервер.ТекущийПользователь());
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Для Каждого Строка Из Таблица Цикл
		
		Наименование = Строка.Наименование;
		АдресПочты = ПолучитьАдресПочты(Строка.КонтактнаяИнформация);
		Телефон = ПолучитьТелефон(Строка.КонтактнаяИнформация);
		
		НаименованиеНовое = Элемент.Наименование;
		АдресПочтыНовый = ПолучитьАдресПочты(Элемент.КонтактнаяИнформация);
		ТелефонНовый = ПолучитьТелефон(Элемент.КонтактнаяИнформация);
		
		Если Наименование = НаименованиеНовое 
			И АдресПочты = АдресПочтыНовый
			И Телефон = ТелефонНовый Тогда
			Возврат Истина;
		КонецЕсли;	
		
	КонецЦикла;	
	
	Возврат Ложь;
	
КонецФункции

Функция ЕстьТакойЗаказчик(Элемент) 
	
	Запрос = Новый Запрос;
	Запрос.Текст
	 = "ВЫБРАТЬ
	   |	Заказчики.Наименование,
	   |	Заказчики.КонтактнаяИнформация.(
	   |		Ссылка,
	   |		НомерСтроки,
	   |		АдресЭП,
	   |		Вид,
	   |		Город,
	   |		ДоменноеИмяСервера,
	   |		ЗначенияПолей,
	   |		НомерТелефона,
	   |		НомерТелефонаБезКодов,
	   |		Представление,
	   |		Регион,
	   |		Страна,
	   |		Тип
	   |	)
	   |ИЗ
	   |	Справочник.Заказчики КАК Заказчики";
	   
	Таблица = Запрос.Выполнить().Выгрузить();
	Для Каждого Строка Из Таблица Цикл
		
		АдресПочты = ПолучитьАдресПочты(Строка.КонтактнаяИнформация);
		Телефон = ПолучитьТелефон(Строка.КонтактнаяИнформация);
		
		АдресПочтыНовый = ПолучитьАдресПочты(Элемент.КонтактнаяИнформация);
		ТелефонНовый = ПолучитьТелефон(Элемент.КонтактнаяИнформация);
		
		Если (АдресПочты = АдресПочтыНовый И ЗначениеЗаполнено(АдресПочты))
			ИЛИ (Телефон = ТелефонНовый И ЗначениеЗаполнено(Телефон)) Тогда
			Возврат Истина;
		КонецЕсли;	
		
	КонецЦикла;	
	
	Возврат Ложь;
	
КонецФункции

Функция ЕстьТакоеКонтактноеЛицо(Элемент) 
	
	Запрос = Новый Запрос;
	Запрос.Текст
	 = "ВЫБРАТЬ
	   |	КонтактныеЛица.Наименование,
	   |	КонтактныеЛица.КонтактнаяИнформация.(
	   |		Ссылка,
	   |		НомерСтроки,
	   |		АдресЭП,
	   |		Вид,
	   |		Город,
	   |		ДоменноеИмяСервера,
	   |		ЗначенияПолей,
	   |		НомерТелефона,
	   |		НомерТелефонаБезКодов,
	   |		Представление,
	   |		Регион,
	   |		Страна,
	   |		Тип
	   |	)
	   |ИЗ
	   |	Справочник.КонтактныеЛицаЗаказчиков КАК КонтактныеЛица";
	   
	Таблица = Запрос.Выполнить().Выгрузить();
	Для Каждого Строка Из Таблица Цикл
		
		АдресПочты = ПолучитьАдресПочты(Строка.КонтактнаяИнформация);
		Телефон = ПолучитьТелефон(Строка.КонтактнаяИнформация);
		
		АдресПочтыНовый = ПолучитьАдресПочты(Элемент.КонтактнаяИнформация);
		ТелефонНовый = ПолучитьТелефон(Элемент.КонтактнаяИнформация);
		
		Если (АдресПочты = АдресПочтыНовый И ЗначениеЗаполнено(АдресПочты))
			ИЛИ (Телефон = ТелефонНовый И ЗначениеЗаполнено(Телефон)) Тогда
			Возврат Истина;
		КонецЕсли;	
		
	КонецЦикла;	
	
	Возврат Ложь;
	
КонецФункции

Функция ПолучитьАдресПочты(КонтактнаяИнформация)
	
	Для Каждого СтрокаКонтактнойИнформации Из КонтактнаяИнформация Цикл
		Если СтрокаКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
			Возврат СтрокаКонтактнойИнформации.АдресЭП;
		КонецЕсли;	
	КонецЦикла;
	
	Возврат "";
	
КонецФункции

Функция ПолучитьТелефон(КонтактнаяИнформация)
	
	Для Каждого СтрокаКонтактнойИнформации Из КонтактнаяИнформация Цикл
		Если СтрокаКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
			Возврат СтрокаКонтактнойИнформации.Представление;
		КонецЕсли;	
	КонецЦикла;
	
	Возврат "";
	
КонецФункции

// Заполнить контрагента или контактное лицо данными личного адресата и заменить ссылки в письмах
Функция ЗаполнитьКонтактИЗаменитьСсылки(ЛичныйАдресат, Контакт, УникальныйИдентификатор = Неопределено,
	СтрокаОшибки = "") Экспорт
	
	Если ТипЗнч(Контакт) = Тип("СправочникСсылка.Заказчики") Тогда
		// Заполним заказчика
		
		// если Наименование и Ответственный совпадают - считаем что только что создали контрагента и копировать не надо
		Если Контакт.Наименование <> ЛичныйАдресат.Наименование
			Или Контакт.Пользователь <> ЛичныйАдресат.Пользователь Тогда
			
			ЗаблокироватьДанныеДляРедактирования(Контакт);
			ЗаказчикОбъект = Контакт.ПолучитьОбъект();
			
			НеиспользованныеПоля = ЛичныйАдресат.Комментарий;
			
			Для Каждого КонтактИнфоАдресата Из ЛичныйАдресат.КонтактнаяИнформация Цикл
				
				ЕстьПолеТакогоВида = Ложь;
				Для Каждого КонтактИнфоКонтрагента Из ЗаказчикОбъект.КонтактнаяИнформация Цикл
					
					Если Строка(КонтактИнфоКонтрагента.Вид) = Строка(КонтактИнфоАдресата.Вид) Тогда
						
						ЕстьПолеТакогоВида = Истина;
						
						Если НРег(КонтактИнфоКонтрагента.Представление) <> НРег(КонтактИнфоАдресата.Представление) Тогда
							СтрокаОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'Нельзя выполнить преобразование, т.к. у личного адресата и заказчика
									|разные адреса Email (%1 и %2).
									|Выберите другого заказчика или создайте нового.'"),
									КонтактИнфоАдресата.Представление, КонтактИнфоКонтрагента.Представление);
							Возврат Ложь;
						КонецЕсли;	
						
						Прервать;
						
					КонецЕсли;	
					
				КонецЦикла;	
				
				Если ЕстьПолеТакогоВида = Ложь Тогда
					
					Если КонтактИнфоАдресата.Вид = Справочники.ВидыКонтактнойИнформации.EmailАдресата Тогда
						
						НовСтр = ЗаказчикОбъект.КонтактнаяИнформация.Добавить();
						НовСтр.ЗначенияПолей = КонтактИнфоАдресата.ЗначенияПолей;
						НовСтр.АдресЭП = КонтактИнфоАдресата.АдресЭП;
						НовСтр.Представление = КонтактИнфоАдресата.Представление;
						НовСтр.Вид = Справочники.ВидыКонтактнойИнформации.EmailЗаказчика;
						НовСтр.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
						
					КонецЕсли;	
					
					Если КонтактИнфоАдресата.Вид = Справочники.ВидыКонтактнойИнформации.РабочийТелефонАдресата Тогда
						
						НовСтр = ЗаказчикОбъект.КонтактнаяИнформация.Добавить();
						НовСтр.ЗначенияПолей = КонтактИнфоАдресата.ЗначенияПолей;
						НовСтр.Представление = КонтактИнфоАдресата.Представление;
						НовСтр.НомерТелефона = КонтактИнфоАдресата.НомерТелефона;
						НовСтр.НомерТелефонаБезКодов = КонтактИнфоАдресата.НомерТелефонаБезКодов;
						НовСтр.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонЗаказчика;
						НовСтр.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
						
					КонецЕсли;	
					
				Иначе	
					
					НеиспользованныеПоля = НеиспользованныеПоля + " "
						+ Строка(КонтактИнфоАдресата.Вид) + ": " + КонтактИнфоАдресата.ЗначенияПолей + 
						" " + КонтактИнфоАдресата.Представление;
					
				КонецЕсли;	
				
			КонецЦикла;	
			
			ЗаказчикОбъект.Комментарий = ЗаказчикОбъект.Комментарий + " " + НеиспользованныеПоля;
			ЗаказчикОбъект.Записать();
			РазблокироватьДанныеДляРедактирования(Контакт);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Контакт) = Тип("СправочникСсылка.КонтактныеЛицаЗаказчиков") Тогда	
		// заполним контактное лицо
		
		// если Наименование и Должность совпадают - считаем что только что создали контактное лицо и копировать не надо
		Если Контакт.Наименование <> ЛичныйАдресат.Наименование
			Или Контакт.РольКонтактногоЛица <> ЛичныйАдресат.Должность Тогда
		
			ЗаблокироватьДанныеДляРедактирования(Контакт);
			КонтактноеЛицоОбъект = Контакт.ПолучитьОбъект();
			
			НеиспользованныеПоля = ЛичныйАдресат.Комментарий;
			
			Для Каждого КонтактИнфоАдресата Из ЛичныйАдресат.КонтактнаяИнформация Цикл
				
				ЕстьПолеТакогоВида = Ложь;
				Для Каждого КонтактИнфоКонтрагента Из КонтактноеЛицоОбъект.КонтактнаяИнформация Цикл
					
					Если Строка(КонтактИнфоКонтрагента.Вид) = Строка(КонтактИнфоАдресата.Вид) Тогда
						
						ЕстьПолеТакогоВида = Истина;
						
						Если НРег(КонтактИнфоКонтрагента.Представление) <> НРег(КонтактИнфоАдресата.Представление) Тогда
							СтрокаОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'Нельзя выполнить преобразование, т.к. у личного адресата и контактного лица
									|разные адреса Email (%1 и %2).
									|Выберите другое контактное лицо или создайте новое.'"),
									КонтактИнфоАдресата.Представление, КонтактИнфоКонтрагента.Представление);
							Возврат Ложь;
						КонецЕсли;	
						
						Прервать;
						
					КонецЕсли;	
					
				КонецЦикла;	
				
				Если ЕстьПолеТакогоВида = Ложь Тогда
					
					Если КонтактИнфоАдресата.Вид = Справочники.ВидыКонтактнойИнформации.EmailАдресата Тогда
						
						НовСтр = КонтактноеЛицоОбъект.КонтактнаяИнформация.Добавить();
						НовСтр.ЗначенияПолей = КонтактИнфоАдресата.ЗначенияПолей;
						НовСтр.АдресЭП = КонтактИнфоАдресата.АдресЭП;
						НовСтр.Представление = КонтактИнфоАдресата.Представление;
						НовСтр.Вид = Справочники.ВидыКонтактнойИнформации.EmailКЛ;
						НовСтр.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
						
					КонецЕсли;	
					
					Если КонтактИнфоАдресата.Вид = Справочники.ВидыКонтактнойИнформации.РабочийТелефонАдресата Тогда
						
						НовСтр = КонтактноеЛицоОбъект.КонтактнаяИнформация.Добавить();
						НовСтр.ЗначенияПолей = КонтактИнфоАдресата.ЗначенияПолей;
						НовСтр.Представление = КонтактИнфоАдресата.Представление;
						НовСтр.НомерТелефона = КонтактИнфоАдресата.НомерТелефона;
						НовСтр.НомерТелефонаБезКодов = КонтактИнфоАдресата.НомерТелефонаБезКодов;
						НовСтр.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонКЛ;
						НовСтр.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
						
					КонецЕсли;	
					
				Иначе	
					
					НеиспользованныеПоля = НеиспользованныеПоля + " "
						+ Строка(КонтактИнфоАдресата.Вид) + ": " + КонтактИнфоАдресата.ЗначенияПолей;
					
				КонецЕсли;	
				
			КонецЦикла;	
			
			КонтактноеЛицоОбъект.Комментарий = КонтактноеЛицоОбъект.Комментарий + " " + НеиспользованныеПоля;
			КонтактноеЛицоОбъект.Записать();
			РазблокироватьДанныеДляРедактирования(Контакт);
			
		КонецЕсли;	
		
	КонецЕсли;	
	
	// Пометим на удаление личный адресат
	ПометитьНаУдаление(ЛичныйАдресат, Истина, УникальныйИдентификатор);
	
	Возврат Истина;
	
КонецФункции

// Пометить на удаление личного адресата
Процедура ПометитьНаУдаление(Ссылка, Пометка, УникальныйИдентификатор = Неопределено) Экспорт
	
	ЗаблокироватьДанныеДляРедактирования(Ссылка, , УникальныйИдентификатор);
	СправочникОбъект = Ссылка.ПолучитьОбъект();
	СправочникОбъект.УстановитьПометкуУдаления(Пометка, Истина);
	РазблокироватьДанныеДляРедактирования(Ссылка, УникальныйИдентификатор);
	
КонецПроцедуры

//Функция ищет заказчика, его контактное лицо и проект для подстановки в задачу
Функция НайтиКонтактПоАдресату(Адресат) Экспорт
	
	Контакт = Новый Структура("Заказчик, КонтактноеЛицоЗаказчика, Проект",
			Справочники.Заказчики.ПустаяСсылка(),
			Справочники.КонтактныеЛицаЗаказчиков.ПустаяСсылка(),
			Справочники.Проекты.ПустаяСсылка());
			
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("АдресЭП",Адресат.Адрес);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	               |	КонтактныеЛицаЗаказчиковКонтактнаяИнформация.Ссылка КАК КонтактноеЛицоЗаказчика,
	               |	КонтактныеЛицаЗаказчиковКонтактнаяИнформация.Ссылка.Владелец КАК Заказчик
	               |ПОМЕСТИТЬ втДанные
	               |ИЗ
	               |	Справочник.КонтактныеЛицаЗаказчиков.КонтактнаяИнформация КАК КонтактныеЛицаЗаказчиковКонтактнаяИнформация
	               |ГДЕ
	               |	КонтактныеЛицаЗаказчиковКонтактнаяИнформация.АдресЭП = &АдресЭП
	               |	И КонтактныеЛицаЗаказчиковКонтактнаяИнформация.Ссылка.Актуален
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	КонтактныеЛицаЗаказчиковКонтактнаяИнформация.Ссылка,
	               |	КонтактныеЛицаЗаказчиковКонтактнаяИнформация.Ссылка.Владелец
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаЗаказчиков.ПустаяССылка),
	               |	ЗаказчикиКонтактнаяИнформация.Ссылка
	               |ИЗ
	               |	Справочник.Заказчики.КонтактнаяИнформация КАК ЗаказчикиКонтактнаяИнформация
	               |ГДЕ
	               |	ЗаказчикиКонтактнаяИнформация.АдресЭП = &АдресЭП
	               |	И ЗаказчикиКонтактнаяИнформация.Ссылка.Актуален
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказчикиКонтактнаяИнформация.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	втДанные.КонтактноеЛицоЗаказчика КАК КонтактноеЛицоЗаказчика,
	               |	втДанные.Заказчик КАК Заказчик,
	               |	Проекты.Ссылка КАК Проект
	               |ПОМЕСТИТЬ втПроекты
	               |ИЗ
	               |	втДанные КАК втДанные
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Проекты КАК Проекты
	               |		ПО (Проекты.ОсновнойЗаказчик = втДанные.Заказчик)
	               |ГДЕ
	               |	Проекты.Актуален
	               |	И НЕ Проекты.ПометкаУдаления
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втДанные.КонтактноеЛицоЗаказчика,
	               |	втДанные.Заказчик,
	               |	Проекты.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	втДанные.КонтактноеЛицоЗаказчика КАК КонтактноеЛицоЗаказчика,
	               |	втДанные.Заказчик КАК Заказчик,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ЕСТЬNULL(ПроектКЛ.Проект, ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
	               |				ТОГДА ВЫБОР
	               |						КОГДА ЕСТЬNULL(ВсегоПроектов.КоличествоПроект, 0) = 1
	               |							ТОГДА ВсегоПроектов.Проект
	               |						ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
	               |					КОНЕЦ
	               |			ИНАЧЕ ПроектКЛ.Проект
	               |		КОНЕЦ) КАК Проект
	               |ИЗ
	               |	втДанные КАК втДанные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			втПроекты.Заказчик КАК Заказчик,
	               |			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втПроекты.Проект) КАК КоличествоПроект,
	               |			МАКСИМУМ(втПроекты.Проект) КАК Проект
	               |		ИЗ
	               |			втПроекты КАК втПроекты
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			втПроекты.Заказчик) КАК ВсегоПроектов
	               |		ПО втДанные.Заказчик = ВсегоПроектов.Заказчик
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	               |			втПроекты.Заказчик КАК Заказчик,
	               |			втПроекты.КонтактноеЛицоЗаказчика КАК КонтактноеЛицоЗаказчика,
	               |			втПроекты.Проект КАК Проект
	               |		ИЗ
	               |			втПроекты КАК втПроекты
	               |		ГДЕ
	               |			ВЫБОР
	               |					КОГДА втПроекты.КонтактноеЛицоЗаказчика = ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаЗаказчиков.ПустаяСсылка)
	               |						ТОГДА ЛОЖЬ
	               |					ИНАЧЕ втПроекты.Проект.ОсновноеКонтактноеЛицо = втПроекты.КонтактноеЛицоЗаказчика
	               |				КОНЕЦ) КАК ПроектКЛ
	               |		ПО втДанные.Заказчик = ПроектКЛ.Заказчик
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втДанные.КонтактноеЛицоЗаказчика,
	               |	втДанные.Заказчик";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Не Выборка.Следующий() Тогда
		Возврат Контакт;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Контакт, Выборка);
	Если Выборка.КонтактноеЛицоЗаказчика.Пустая() И Не Выборка.Проект.Пустая() Тогда
		Контакт.КонтактноеЛицоЗаказчика = Контакт.Проект.ОсновноеКонтактноеЛицо;
	КонецЕсли;
	
	Возврат Контакт;
КонецФункции