////////////////////////////////////////////////////////////////////////////////
// Модуль общего обработчика ожидания.
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Выполняет действия обработчика ожидания на клиенте.
// Процедура предназначена для вызова из ОбщийОбработчикОжиданияГлобальный.ОбщийОбработчикОжидания.
// 
// Параметры:
//  Обработчики - Структура - Содержит обработчики, готовые к выполнению.
//
// Возвращаемое значение:
//  Структура - содержит данные обработчиков для последующей обработки на клиенте.
//
Функция ВыполнитьДействияОбработчикаОжидания(Обработчики) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ЕстьУведомленияПрограммы", Ложь);
	Результат.Вставить("УведомленияПрограммы", Новый Массив);
	Результат.Вставить("РезультатыПроверкиПочты",Неопределено);
	
	Если ПользователиКлиентСервер.ЭтоСеансВнешнегоПользователя() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если Обработчики.Свойство("ПроверкаПочты")
		И Обработчики.ПроверкаПочты Тогда
		
		РезультатыПроверкиПочты = Неопределено;
		ВстроеннаяПочтаСервер.ПроверитьНаличиеНовыхПисем(РезультатыПроверкиПочты);
		
		Если РезультатыПроверкиПочты.НужноОбновитьСписок Тогда
			Результат.РезультатыПроверкиПочты = РезультатыПроверкиПочты;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Обработчики.Свойство("ПроверкаУведомленийПрограммы")
		И Обработчики.ПроверкаУведомленийПрограммы Тогда
		
		УведомленияПрограммы = Справочники.УведомленияПрограммы.ПолучитьУведомления();
		КоличествоУведомлений = УведомленияПрограммы.Количество();
		Результат.ЕстьУведомленияПрограммы = КоличествоУведомлений <> 0;
		Если КоличествоУведомлений = 1 Тогда
			Результат.УведомленияПрограммы = УведомленияПрограммы;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти