
// Возвращает описание предмета в виде текстовой строки.
// 
// Параметры
//  СсылкаНаПредмет  – ЛюбаяСсылка – объект ссылочного типа.
//
// Возвращаемое значение:
//   Строка 
// 
Функция ПредметСтрокой(СсылкаНаПредмет, ИмяПредмета = Неопределено) Экспорт
	
	Результат = "";
	
	Если ТипЗнч(СсылкаНаПредмет) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		ПредставлениеОбъекта = СсылкаНаПредмет.Метаданные().ПредставлениеОбъекта;
		Если ПустаяСтрока(ПредставлениеОбъекта) Тогда
			ПредставлениеОбъекта = СсылкаНаПредмет.Метаданные().Представление();
		КонецЕсли;
		Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"%1 (%2)", СсылкаНаПредмет.Наименование, ПредставлениеОбъекта);
	ИначеЕсли СсылкаНаПредмет = Неопределено или СсылкаНаПредмет.Пустая() Тогда
		Если ИмяПредмета = Неопределено Тогда
			Результат = НСтр("ru = 'не введен'");
		Иначе
			Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 (не введен)'"),Строка(ИмяПредмета));
		КонецЕсли;
	Иначе
		МетаданныеПредмета = СсылкаНаПредмет.Метаданные();
		Если ИмяПредмета = Неопределено Тогда
			ПредставлениеОбъекта = МетаданныеПредмета.ПредставлениеОбъекта;
			Если ПустаяСтрока(ПредставлениеОбъекта) Тогда
				ПредставлениеОбъекта = МетаданныеПредмета.Представление();
			КонецЕсли;
		Иначе
			ПредставлениеОбъекта = Строка(ИмяПредмета);
		КонецЕсли;
		
		ПредставлениеСсылки = Строка(СсылкаНаПредмет);
		
		Если МетаданныеПредмета.Имя = "Файлы" Тогда
			ОписаниеФайла = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаНаПредмет, "Описание");
			Если ЗначениеЗаполнено(ОписаниеФайла) Тогда
				ПредставлениеСсылки = ПредставлениеСсылки + ", " + ОписаниеФайла;
			КонецЕсли;
		КонецЕсли;
		
		Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"%1 (%2)", ПредставлениеСсылки, ПредставлениеОбъекта);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ЗначенияРеквизитовОбъекта(Ссылка, Знач Реквизиты) Экспорт
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, Реквизиты);
	
КонецФункции

Функция ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита);
	
КонецФункции

Функция ЗначенияРеквизитовОбъектов(МассивСсылок, ИменаРеквизитов) Экспорт
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивСсылок, ИменаРеквизитов);
	
КонецФункции

Функция ЗначениеРеквизитаОбъектов(МассивСсылок, ИмяРеквизита) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСсылок, ИмяРеквизита);
	
КонецФункции

Функция ЭтоСсылка(Тип) Экспорт
	
	Возврат ОбщегоНазначения.ЭтоСсылка(Тип);
	
КонецФункции

// Устанавливает флаг отображения описаний изменений версий по текущую версию включительно.
//
Процедура УстановитьФлагОтображенияОписанийПоТекущуюВерсию() Экспорт
	
	ВывестиОписаниеИзмененийДляАдминистратора = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ОбновлениеИБ",
		"ВывестиОписаниеИзмененийДляАдминистратора",,,
		ИмяПользователя());
	Если ВывестиОписаниеИзмененийДляАдминистратора = Истина Тогда
		ОбщегоНазначения.ХранилищеОбщихНастроекУдалить(
			"ОбновлениеИБ",
			"ВывестиОписаниеИзмененийДляАдминистратора",
			ИмяПользователя());
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ РАБОТЫ С ДОКУМЕНТАМИ

// Возвращает заголовок документа для печатной формы.
//
// Параметры:
//  Шапка - любая структура с полями:
//           Номер         - Строка или Число - номер документа;
//           Дата          - Дата - дата документа;
//           Представление - Строка - (необязательный) платформенное представление ссылки на документ.
//                                    Если параметр НазваниеДокумента не задан, то название документа будет вычисляться
//                                    из этого параметра.
//  НазваниеДокумента - Строка - название документа (например, "Счет на оплату").
//
// Возвращаемое значение:
//  Строка - заголовок документа.
//
Функция СформироватьЗаголовокДокумента(Шапка, Знач НазваниеДокумента = "") Экспорт
	
	ДанныеДокумента = Новый Структура("Номер,Дата,Представление");
	ЗаполнитьЗначенияСвойств(ДанныеДокумента, Шапка);
	
	// Если название документа не передано, получим название по представлению документа.
	Если ПустаяСтрока(НазваниеДокумента) И ЗначениеЗаполнено(ДанныеДокумента.Представление) Тогда
		ПоложениеНомера = СтрНайти(ДанныеДокумента.Представление, ДанныеДокумента.Номер);
		Если ПоложениеНомера > 0 Тогда
			НазваниеДокумента = СокрЛП(Лев(ДанныеДокумента.Представление, ПоложениеНомера - 1));
		КонецЕсли;
	КонецЕсли;

	НомерНаПечать = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(ДанныеДокумента.Номер, "0");//ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокумента.Номер);
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 № %2 от %3'"),
		НазваниеДокумента, НомерНаПечать, Формат(ДанныеДокумента.Дата, "ДЛФ=DD"));
	
КонецФункции


