
Функция ЗаполнитьСписокВыбораТипаИсточника() Экспорт
	
	СписокВыбора = Новый СписокЗначений;
	
	// Справочники
	Для Каждого Справочник Из Метаданные.Справочники Цикл
		СписокВыбора.Добавить("Справочник." + Справочник.Имя, Справочник.Синоним, , БиблиотекаКартинок.Справочник);
	КонецЦикла;
	
	// Документы
	Для Каждого Документ Из Метаданные.Документы Цикл
		СписокВыбора.Добавить("Документ." + Документ.Имя, Документ.Синоним, , БиблиотекаКартинок.Документ);
	КонецЦикла;
	
	Возврат СписокВыбора;
	
КонецФункции

Функция ПолучитьТипыСКонтактнойИнформацией() Экспорт
	
	МассивТипов = Новый Массив;
	
	Для Каждого Справочник Из Метаданные.Справочники Цикл
		Если Справочник.ТабличныеЧасти.Найти("КонтактнаяИнформация") <> Неопределено Тогда
			МассивТипов.Добавить(Тип("СправочникСсылка."+Справочник.Имя));
		КонецЕсли;
	КонецЦикла;
	Для Каждого Документ Из Метаданные.Документы Цикл
		Если Документ.ТабличныеЧасти.Найти("КонтактнаяИнформация") <> Неопределено Тогда
			МассивТипов.Добавить(Тип("ДокументСсылка."+Документ.Имя));
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивТипов;
	
КонецФункции

// Функция - проверяет по имени объекта, есть он в существсующих сценариях или нет.
//
// Возвращаемое значение:
//  Булево.
//
Функция ОбъектИспользуетсяВСценариях(Знач ИмяОбъекта) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	АвтоматизацияСценарии.ТипИсточника КАК ТипИсточника
		|ИЗ
		|	Справочник.АвтоматизацияСценарии КАК АвтоматизацияСценарии
		|ГДЕ
		|	НЕ АвтоматизацияСценарии.ПометкаУдаления
		|	И АвтоматизацияСценарии.Актуален
		|	И АвтоматизацияСценарии.ВидСобытия В (ЗНАЧЕНИЕ(Перечисление.АвтоматизацияВидыСобытий.ПриЗаписиИсточника), ЗНАЧЕНИЕ(Перечисление.АвтоматизацияВидыСобытий.ПередЗаписьюИсточника))
		|	И НЕ АвтоматизацияСценарии.ЭтоГруппа
		|	И АвтоматизацияСценарии.ТипИсточника = &ТипИсточника";
	Запрос.УстановитьПараметр("ТипИсточника", ИмяОбъекта);	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

