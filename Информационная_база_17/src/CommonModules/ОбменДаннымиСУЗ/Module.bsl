#Область СлужебныйПрограммныйИнтерфейс

// См. процедуру ОбменДаннымиПереопределяемый.ПриОпределенииПрефиксаИнформационнойБазыПоУмолчанию().
//
Процедура ПриОпределенииПрефиксаИнформационнойБазыПоУмолчанию(Префикс) Экспорт
	
	Префикс = НСтр("ru = 'СЗ'");
	
КонецПроцедуры

// См. процедуру ОбменДаннымиПереопределяемый.ПолучитьПланыОбмена().
//
Процедура ПолучитьПланыОбмена(ПланыОбменаПодсистемы) Экспорт
	
	ПланыОбменаПодсистемы.Добавить(Метаданные.ПланыОбмена.СинхронизацияДанныхЧерезУниверсальныйФормат);
	
КонецПроцедуры

// См. процедуру ОбменДаннымиПереопределяемый.ПриПолученииДоступныхВерсийФормата().
Процедура ПриПолученииДоступныхВерсийФормата(ВерсииФормата) Экспорт
	
	ВерсииФормата.Вставить("1.8", МенеджерОбменаЧерезУниверсальныйФормат);
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////
// Обработчики событий подписок для плана обмена "СинхронизацияДанныхЧерезУниверсальныйФормат".

// Процедура-обработчик события "ПередЗаписью" ссылочных типов данных (кроме документов) для механизма регистрации
// объектов на узлах.
//
// Параметры:
//  ИмяПланаОбмена - Строка - имя плана обмена, для которого выполняется механизм регистрации.
//  Источник       - источник события, кроме типа ДокументОбъект.
//  Отказ          - Булево - флаг отказа от выполнения обработчика.
// 
Процедура СинхронизацияДанныхЧерезУниверсальныйФорматЗарегистрироватьИзменение(Источник, Отказ) Экспорт
	
	// ОбменДанными.Загрузка не требуется, т.к. подписка относиться к плану обмена.
	ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередЗаписью(
		"СинхронизацияДанныхЧерезУниверсальныйФормат", Источник, Отказ);
	
КонецПроцедуры

// Процедура-обработчик события "ПередЗаписью" документов для механизма регистрации объектов на узлах.
//
// Параметры:
//  ИмяПланаОбмена - Строка - имя плана обмена, для которого выполняется механизм регистрации.
//  Источник       - ДокументОбъект - источник события.
//  Отказ          - Булево - флаг отказа от выполнения обработчика.
// 
Процедура СинхронизацияДанныхЧерезУниверсальныйФорматЗарегистрироватьИзменениеДокумента(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	// ОбменДанными.Загрузка не требуется, т.к. подписка относиться к плану обмена.
	ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередЗаписьюДокумента(
		"СинхронизацияДанныхЧерезУниверсальныйФормат", Источник, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

// Процедура-обработчик события "ПередУдалением" ссылочных типов данных для механизма регистрации объектов на узлах.
//
// Параметры:
//  ИмяПланаОбмена - Строка - имя плана обмена, для которого выполняется механизм регистрации.
//  Источник       - источник события.
//  Отказ          - Булево - флаг отказа от выполнения обработчика.
// 
Процедура СинхронизацияДанныхЧерезУниверсальныйФорматЗарегистрироватьУдаление(Источник, Отказ) Экспорт
	
	// ОбменДанными.Загрузка не требуется, т.к. подписка относиться к плану обмена.
	ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередУдалением(
		"СинхронизацияДанныхЧерезУниверсальныйФормат", Источник, Отказ);
	
КонецПроцедуры

// Процедура-обработчик события "ПередЗаписью" регистров для механизма регистрации объектов на узлах.
//
// Параметры:
//  Источник       - НаборЗаписейРегистра - источник события.
//  Отказ          - Булево - флаг отказа от выполнения обработчика.
//  Замещение      - Булево - признак замещения существующего набора записей.
// 
Процедура СинхронизацияДанныхЧерезУниверсальныйФорматРегистрацияНабораПередЗаписью(Источник, Отказ, Замещение) Экспорт
	
	ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередЗаписьюРегистра(
		"СинхронизацияДанныхЧерезУниверсальныйФормат", Источник, Отказ, Замещение);
	
КонецПроцедуры

#КонецОбласти
