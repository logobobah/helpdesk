Процедура ОбработкаКомандыИзмененияСтатуса(Знач Форма, Знач МассивЗадач, Знач Команда) Экспорт
	ИмяКоманды = Команда.Имя;
	Имя = Сред(ИмяКоманды,СтрНайти(ИмяКоманды, "_")+1);
	Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗадач." + Имя);
	
	ИзменитьСтатусСВыборомИсполнителя(МассивЗадач, Статус);
КонецПроцедуры

Процедура ИзменитьСтатусСВыборомИсполнителя(Знач МассивЗадач, Знач Статус, Знач Исполнитель = Неопределено, 
		Знач СписокКуда = Неопределено, Знач СписокОткуда = Неопределено) Экспорт
	
	ПараметрыОповещения = Новый Структура("МассивЗадач, Статус, СписокКуда, СписокОткуда", 
			МассивЗадач, Статус, СписокКуда, СписокОткуда);
	
	Если ЗадачиВызовСервера.НеобходимоВыбратьИсполнителя(МассивЗадач, Статус, Исполнитель) Тогда
		Оповещение = Новый ОписаниеОповещения("ЗавершениеВыбораИсполнителя", ЭтотОбъект, ПараметрыОповещения);
		ПоказатьВводЗначения(Оповещение, Исполнитель, НСтр("ru = 'Выберите исполнителя задач'"));
	Иначе
		ЗавершениеВыбораИсполнителя(Исполнитель, ПараметрыОповещения)
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗавершениеВыбораИсполнителя(ВыбранныйИсполнитель, ДополнительныеПараметры) Экспорт
	
	МассивЗадач = ДополнительныеПараметры.МассивЗадач;
	ЗадачиВызовСервера.УстановитьСтатусИсполнителяЗадач(МассивЗадач, ДополнительныеПараметры.Статус, ВыбранныйИсполнитель);
	
	// минимизируем серверные вызовы
	ОповеститьОбИзменении(?(МассивЗадач.Количество() = 1, МассивЗадач[0], Тип("ДокументСсылка.Задачи")));
	
	Если ДополнительныеПараметры.СписокКуда <> Неопределено Тогда
		ДополнительныеПараметры.СписокКуда.ТекущаяСтрока = МассивЗадач[0];
		ДополнительныеПараметры.СписокКуда.ВыделенныеСтроки.Очистить();
		Для каждого Задача Из МассивЗадач Цикл
			ДополнительныеПараметры.СписокКуда.ВыделенныеСтроки.Добавить(Задача);
		КонецЦикла;
	КонецЕсли;
	
	Оповестить("Задачи.ИзменениеСтатуса");
	
КонецПроцедуры

Процедура ОткрытьВыборШаблонаЗадач() Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОткрытьФормуЗадачи",Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",Ложь);
	ПараметрыФормы.Вставить("РежимВыбора",Истина);
	
	ОткрытьФорму("Справочник.ШаблоныЗадач.ФормаВыбора",
			ПараметрыФормы,
			,,,,
			Новый ОписаниеОповещения("СозданиеЗадачиПослеВыбораШаблона",ЭтотОбъект)
	);
	
КонецПроцедуры

Процедура СозданиеЗадачиПослеВыбораШаблона(Шаблон, ДопПараметры) Экспорт

	Если ЗначениеЗаполнено(Шаблон) Тогда
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("Основание", Шаблон);
		Открытьформу("Документ.Задачи.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

