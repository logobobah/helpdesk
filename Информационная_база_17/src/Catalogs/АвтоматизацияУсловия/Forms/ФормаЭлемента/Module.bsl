
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЭтоНовый = Объект.Ссылка.Пустая();
	Если ЭтоНовый Тогда
		ЗаполнитьСписокВыбораТипаИсточника();
	КонецЕсли;
	ВидимостьДоступностьКорректность(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ЗагрузитьНастройкиОтборов(ТекущийОбъект);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ОтборПоРеквизитам = Новый ХранилищеЗначения(КомпоновщикДанныхДляФильтра.Настройки);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТипИсточникаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокВыбора = ЗаполнитьСписокВыбораТипаИсточника();
	СписокВыбора.ПоказатьВыборЭлемента(
			Новый ОписаниеОповещения("ПослеВыбораТипаИсточника", ЭтаФорма), 
			"Выберите тип источника",
			СписокВыбора.НайтиПоЗначению(Объект.ТипИсточника)
	);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораТипаИсточника(ВыбранныйЭлемент, ПараметрыВыбора) Экспорт
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Объект.ТипИсточника = ВыбранныйЭлемент.Значение;
		ЗаполнитьКомпоновщикДанныхДляФильтра();
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	ВидимостьДоступностьКорректность(ЭтаФорма, "Редактирование");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ВидимостьДоступностьКорректность(Форма, Изменения = "")
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Изменения = "" Тогда
		Элементы.ГруппаШапка.ТолькоПросмотр = Истина;
		Элементы.ДеталиУсловия.ТолькоПросмотр = Истина;
		Элементы.ФормаРедактировать.Видимость = Истина;
	КонецЕсли;
	
	Если Изменения = "Редактирование" Или Объект.Ссылка.Пустая() Тогда
		Элементы.ГруппаШапка.ТолькоПросмотр = Ложь;
		Элементы.ДеталиУсловия.ТолькоПросмотр = Ложь;
		Элементы.ФормаРедактировать.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКомпоновщикДанныхДляФильтра()
	
	Если ЗначениеЗаполнено(Объект.ТипИсточника) Тогда		
		СхемаКомпоновкиДанных = Справочники.АвтоматизацияУсловия.СформироватьСхемуКомпоновкиПоОбъектуМетаданных(Объект.ТипИсточника);
	Иначе
		СхемаКомпоновкиДанных = Новый СхемаКомпоновкиДанных;
	КонецЕсли;
	
	КомпоновщикДанныхДляФильтра.Инициализировать(
			Новый ИсточникДоступныхНастроекКомпоновкиДанных(
					ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор)
			)
	);
	КомпоновщикДанныхДляФильтра.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	КомпоновщикДанныхДляФильтра.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиОтборов(ОбъектЗначение)
	
	ЗаполнитьКомпоновщикДанныхДляФильтра();
	
	НастройкиОтбора = ОбъектЗначение.ОтборПоРеквизитам.Получить();
	Если НастройкиОтбора <> Неопределено Тогда
		КомпоновщикДанныхДляФильтра.ЗагрузитьНастройки(НастройкиОтбора);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьСписокВыбораТипаИсточника()
	Возврат АвтоматизацияПовтИсп.ЗаполнитьСписокВыбораТипаИсточника()
КонецФункции

#КонецОбласти




