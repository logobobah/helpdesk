#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, Новый Структура("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты"));
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ПриСозданииПриЧтенииНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
		
	ПриСозданииПриЧтенииНаСервере();
	//ПроектовСТакимЖеЦветом = ПолучитьКоличествоПроектовСЦветом(Объект.Цвет, Объект.Ссылка);
	ЦветПриоритета = РегистрыСведений.ЦветаПриоритетов.ПолучитьЦветПриоритета(Объект.МинимальныйПриоритет);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ЗаписатьДанныеТегов(ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПриСозданииПриЧтенииНаСервере() Экспорт
	
	ПрочитатьДанныеТегов();
	ОбновитьЭлементыТегов();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКоличествоПроектовСЦветом(Цвет, Ссылка)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(*) КАК Количество
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	Проекты.Ссылка <> &Ссылка
	|	И Проекты.Цвет = &Цвет";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Цвет", Цвет);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Рез = СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(Выборка.Количество, Нстр("ru = 'проект, проекта, проектов'"));
	Рез = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 с тем же цветом'"), Рез);
	Возврат Рез;
КонецФункции

&НаКлиенте
Процедура Цвет1ПриИзменении(Элемент)
	//ПроектовСТакимЖеЦветом = ПолучитьКоличествоПроектовСЦветом(Объект.Цвет, Объект.Ссылка);
	ЦветПриоритета = ЗадачиВызовСервера.ПолучитьЦветПриоритета(Объект.МинимальныйПриоритет);
КонецПроцедуры

#Область Теги

&НаСервере
Процедура ПрочитатьДанныеТегов()
	
	//Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
	//	Возврат;
	//КонецЕсли;
	ДанныеТегов.Очистить();
	
	Для Каждого СтрокаТЧ Из Объект.Теги Цикл
		
		НовыеДанныеТега = ДанныеТегов.Добавить();
		НавигационнаяСсылкаФС = "Тег_" + НовыеДанныеТега.ПолучитьИдентификатор();
		
		НовыеДанныеТега.Тег = СтрокаТЧ.Тег;
		НовыеДанныеТега.ПометкаУдаления = СтрокаТЧ.Тег.ПометкаУдаления;
		НовыеДанныеТега.ПредставлениеТега = ФорматированнаяСтрокаПредставленияТега(СтрокаТЧ.Тег.Наименование, СтрокаТЧ.Тег.ПометкаУдаления, НавигационнаяСсылкаФС);
		НовыеДанныеТега.ДлинаТега = СтрДлина(СтрокаТЧ.Тег.Наименование);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыТегов() Экспорт
	
	ФС = ДанныеТегов.Выгрузить(, "ПредставлениеТега").ВыгрузитьКолонку("ПредставлениеТега");
	
	Индекс = ФС.Количество()-1;
	Пока Индекс > 0 Цикл
		ФС.Вставить(Индекс, "  ");
		Индекс = Индекс - 1;
	КонецЦикла;
	
	Элементы.ОблакоТегов.Заголовок	= Новый ФорматированнаяСтрока(ФС);
	
	ВидимостьЭлементов = (ФС.Количество() > 0);
	Элементы.ОблакоТегов.Видимость	= ВидимостьЭлементов;
	Элементы.ТегиИОтступ.Видимость = ВидимостьЭлементов;
	Элементы.Теги.Отображение = ?(ВидимостьЭлементов, ОтображениеОбычнойГруппы.Нет, ОтображениеОбычнойГруппы.СильноеВыделение);
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеТегов(ТекущийОбъект)
	
	ТекущийОбъект.Теги.Загрузить(ДанныеТегов.Выгрузить(,"Тег"));
	
КонецПроцедуры

&НаСервере
Процедура ПрикрепитьТегНаСервере(Тег)
	
	Если ДанныеТегов.НайтиСтроки(Новый Структура("Тег", Тег)).Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеТега = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Тег, "Наименование, ПометкаУдаления");
	
	СтрокаТегов = ДанныеТегов.Добавить();
	НавигационнаяСсылкаФС = "Тег_" + СтрокаТегов.ПолучитьИдентификатор();
	
	СтрокаТегов.Тег = Тег;
	СтрокаТегов.ПометкаУдаления = ДанныеТега.ПометкаУдаления;
	СтрокаТегов.ПредставлениеТега = ФорматированнаяСтрокаПредставленияТега(ДанныеТега.Наименование, ДанныеТега.ПометкаУдаления, НавигационнаяСсылкаФС);
	СтрокаТегов.ДлинаТега = СтрДлина(ДанныеТега.Наименование);
	
	ОбновитьЭлементыТегов();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьИПрикрепитьТегНаСервере(знач ЗаголовокТега)
	
	Тег = НайтиСоздатьТег(ЗаголовокТега);
	ПрикрепитьТегНаСервере(Тег);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиСоздатьТег(Знач ЗаголовокТега)
	
	Тег = Справочники.Теги.НайтиПоНаименованию(ЗаголовокТега, Истина);
	
	Если Тег.Пустая() Тогда
		
		ТегОбъект = Справочники.Теги.СоздатьЭлемент();
		ТегОбъект.Наименование = ЗаголовокТега;
		ТегОбъект.Актуален = Истина;
		ТегОбъект.Записать();
		Тег = ТегОбъект.Ссылка;
		
	КонецЕсли;
	
	Возврат Тег;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ФорматированнаяСтрокаПредставленияТега(НаименованиеТега, ПометкаУдаления, НавигационнаяСсылкаФС)
	
	#Если Клиент Тогда
	Цвет = ОбщегоНазначенияКлиентПовтИсп.ЦветСтиля("ТекстВторостепеннойНадписи");
	БазовыйШрифт = ОбщегоНазначенияКлиентПовтИсп.ШрифтСтиля("ОбычныйШрифтТекста");
	#Иначе
	Цвет = ЦветаСтиля.ТекстВторостепеннойНадписи;
	БазовыйШрифт = ШрифтыСтиля.ОбычныйШрифтТекста;
	#КонецЕсли
	
	Шрифт = Новый Шрифт(БазовыйШрифт,,,Истина,,?(ПометкаУдаления, Истина, Неопределено));
	
	КомпонентыФС = Новый Массив;
	КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(НаименованиеТега + Символы.НПП, Шрифт, Цвет));
	КомпонентыФС.Добавить(Новый ФорматированнаяСтрока(БиблиотекаКартинок.Очистить, , , , НавигационнаяСсылкаФС));
	
	Возврат Новый ФорматированнаяСтрока(КомпонентыФС);
	
КонецФункции

&НаКлиенте
Процедура ПолеВводаТегаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Теги") Тогда
		ПрикрепитьТегНаСервере(ВыбранноеЗначение);
	КонецЕсли;
	Элемент.ОбновитьТекстРедактирования();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеВводаТегаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если Не ПустаяСтрока(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		СоздатьИПрикрепитьТегНаСервере(Текст);
		ТекущийЭлемент = Элементы.ПолеВводаТега;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОблакоТеговОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТегИД = Сред(НавигационнаяСсылкаФорматированнойСтроки, СтрДлина("Тег_")+1);
	СтрокаТегов = ДанныеТегов.НайтиПоИдентификатору(ТегИД);
	ДанныеТегов.Удалить(СтрокаТегов);
	
	ОбновитьЭлементыТегов();
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемыСвойства

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

