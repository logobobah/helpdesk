#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	Автор = Пользователи.ТекущийПользователь();
	РегламентноеЗадание = Неопределено;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если Не ЭтоГруппа И Не ЗначениеЗаполнено(Автор) Тогда
		Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	// Вызывается непосредственно до записи объекта в базу данных.
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если ПометкаУдаления Тогда
		Актуален = Ложь;
	КонецЕсли;
	
	// Создание регламентного задания - пустышки (для хранения его идентификатора в данных).
	УстановитьПривилегированныйРежим(Истина);
	
	Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(РегламентноеЗадание);
	Если ВидСобытия = Перечисления.АвтоматизацияВидыСобытий.ПовторяющеесяСобытие Тогда
		Если Задание = Неопределено Тогда
			// Из-за выполнения индивидуального регламентного задания непосредственно в необходимой области модели сервиса.
			// Создание регламентного задания осуществляется платформенным способом,
			// а не через программный интерфейс общего модуля РегламентныеЗадания.
			
			Задание = РегламентныеЗадания.СоздатьРегламентноеЗадание(Метаданные.РегламентныеЗадания.Автоматизация);
			Задание.ИмяПользователя = ПользователиИнформационнойБазы.НайтиПоИмени(Автор.Наименование);
			Задание.Использование   = Ложь;
			Задание.Наименование    = ПредставлениеЗаданияПоСценарию(Наименование);
			Задание.Записать();
			
			РегламентноеЗадание = Задание.УникальныйИдентификатор;
		КонецЕсли;
	Иначе
		Если Задание <> Неопределено Тогда
			Задание.Удалить();
			РегламентноеЗадание = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
		КонецЕсли;
	КонецЕсли;

	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(РегламентноеЗадание);
	Если Задание <> Неопределено Тогда
		Задание.Удалить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	// Вызывается непосредственно после записи объекта в базу данных.
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Если ВидСобытия = Перечисления.АвтоматизацияВидыСобытий.ПовторяющеесяСобытие Тогда
		Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(РегламентноеЗадание);
		Если Задание <> Неопределено Тогда
			ЗаданиеИзменено = Ложь;
			
			Если Задание.Использование <> Актуален Тогда
				Задание.Использование = Актуален;
				ЗаданиеИзменено = Истина;
			КонецЕсли;
			
			// Расписание устанавливается в форме элемента.
			Если ДополнительныеСвойства.Свойство("Расписание") 
				И ТипЗнч(ДополнительныеСвойства.Расписание) = Тип("РасписаниеРегламентногоЗадания")
				И Строка(ДополнительныеСвойства.Расписание) <> Строка(Задание.Расписание) Тогда
				Задание.Расписание = ДополнительныеСвойства.Расписание;
				ЗаданиеИзменено = Истина;
			КонецЕсли;
			
			ИмяПользователя = ПользователиИнформационнойБазы.НайтиПоИмени(Автор.Наименование);
			Если Задание.ИмяПользователя <> ИмяПользователя Тогда
				Задание.ИмяПользователя = ИмяПользователя;
				ЗаданиеИзменено = Истина;
			КонецЕсли;
			
			НаименованиеЗадания = ПредставлениеЗаданияПоСценарию(Наименование);
			Если Задание.Наименование <> НаименованиеЗадания Тогда
				Задание.Наименование = НаименованиеЗадания;
				ЗаданиеИзменено = Истина;
			КонецЕсли;
			
			Если Задание.Параметры.Количество() <> 1 ИЛИ Задание.Параметры[0] <> Ссылка Тогда
				ПараметрыЗадания = Новый Массив;
				ПараметрыЗадания.Добавить(Ссылка);
				Задание.Параметры = ПараметрыЗадания;
				ЗаданиеИзменено = Истина;
			КонецЕсли;
				
			Если ЗаданиеИзменено Тогда
				Задание.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция ПредставлениеЗаданияПоСценарию(НаименованиеСценария)
	Возврат СтрШаблон(НСтр("ru = 'Автоматизация: %1'"), СокрЛП(НаименованиеСценария));
КонецФункции

#КонецЕсли