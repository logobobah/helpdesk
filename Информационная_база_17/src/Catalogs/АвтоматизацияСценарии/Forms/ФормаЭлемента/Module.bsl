
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	СценарийОснование = Параметры.ЗначениеКопирования;
	ЭтоНовый = Объект.Ссылка.Пустая();
	СозданКопированием = Не СценарийОснование.Пустая();
	
	Кэш = ПолучитьКэшРасписания();
	Расписание = Новый РасписаниеРегламентногоЗадания;
	Если ЭтоНовый И Не СозданКопированием Тогда
		ВариантРасписания = Неопределено;
		Параметры.Свойство("ВариантРасписания", ВариантРасписания);
		ЗаполнитьРасписаниеПоВарианту(ВариантРасписания);
	Иначе
		ПрочитатьРасписаниеРегламентногоЗадания();
	КонецЕсли;
	
	Если ЭтоНовый Тогда
		ЗаполнитьСписокВыбораТипаИсточника();
	КонецЕсли;
	ВидимостьДоступностьКорректность(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПовторноеЧтение = (Кэш <> Неопределено);
	// Перезаполнение очищаемых данных формы при повторном чтении объекта из БД.
	Если ПовторноеЧтение Тогда
		ПрочитатьРасписаниеРегламентногоЗадания();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Все операции с регламентными заданиями размещены в модуле объекта.
	Если Объект.ПериодичностьРасписания <> Перечисления.АвтоматизацияПериодичностиСценариев.Произвольное Тогда
		Расписание.ВремяКонца = Расписание.ВремяНачала + 600;
	КонецЕсли;
	ТекущийОбъект.ДополнительныеСвойства.Вставить("Расписание", Расписание);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Объект.ВидСобытия = Перечисления.АвтоматизацияВидыСобытий.ПовторяющеесяСобытие Тогда
		Если Не ЗначениеЗаполнено(Объект.ПериодичностьРасписания) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Не выбрана периодичность запуска'"),, 
					"Объект.ПериодичностьРасписания",, 
					Отказ
			);
		КонецЕсли;
	ИначеЕсли ПустаяСтрока(Объект.ТипИсточника) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Не заполнено поле ""Тип источника"".'"),,
				"Объект.ТипИсточника",,
				Отказ
		);
	КонецЕсли;
	
	Если Объект.ВидСобытия = Перечисления.АвтоматизацияВидыСобытий.ПриЗаписиИсточника Тогда
		Для Каждого СтрокаТЧ Из Объект.Команды Цикл
			Если Не СтрокаТЧ.Выполнять Тогда
				Продолжить;
			КонецЕсли;
			Если СтрокаТЧ.Команда.Вид = Перечисления.АвтоматизацияВидыКомандСценариев.ЗаполнитьИсточник Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						НСтр("ru = 'Номер строки "+СтрокаТЧ.НомерСтроки+". Для вида события ""При записи источника"" запрещено указывать команду с видом ""Заполнить источник"".'"),,,,
						Отказ
				);
			КонецЕсли;
		КонецЦикла;
	//Запрет на выбор условий с конструктором перед записью
	ИначеЕсли Объект.ВидСобытия = Перечисления.АвтоматизацияВидыСобытий.ПередЗаписьюИсточника Тогда
		Для Каждого СтрокаТЧ Из Объект.Команды Цикл
			Если Не СтрокаТЧ.Выполнять Тогда
				Продолжить;
			КонецЕсли;
			Если СтрокаТЧ.Условие.ОтборПоРеквизитам.Получить() <> Неопределено  Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						НСтр("ru = 'Номер строки "+СтрокаТЧ.НомерСтроки+". Для вида события ""Перед записью источника"" запрещено указывать условие с заполненым фильтром по реквизитам.'"),,,,
						Отказ
				);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВидСобытияПриИзменении(Элемент)
	
	ВидимостьДоступностьКорректность(ЭтаФорма, "ВидСобытия");
	
КонецПроцедуры

&НаКлиенте
Процедура ТипИсточникаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокВыбора = ЗаполнитьСписокВыбораТипаИсточника();
	СписокВыбора.ПоказатьВыборЭлемента(
			Новый ОписаниеОповещения("ПослеВыбораТипаИсточника", ЭтаФорма), 
			"Выберите тип источника",
			СписокВыбора.НайтиПоЗначению(Объект.ТипИсточника)
	);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораТипаИсточника(ВыбранныйЭлемент, ПараметрыВыбора) Экспорт
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Объект.ТипИсточника = ВыбранныйЭлемент.Значение;
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	ВидимостьДоступностьКорректность(ЭтаФорма, "Редактирование");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСценарий(Команда)
	ВыполнитьСценарийНаСервере(Объект.Ссылка);
	Сообщить("Запущен сценарий "+ Объект.Наименование);
КонецПроцедуры

&НаКлиенте
Процедура КомандыСценарияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока тогда
		Элементы.КомандыСценария.ТекущиеДанные.Выполнять = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ВидимостьДоступностьКорректность(Форма, Изменения = "")
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Изменения = "" Или Изменения = "ПериодичностьРасписания" Тогда
		
		Если Объект.ПериодичностьРасписания = ПредопределенноеЗначение("Перечисление.АвтоматизацияПериодичностиСценариев.Ежедневно") Тогда
			ИмяПеречисления = "Ежедневно";
		ИначеЕсли Объект.ПериодичностьРасписания = ПредопределенноеЗначение("Перечисление.АвтоматизацияПериодичностиСценариев.Ежемесячно") Тогда
			ИмяПеречисления = "Ежемесячно";
		ИначеЕсли Объект.ПериодичностьРасписания = ПредопределенноеЗначение("Перечисление.АвтоматизацияПериодичностиСценариев.Еженедельно") Тогда
			ИмяПеречисления = "Еженедельно";
		Иначе
			ИмяПеречисления = "Произвольное";
		КонецЕсли;
		
		Страницы = Элементы.СтраницыПериодичности.ПодчиненныеЭлементы;
		ИмяВидимойСтраницы = "Страница"+ИмяПеречисления;
		Для Каждого Страница Из Страницы Цикл
			Страница.Видимость = (Страница.Имя = ИмяВидимойСтраницы);
		КонецЦикла;
		Если ИмяПеречисления = "Произвольное" Тогда
			Элементы.СтраницыВремяИлиИзменить.ТекущаяСтраница = Элементы.СтраницаИзменитьРасписание;
		Иначе
			Элементы.СтраницыВремяИлиИзменить.ТекущаяСтраница = Элементы.СтраницаВремяНачала;
		КонецЕсли;
		
		// Сброс параметров, которые не соответствуют закладкам упрощенного редактирования.
		Если Изменения = "ПериодичностьРасписания"
			И (ИмяПеречисления = "Ежедневно" 
			Или ИмяПеречисления = "Еженедельно"
			Или ИмяПеречисления = "Ежемесячно") Тогда
			
			// Общие параметры
			Форма.Расписание.ДатаНачала = '00010101';
			Форма.Расписание.ДатаКонца  = '00010101';
			Форма.Расписание.ВремяКонца = '00010101';
			Форма.Расписание.ВремяЗавершения = '00010101';
			Форма.Расписание.ДеньНеделиВМесяце = 0;
			Форма.Расписание.ДетальныеРасписанияДня = Новый Массив;
			Форма.Расписание.ИнтервалЗавершения = 0;
			Форма.Расписание.ПаузаПовтора = 0;
			Форма.Расписание.ПериодНедель = 0;
			Форма.Расписание.ПериодПовтораВТечениеДня = 0;
			
			Если ИмяПеречисления <> "Ежедневно" Тогда
				Форма.Расписание.ПериодПовтораДней = 1;
			КонецЕсли;
			
			Если ИмяПеречисления <> "Еженедельно" Тогда
				ВыбранныеДниНедели = Новый Массив;
				Для Индекс = 1 По 7 Цикл
					ВыбранныеДниНедели.Добавить(Индекс);
				КонецЦикла;
				Форма.Расписание.ДниНедели = ВыбранныеДниНедели;
			КонецЕсли;
			
			Если ИмяПеречисления <> "Ежемесячно" Тогда
				ВсеМесяцы = Новый Массив;
				Для Индекс = 1 По 12 Цикл
					ВсеМесяцы.Добавить(Индекс);
				КонецЦикла;
				Форма.Расписание.Месяцы = ВсеМесяцы;
				Форма.Расписание.ДеньВМесяце = 0;
			КонецЕсли;
		КонецЕсли;
		
		// Восстанавливаем параметры на текущей закладке в соответствии с параметрами расписания.
		Если ИмяПеречисления = "Ежедневно" Тогда
			Форма.ВремяНачала = Форма.Расписание.ВремяНачала;
			Форма.ПериодПовтораДней = Форма.Расписание.ПериодПовтораДней;
		ИначеЕсли ИмяПеречисления = "Еженедельно" Тогда
			Форма.ВремяНачала = Форма.Расписание.ВремяНачала;
			Для Каждого КлючИЗначение Из Форма.Кэш.Соответствия.ДниНедели Цикл
				Форма[КлючИЗначение.Ключ] = (Форма.Расписание.ДниНедели.Найти(КлючИЗначение.Значение) <> Неопределено);
			КонецЦикла;
		ИначеЕсли ИмяПеречисления = "Ежемесячно" Тогда
			Форма.ВремяНачала = Форма.Расписание.ВремяНачала;
			Если Форма.Расписание.ДеньВМесяце >= 0 Тогда
				Форма.ДеньВМесяце = Форма.Расписание.ДеньВМесяце;
				Элементы.ГиперссылкаНачалоКонецМесяца.Заголовок = НСтр("ru = 'начала'");
			Иначе
				Форма.ДеньВМесяце = -Форма.Расписание.ДеньВМесяце;
				Элементы.ГиперссылкаНачалоКонецМесяца.Заголовок = НСтр("ru = 'конца'");
			КонецЕсли;
			Для Каждого КлючИЗначение Из Форма.Кэш.Соответствия.Месяцы Цикл
				Форма[КлючИЗначение.Ключ] = (Форма.Расписание.Месяцы.Найти(КлючИЗначение.Значение) <> Неопределено);
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли; // Изменения = "" Или Изменения = "ПериодичностьРасписания"
	
	Если Изменения = "" Или Изменения = "НачалоКонецМесяца" Тогда
		Элементы.ГиперссылкаНачалоКонецМесяца.Заголовок = ?(Форма.Расписание.ДеньВМесяце >= 0, "начала", "конца");
	КонецЕсли;
	
	Если Изменения = "" Или Элементы.ДеталиСценария.ТекущаяСтраница = Элементы.СтраницаРасписание Тогда
		Элементы.ПредставлениеРасписания.Видимость = Объект.ВидСобытия = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыСобытий.ПовторяющеесяСобытие");
		Элементы.ПредставлениеРасписания.Заголовок = ПредставлениеРасписания(Форма.Расписание);
	КонецЕсли;
	
	Если Изменения = "" Или Изменения = "ВидСобытия" Тогда
		ЭтоПовторяющеесяСобытие = Объект.ВидСобытия = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыСобытий.ПовторяющеесяСобытие");
		Элементы.СтраницаРасписание.Видимость = ЭтоПовторяющеесяСобытие;
		Элементы.ПериодичностьРасписания.АвтоОтметкаНезаполненного = ЭтоПовторяющеесяСобытие;
		Элементы.ФормаВыполнитьСценарий.Видимость = ЭтоПовторяющеесяСобытие;
	КонецЕсли;
	
	Если Изменения = "" Тогда
		Элементы.ГруппаШапка.ТолькоПросмотр = Истина;
		Элементы.ДеталиСценария.ТолькоПросмотр = Истина;
		Элементы.ФормаРедактировать.Видимость = Истина;
	КонецЕсли;
	
	Если Изменения = "Редактирование" Или Объект.Ссылка.Пустая() Тогда
		Элементы.ГруппаШапка.ТолькоПросмотр = Ложь;
		Элементы.ДеталиСценария.ТолькоПросмотр = Ложь;
		Элементы.ФормаРедактировать.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВыполнитьСценарийНаСервере(Сценарий)
	АвтоматизацияСервер.ЗапуститьСценарий(Сценарий);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьСписокВыбораТипаИсточника()
	Возврат АвтоматизацияПовтИсп.ЗаполнитьСписокВыбораТипаИсточника()
КонецФункции

#КонецОбласти

#Область Расписание

//Обработчики полей

&НаКлиенте
Процедура МесяцыПриИзменении(Элемент)
	Если Элемент <> Неопределено Тогда
		Расписание.Месяцы = ИзменитьСоставМассива(ЭтотОбъект[Элемент.Имя], Кэш.Соответствия.Месяцы[Элемент.Имя], Расписание.Месяцы);
	КонецЕсли;
	ВидимостьДоступностьКорректность(ЭтотОбъект, "Месяцы");
КонецПроцедуры

&НаКлиенте
Процедура ДниНеделиПриИзменении(Элемент)
	Если Элемент <> Неопределено Тогда
		Расписание.ДниНедели = ИзменитьСоставМассива(ЭтотОбъект[Элемент.Имя], Кэш.Соответствия.ДниНедели[Элемент.Имя], Расписание.ДниНедели);
	КонецЕсли;
	ВидимостьДоступностьКорректность(ЭтотОбъект, "ДниНедели");
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьРасписание(Команда)
	ИзменитьРасписаниеВДиалоге();
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьРасписанияПриИзменении(Элемент)
	ВидимостьДоступностьКорректность(ЭтотОбъект, "ПериодичностьРасписания");
	Если Объект.ПериодичностьРасписания = ПредопределенноеЗначение("Перечисление.АвтоматизацияПериодичностиСценариев.Произвольное") Тогда
		ИзменитьРасписаниеВДиалоге();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНачалоКонецМесяцаНажатие(Элемент)
	Если Расписание.ДеньВМесяце = 0 Тогда
		ДеньВМесяце = 1;
		Расписание.ДеньВМесяце = -1;
	Иначе
		Расписание.ДеньВМесяце = -Расписание.ДеньВМесяце;
	КонецЕсли;
	Модифицированность = Истина;
	ВидимостьДоступностьКорректность(ЭтотОбъект, "НачалоКонецМесяца");
КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалаПриИзменении(Элемент)
	Расписание.ВремяНачала = ВремяНачала;
	ВидимостьДоступностьКорректность(ЭтотОбъект, "ВремяНачала");
КонецПроцедуры

&НаКлиенте
Процедура ПериодПовтораДнейПриИзменении(Элемент)
	Расписание.ПериодПовтораДней = ПериодПовтораДней;
	ВидимостьДоступностьКорректность(ЭтотОбъект, "ПериодПовтораДней");
КонецПроцедуры

&НаКлиенте
Процедура ДеньМесяцаПриИзменении(Элемент)
	Расписание.ДеньВМесяце = ?(Расписание.ДеньВМесяце >= 0, ДеньВМесяце, -ДеньВМесяце);
	ВидимостьДоступностьКорректность(ЭтотОбъект, "ДеньВМесяце");
КонецПроцедуры

//Обработчики команд

&НаКлиенте
Процедура УстановитьПометки(Команда)
	ВсеМесяцы = Новый Массив;
	Для Каждого КлючИЗначение Из Кэш.Соответствия.Месяцы Цикл
		ЭтотОбъект[КлючИЗначение.Ключ] = Истина;
		ВсеМесяцы.Добавить(КлючИЗначение.Значение);
	КонецЦикла;
	Расписание.Месяцы = ВсеМесяцы;
	ВидимостьДоступностьКорректность(ЭтотОбъект, "Месяцы");
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	ВсеМесяцы = Новый Массив;
	Для Каждого КлючИЗначение Из Кэш.Соответствия.Месяцы Цикл
		ЭтотОбъект[КлючИЗначение.Ключ] = Ложь;
	КонецЦикла;
	Расписание.Месяцы = ВсеМесяцы;
	ВидимостьДоступностьКорректность(ЭтотОбъект, "Месяцы");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРасписаниеПоШаблону(Команда)
	Обработчик = Новый ОписаниеОповещения("ЗаполнитьРасписаниеПоШаблонуЗавершение", ЭтотОбъект);
	
	СписокВариантов = СписокВариантовЗаполненияРасписаний();
	СписокВариантов.ПоказатьВыборЭлемента(Обработчик, НСтр("ru = 'Выберите шаблон расписания'"));
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРасписаниеПоШаблонуЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ЗаполнитьРасписаниеПоВарианту(ВыбранныйЭлемент.Значение, Истина);
	КонецЕсли;
КонецПроцедуры

// Формирует представление расписания регламентного задания.
//
// Параметры:
//   Расписание - РасписаниеРегламентногоЗадания - Расписание.
//
// Возвращаемое значение:
//   Строка - Представление расписания.
//
&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеРасписания(Расписание) Экспорт
	ПредставлениеРасписания = Строка(Расписание);
	ПредставлениеРасписания = ВРег(Лев(ПредставлениеРасписания, 1)) + Сред(ПредставлениеРасписания, 2);
	ПредставлениеРасписания = СтрЗаменить(СтрЗаменить(ПредставлениеРасписания, "  ", " "), " ]", "]") + ".";
	Возврат ПредставлениеРасписания;
КонецФункции

&НаКлиенте
Функция ИзменитьСоставМассива(Добавить, Элемент, Знач Массив)
	Индекс = Массив.Найти(Элемент);
	Если Добавить И Индекс = Неопределено Тогда
		ВГраницаПлюс1 = ?(Массив.Количество() >= Элемент, Элемент, Массив.Количество());
		Для Индекс = 1 По ВГраницаПлюс1 Цикл
			Если Массив[ВГраницаПлюс1 - Индекс] < Элемент Тогда
				Массив.Вставить(ВГраницаПлюс1 - Индекс + 1, Элемент);
				Возврат Массив;
			КонецЕсли;
		КонецЦикла;
		Массив.Вставить(0, Элемент);
	ИначеЕсли Не Добавить И Индекс <> Неопределено Тогда
		Массив.Удалить(Индекс);
	КонецЕсли;
	Возврат Массив;
КонецФункции

&НаКлиенте
Процедура ИзменитьРасписаниеВДиалоге()
	Обработчик = Новый ОписаниеОповещения("ПослеИзмененияРасписания", ЭтотОбъект);
	ДиалогРасписания = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	ДиалогРасписания.Показать(Обработчик);
КонецПроцедуры

&НаКлиенте
Процедура ПослеИзмененияРасписания(РасписаниеРезультат, ДополнительныеПараметры) Экспорт
	Если РасписаниеРезультат <> Неопределено Тогда
		Модифицированность = Истина;
		Расписание = РасписаниеРезультат;
		ВидимостьДоступностьКорректность(ЭтотОбъект, "Расписание");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРасписаниеПоВарианту(Вариант, ОбновитьВидимость = Ложь)
	// Список вариантов - см. СписокВариантовЗаполненияРасписаний().
	
	Расписание = Новый РасписаниеРегламентногоЗадания;
	
	// в 7:30 утра
	Расписание.ВремяНачала = '00010101073000';
	
	// каждый день
	Расписание.ПериодПовтораДней = 1;
	
	// по дням недели
	ДеньНеделиМин = 1;
	ДеньНеделиМакс = 7;
	
	// по всем месяцам
	ВсеМесяцы = Новый Массив;
	Для Индекс = 1 По 12 Цикл
		ВсеМесяцы.Добавить(Индекс);
	КонецЦикла;
	Расписание.Месяцы = ВсеМесяцы;
	
	Если Вариант = 1 Тогда // "Каждый день"
		Объект.ПериодичностьРасписания = Перечисления.АвтоматизацияПериодичностиСценариев.Ежедневно;
		
	ИначеЕсли Вариант = 2 Тогда // "Каждый второй день"
		Объект.ПериодичностьРасписания = Перечисления.АвтоматизацияПериодичностиСценариев.Ежедневно;
		Расписание.ПериодПовтораДней = 2;
		
	ИначеЕсли Вариант = 3 Тогда // "Каждый четвертый день"
		Объект.ПериодичностьРасписания = Перечисления.АвтоматизацияПериодичностиСценариев.Ежедневно;
		Расписание.ПериодПовтораДней = 4;
		
	ИначеЕсли Вариант = 4 Тогда // "По будням"
		Объект.ПериодичностьРасписания = Перечисления.АвтоматизацияПериодичностиСценариев.Еженедельно;
		ДеньНеделиМин = 1;
		ДеньНеделиМакс = 5;
		
	ИначеЕсли Вариант = 5 Тогда // "По выходным"
		Объект.ПериодичностьРасписания = Перечисления.АвтоматизацияПериодичностиСценариев.Еженедельно;
		Расписание.ВремяНачала = '00010101220000'; // в 10:00 вечера
		ДеньНеделиМин = 6;
		ДеньНеделиМакс = 7;
		
	ИначеЕсли Вариант = 6 Тогда // "По понедельникам"
		Объект.ПериодичностьРасписания = Перечисления.АвтоматизацияПериодичностиСценариев.Еженедельно;
		ДеньНеделиМин = 1;
		ДеньНеделиМакс = 1;
		
	ИначеЕсли Вариант = 7 Тогда // "По пятницам"
		Объект.ПериодичностьРасписания = Перечисления.АвтоматизацияПериодичностиСценариев.Еженедельно;
		ДеньНеделиМин = 5;
		ДеньНеделиМакс = 5;
		
	ИначеЕсли Вариант = 8 Тогда // "По воскресеньям"
		Объект.ПериодичностьРасписания = Перечисления.АвтоматизацияПериодичностиСценариев.Еженедельно;
		Расписание.ВремяНачала = '00010101220000'; // в 10:00 вечера
		ДеньНеделиМин = 7;
		ДеньНеделиМакс = 7;
		
	ИначеЕсли Вариант = 9 Тогда // "В первый день месяца"
		Объект.ПериодичностьРасписания = Перечисления.АвтоматизацияПериодичностиСценариев.Ежемесячно;
		Расписание.ДеньВМесяце = 1;
		
	ИначеЕсли Вариант = 10 Тогда // "В последний день месяца"
		Объект.ПериодичностьРасписания = Перечисления.АвтоматизацияПериодичностиСценариев.Ежемесячно;
		Расписание.ДеньВМесяце = -1;
		
	ИначеЕсли Вариант = 11 Тогда // СКаждый квартал десятого числа".
		ВсеМесяцы = Новый Массив;
		ВсеМесяцы.Добавить(1);
		ВсеМесяцы.Добавить(4);
		ВсеМесяцы.Добавить(7);
		ВсеМесяцы.Добавить(10);
		Расписание.Месяцы = ВсеМесяцы;
		Объект.ПериодичностьРасписания = Перечисления.АвтоматизацияПериодичностиСценариев.Ежемесячно;
		Расписание.ДеньВМесяце = 10;
		
	ИначеЕсли Вариант = 12 Тогда // "Другое..."
		Объект.ПериодичностьРасписания = Перечисления.АвтоматизацияПериодичностиСценариев.Произвольное;
	
	Иначе
		Объект.ПериодичностьРасписания = Перечисления.АвтоматизацияПериодичностиСценариев.Ежедневно;
		
	КонецЕсли;
	
	// по дням недели
	ВыбранныеДниНедели = Новый Массив;
	Для Индекс = ДеньНеделиМин По ДеньНеделиМакс Цикл
		ВыбранныеДниНедели.Добавить(Индекс);
	КонецЦикла;
	Расписание.ДниНедели = ВыбранныеДниНедели;
	
	Если ОбновитьВидимость Тогда
		ВидимостьДоступностьКорректность(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

// Возвращает набор шаблонов заполнения расписаний регламентного задания.
&НаКлиенте
Функция СписокВариантовЗаполненияРасписаний() Экспорт
	
	СписокВариантов = Новый СписокЗначений;
	СписокВариантов.Добавить(1, НСтр("ru = 'Каждый день'"));
	СписокВариантов.Добавить(2, НСтр("ru = 'Каждый второй день'"));
	СписокВариантов.Добавить(3, НСтр("ru = 'Каждый четвертый день'"));
	СписокВариантов.Добавить(4, НСтр("ru = 'По будням'"));
	СписокВариантов.Добавить(5, НСтр("ru = 'По выходным'"));
	СписокВариантов.Добавить(6, НСтр("ru = 'По понедельникам'"));
	СписокВариантов.Добавить(7, НСтр("ru = 'По пятницам'"));
	СписокВариантов.Добавить(8, НСтр("ru = 'По воскресеньям'"));
	СписокВариантов.Добавить(9, НСтр("ru = 'В первый день месяца'"));
	СписокВариантов.Добавить(10, НСтр("ru = 'В последний день месяца'"));
	СписокВариантов.Добавить(11, НСтр("ru = 'Каждый квартал десятого числа'"));
	СписокВариантов.Добавить(12, НСтр("ru = 'Другое...'"));
	
	Возврат СписокВариантов;
КонецФункции

&НаСервере
Процедура ПрочитатьРасписаниеРегламентногоЗадания()
	УстановитьПривилегированныйРежим(Истина);
	ИдентификаторЗадания = ?(СозданКопированием, СценарийОснование.РегламентноеЗадание, Объект.РегламентноеЗадание);
	Если ТипЗнч(ИдентификаторЗадания) = Тип("УникальныйИдентификатор") Тогда
		Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
		Если Задание <> Неопределено Тогда
			Расписание = Задание.Расписание;
			Если Объект.ПериодичностьРасписания <> Перечисления.АвтоматизацияПериодичностиСценариев.Произвольное Тогда
				Расписание.ВремяКонца = '00010101';
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКэшРасписания()
	// Преобразование наименований в значения.
	ДниНедели = Новый Соответствие;
	ДниНедели.Вставить("Понедельник", 1);
	ДниНедели.Вставить("Вторник",     2);
	ДниНедели.Вставить("Среда",       3);
	ДниНедели.Вставить("Четверг",     4);
	ДниНедели.Вставить("Пятница",     5);
	ДниНедели.Вставить("Суббота",     6);
	ДниНедели.Вставить("Воскресенье", 7);
	ДниНедели = Новый ФиксированноеСоответствие(ДниНедели);
	
	Месяцы = Новый Соответствие;
	Месяцы.Вставить("Январь",   1);
	Месяцы.Вставить("Февраль",  2);
	Месяцы.Вставить("Март",     3);
	Месяцы.Вставить("Апрель",   4);
	Месяцы.Вставить("Май",      5);
	Месяцы.Вставить("Июнь",     6);
	Месяцы.Вставить("Июль",     7);
	Месяцы.Вставить("Август",   8);
	Месяцы.Вставить("Сентябрь", 9);
	Месяцы.Вставить("Октябрь",  10);
	Месяцы.Вставить("Ноябрь",   11);
	Месяцы.Вставить("Декабрь",  12);
	Месяцы = Новый ФиксированноеСоответствие(Месяцы);
	
	// Структура кэша.
	Кэш = Новый Структура;
	Кэш.Вставить("Соответствия", Новый ФиксированнаяСтруктура("ДниНедели, Месяцы", ДниНедели, Месяцы));
	
	Возврат Новый ФиксированнаяСтруктура(Кэш);
КонецФункции

#КонецОбласти




