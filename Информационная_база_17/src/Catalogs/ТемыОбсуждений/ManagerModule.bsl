#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	// Создание заполняемого предмета задачи
	Если ВидФормы = "ФормаОбъекта" И Параметры.Свойство("ШаблонДокумента") Тогда
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = Метаданные.Справочники.СообщенияОбсуждений.Формы.ФормаЭлемента;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Карточка") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"Карточка",
			"Тема обсуждения",
			ПечатьКарточки(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),
			,
			"Справочник.ТемыОбсуждений.ПФ_MXL_Карточка");
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьКарточки(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ИспользоватьДополнительныеРеквизитыИСведения = Ложь;//ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения");
	
	// Создаем табличный документ и устанавливаем имя параметров печати
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_КарточкаСообщения";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.ТемыОбсуждений.ПФ_MXL_Карточка");
	ОбластьШапкаТемы = Макет.ПолучитьОбласть("ШапкаТемы");
	
	ПервыйДокумент = Истина;
	
	Для Каждого ОбъектПечати Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки с которой начали выводить текущий документ
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Заполнение реквизитов темы обсуждения
		ОбластьШапкаТемы.Параметры.Название = Строка(ОбъектПечати) + " (" + ТипЗнч(ОбъектПечати) + ")" ;
		ОбластьШапкаТемы.Параметры.Автор = Строка(ОбъектПечати.Автор);
		ОбластьШапкаТемы.Параметры.Дата = ОбъектПечати.ДатаСоздания;
		ОбластьШапкаТемы.Параметры.Раздел = ОбъектПечати.Папка;
		Если ЗначениеЗаполнено(ОбъектПечати.Документ) Тогда
			ОбластьШапкаТемы.Параметры.Предмет = 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					"%1 (%2)",
					Строка(ОбъектПечати.Документ),
					ТипЗнч(ОбъектПечати.Документ));	
		Иначе
			ОбластьШапкаТемы.Параметры.Предмет = НСтр("ru = 'без предмета'");	
		КонецЕсли;
		ОбластьШапкаТемы.Параметры.ЭтоЗакрытаяТема = 
			?(ОбъектПечати.Закрытая, НСтр("ru = 'Это закрытая тема'"), НСтр("ru = 'Это открытая тема'"));
					
		ПервоеСообщениеТемы = РаботаСОбсуждениями.НайтиПервоеСообщениеТемы(ОбъектПечати);
		ОбластьШапкаТемы.Параметры.Текст = ПервоеСообщениеТемы.ТекстСообщения;
		
		//ДвоичныеДанныеФото = ОбъектПечати.Автор.ФизЛицо.ФайлФотографии.Получить();
		//Если ЗначениеЗаполнено(ДвоичныеДанныеФото) Тогда
		//	КартинкаФото = Новый Картинка(ДвоичныеДанныеФото);
		//Иначе
		//	КартинкаФото = БиблиотекаКартинок.ПользовательБезФото;
		//КонецЕсли;
		//ОбластьШапкаТемы.Рисунки.ФотоАвтора.Картинка = КартинкаФото;
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТемы);
		
		// Получение информации о последнем сообщении темы
		СведенияОТеме = РаботаСОбсуждениями.ПолучитьСведенияОТеме(ОбъектПечати);
	
		Если СведенияОТеме <> Неопределено Тогда
			КоличествоОтветов = СведенияОТеме.КоличествоСообщений;
			ДатаПоследнегоСообщения = СведенияОТеме.ДатаПоследнегоСообщения;
			АвторПоследнегоСообщения = СведенияОТеме.АвторПоследнегоСообщения;
			
			ОбластьПоследнееСообщение = Макет.ПолучитьОбласть("ПоследнееСообщение");
			ОбластьПоследнееСообщение.Параметры.АвторПоследнегоСообщения = АвторПоследнегоСообщения;
			ОбластьПоследнееСообщение.Параметры.ДатаПоследнегоСообщения = ДатаПоследнегоСообщения;
			ОбластьПоследнееСообщение.Параметры.ОтветовВсего = КоличествоОтветов;
						
			ЗапросПоследнееСообщение = Новый Запрос;
			ЗапросПоследнееСообщение.Текст = 
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	СообщенияОбсуждений.ТекстСообщения
				|ИЗ
				|	Справочник.СообщенияОбсуждений КАК СообщенияОбсуждений
				|ГДЕ
				|	СообщенияОбсуждений.ВладелецСообщения = &Тема
				|
				|УПОРЯДОЧИТЬ ПО
				|	СообщенияОбсуждений.ДатаСоздания УБЫВ";
			ЗапросПоследнееСообщение.УстановитьПараметр("Тема", ОбъектПечати);
			Выборка = ЗапросПоследнееСообщение.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				ОбластьПоследнееСообщение.Параметры.ТекстПоследнегоСообщения = Выборка.ТекстСообщения;
			Иначе
				ОбластьПоследнееСообщение.Параметры.ТекстПоследнегоСообщения = "";
			КонецЕсли;
			
			ДвоичныеДанныеФото = АвторПоследнегоСообщения.ФизЛицо.ФайлФотографии.Получить();
			Если ЗначениеЗаполнено(ДвоичныеДанныеФото) Тогда
				КартинкаФото = Новый Картинка(ДвоичныеДанныеФото);
			Иначе
				КартинкаФото = БиблиотекаКартинок.ПользовательБезФото;
			КонецЕсли;
			ОбластьПоследнееСообщение.Рисунки.ФотоАвтораПоследнегоСообщения.Картинка = КартинкаФото;
			
			ТабличныйДокумент.Вывести(ОбластьПоследнееСообщение);
		КонецЕсли;
		
		// В табличном документе зададим имя области в которую был 
		// выведен объект. Нужно для возможности печати по-комплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ОбъектПечати);
	КонецЦикла;		

	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

// Создает новую тему.
Функция СоздатьНовуюТему(РеквизитыТемы, Автор = Неопределено, РабочаяГруппаДобавить = Неопределено, РабочаяГруппаУдалить = Неопределено) Экспорт
	
	НоваяТема = СоздатьЭлемент();
	
	ЗаполнитьЗначенияСвойств(НоваяТема, РеквизитыТемы);
	
	Наименование = РеквизитыТемы.Наименование;
	Если Не ЗначениеЗаполнено(НоваяТема.Наименование) И ЗначениеЗаполнено(НоваяТема.Документ) Тогда
		НоваяТема.Наименование = НСтр("ru = 'Обсуждение ""%1""'");
		НоваяТема.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НоваяТема.Наименование, НоваяТема.Документ);
	КонецЕсли;
	
	НоваяТема.ТемаДокумента = ЗначениеЗаполнено(РеквизитыТемы.Документ);
	
	Если Не ЗначениеЗаполнено(Автор) Тогда
		Автор = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	НоваяТема.Автор = Автор;
	
	Если ЗначениеЗаполнено(РабочаяГруппаДобавить) Тогда
		НоваяТема.ДополнительныеСвойства.Вставить("РабочаяГруппаДобавить", РабочаяГруппаДобавить);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РабочаяГруппаУдалить) Тогда
		 НоваяТема.ДополнительныеСвойства.Вставить("РабочаяГруппаУдалить", РабочаяГруппаУдалить);
	КонецЕсли;
	
	НоваяТема.Записать();
	
	Возврат НоваяТема.Ссылка;
	
КонецФункции

// Возвращает имя предмета процесса по умолчанию
//
Функция ПолучитьИмяПредметаПоУмолчанию(Ссылка) Экспорт
	
	Возврат НСтр("ru='Тема'");
	
КонецФункции

// Возвращает структуру реквизитов темы форума.
//
// Возвращаемое значение:
//  Структура - Структура реквизитов темы форума.
//
Функция ПолучитьСтруктуруРеквизитов() Экспорт
	
	СтруктураРеквизитов = Новый Структура("Наименование, Документ, Папка, Закрытая");
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

// Возвращает структуру полей темы обсуждений
//
// Возвращаемое значение:
//   Структура
//     Наименование
//     Закрытая
//     Документ
//     Автор
//     ДатаСоздания
//     ТемаДокумента
//
Функция ПолучитьСтруктуруТемыОбсуждений() Экспорт
	
	СтруктураТемыОбсуждения = Новый Структура;
	СтруктураТемыОбсуждения.Вставить("Наименование");
	СтруктураТемыОбсуждения.Вставить("Закрытая");
	СтруктураТемыОбсуждения.Вставить("Документ");
	СтруктураТемыОбсуждения.Вставить("Папка");
	СтруктураТемыОбсуждения.Вставить("Автор");
	СтруктураТемыОбсуждения.Вставить("ДатаСоздания");
	СтруктураТемыОбсуждения.Вставить("ТемаДокумента");
	СтруктураТемыОбсуждения.Вставить("ТекстСообщения");
	
	Возврат СтруктураТемыОбсуждения;
	
КонецФункции

// Создает и записывает в БД тему обсуждений
//
// Параметры:
//   СтруктураТемыОбсуждения - Структура - структура полей темы обсуждений.
//
// Возвращаемое значение:
//   СправочникСсылка.ТемыОбсуждений - созданная тема.
//
Функция СоздатьТемуОбсуждений(СтруктураТемыОбсуждения) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Тема");
	Результат.Вставить("ПервоеСообщениеТемы");
	
	Попытка
		
		НачатьТранзакцию();
		
		НоваяТемаОбсуждений = СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(НоваяТемаОбсуждений, СтруктураТемыОбсуждения);
		НоваяТемаОбсуждений.Записать();
		
		СправочникСообщения = Справочники.СообщенияОбсуждений;
		НовоеСообщение = СправочникСообщения.СоздатьЭлемент();
		НовоеСообщение.ВладелецСообщения = НоваяТемаОбсуждений.Ссылка;
		НовоеСообщение.ПервоеСообщениеТемы = Истина;
		
		Если ЗначениеЗаполнено(СтруктураТемыОбсуждения.ТекстСообщения) Тогда
			НовоеСообщение.ТекстСообщения = СтруктураТемыОбсуждения.ТекстСообщения;
		Иначе
			НовоеСообщение.ТекстСообщения = НоваяТемаОбсуждений.Наименование;
		КонецЕсли;
		
		НовоеСообщение.Записать();
		
		Результат.Тема = НоваяТемаОбсуждений.Ссылка;
		Результат.ПервоеСообщениеТемы = НовоеСообщение.Ссылка;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
