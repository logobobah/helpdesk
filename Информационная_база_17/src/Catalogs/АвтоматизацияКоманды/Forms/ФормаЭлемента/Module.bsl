
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ПараметрыВыбораШаблона = Новый Массив;
	ПараметрыВыбораШаблона.Добавить(Новый ПараметрВыбора("Отбор.ПредназначенДляЭлектронныхПисем", Истина));
	Элементы.ШаблонПисьма.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораШаблона);
	
	ЗаполнитьСписокРеквизитовИсточника();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
		
	Если Объект.Вид = Перечисления.АвтоматизацияВидыКомандСценариев.ОтправитьЭлектронноеПисьмо Тогда 
		
		Если Объект.УчетнаяЗапись.Пустая() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Учетная запись электронной почты не заполнена.", , "Объект.УчетнаяЗапись", , Отказ);				
		КонецЕсли;
		Если Объект.ШаблонПисьма.Пустая() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Шаблон письма не заполнен.", , "Объект.ШаблонПисьма", , Отказ);				
		КонецЕсли;
		
	ИначеЕсли Объект.Вид = Перечисления.АвтоматизацияВидыКомандСценариев.ВыполнитьКодИзВнешнейОбработки Тогда
		Если Объект.ВнешняяОбработка.Пустая() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Внешняя обработка не заполнена.", , "Объект.ВнешняяОбработка", , Отказ);				
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВидимостьЭлементовВидаКоманды();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТипИсточникаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокВыбора = ЗаполнитьСписокВыбораТипаИсточника();
	СписокВыбора.ПоказатьВыборЭлемента(
			Новый ОписаниеОповещения("ПослеВыбораТипаИсточника", ЭтаФорма), 
			"Выберите тип источника",
			СписокВыбора.НайтиПоЗначению(Объект.ТипИсточника)
	);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораТипаИсточника(ВыбранныйЭлемент, ПараметрыВыбора) Экспорт
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Объект.ТипИсточника = ВыбранныйЭлемент.Значение;
		ЗаполнитьСписокРеквизитовИсточника();
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Объект.Наименование = СформироватьНаименование(ЭтотОбъект);	
КонецПроцедуры

&НаКлиенте
Процедура ВидКомандыПриИзменении(Элемент)
	ВидимостьЭлементовВидаКоманды();
КонецПроцедуры

&НаКлиенте
Процедура ШаблонПисьмаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ПустаяСтрока(Объект.ТипИсточника) Тогда
		Сообщить("Тип источника не указан.");
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ШаблонПисьмаНачалоВыбораЗавершение", ЭтотОбъект, Неопределено);
	ШаблоныСообщенийКлиент.ВыбратьШаблон(Оповещение, "Письмо", ПредопределенноеЗначение(Объект.ТипИсточника+".ПустаяСсылка"));
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонПисьмаНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Объект.ШаблонПисьма = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнениеИсточникаПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ЗаполнениеИсточника.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПустаяСтрока(Элементы.ЗаполнениеИсточника.ТекущиеДанные.Реквизит) Тогда
		
		Элементы.ЗаполнениеИсточникаЗначение.ОграничениеТипа = АвтоматизацияСервер.ПолучитьТипЗначенияРеквизита(
				Объект.ТипИсточника, 
				Элементы.ЗаполнениеИсточника.ТекущиеДанные.Реквизит
		);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнениеИсточникаРеквизитПриИзменении(Элемент)
	
	Если Элементы.ЗаполнениеИсточника.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ЗаполнениеИсточника.ТекущиеДанные.Значение = Неопределено;	
	ЗаполнениеИсточникаПриАктивизацииСтроки(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиПисемПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	НастроитьПолеПолучателя();
КонецПроцедуры

&НаКлиенте
Процедура ЗадачиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	НастроитьПолеПолучателя();
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиНапоминанийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	НастроитьПолеПолучателя();
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиСпособЗаполненияПриИзменении(Элемент)
	
	Если Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.ОтправитьЭлектронноеПисьмо") Тогда
		ТекущиеДанные = Элементы.ПолучателиПисем.ТекущиеДанные;
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.СоздатьЗадачу") Тогда
		ТекущиеДанные = Элементы.Задачи.ТекущиеДанные;
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.СоздатьНапоминаниеПользователю") Тогда
		ТекущиеДанные = Элементы.ПолучателиНапоминаний.ТекущиеДанные;
	КонецЕсли;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Получатель = "";	
	НастроитьПолеПолучателя();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.ОтправитьЭлектронноеПисьмо") Тогда
		ТекущиеДанные = Элементы.ПолучателиПисем.ТекущиеДанные;
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.СоздатьЗадачу") Тогда
		ТекущиеДанные = Элементы.Задачи.ТекущиеДанные;
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.СоздатьНапоминаниеПользователю") Тогда
		ТекущиеДанные = Элементы.ПолучателиНапоминаний.ТекущиеДанные;
	КонецЕсли;
	Если ТекущиеДанные.СпособЗаполнения = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыПолучателей.РеквизитИсточника") Тогда
		СтандартнаяОбработка = Ложь;
		СписокВыбора = ЗаполнитьСписокВыбораПолучателя(Объект.ТипИсточника, Объект.Вид);
		СписокВыбора.ПоказатьВыборЭлемента(
				Новый ОписаниеОповещения("ПолучательНачалоВыбораЗавершение", ЭтаФорма), 
				"Выберите тип источника",
				СписокВыбора.НайтиПоЗначению(ТекущиеДанные.Получатель)
		);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательНачалоВыбораЗавершение(ВыбранныйЭлемент, ПараметрыВыбора) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.ОтправитьЭлектронноеПисьмо") Тогда
		ТекущиеДанные = Элементы.ПолучателиПисем.ТекущиеДанные;
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.СоздатьЗадачу") Тогда
		ТекущиеДанные = Элементы.Задачи.ТекущиеДанные;
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.СоздатьНапоминаниеПользователю") Тогда
		ТекущиеДанные = Элементы.ПолучателиНапоминаний.ТекущиеДанные;
	КонецЕсли;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Получатель = ВыбранныйЭлемент.Значение;	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ЗаполнитьСписокВыбораТипаИсточника()
	Возврат АвтоматизацияПовтИсп.ЗаполнитьСписокВыбораТипаИсточника();
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СформироватьНаименование(Форма)
	
	Объект = Форма.Объект;
	Получатели = "";
	Если Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.ОтправитьЭлектронноеПисьмо")
			И Объект.ПолучателиПисем.Количество() > 0 Тогда
		Для Каждого СтрокаТЧ Из Объект.ПолучателиПисем Цикл
			Получатели = Получатели + СтрокаТЧ.Получатель + ", ";
		КонецЦикла;
		Получатели = Лев(Получатели, СтрДлина(Получатели) - 2);
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.СоздатьНапоминаниеПользователю")
			И Объект.ПолучателиНапоминаний.Количество() > 0 Тогда
		Для Каждого СтрокаТЧ Из Объект.ПолучателиНапоминаний Цикл
			Получатели = Получатели + СтрокаТЧ.Получатель + ", ";
		КонецЦикла;
		Получатели = Лев(Получатели, СтрДлина(Получатели) - 2);
	КонецЕсли;
	
	Наименование = СтрШаблон(НСтр("ru='%1'"), Объект.Вид);
	Если ПустаяСтрока(Получатели) И Не ПустаяСтрока(Объект.ТипИсточника) Тогда
		Наименование = Наименование + СтрШаблон(НСтр("ru=' (%1)'"), Объект.ТипИсточника);
	ИначеЕсли Не ПустаяСтрока(Объект.ТипИсточника) Тогда
		Наименование = Наименование + СтрШаблон(НСтр("ru=' (%1, %2)'"), Объект.ТипИсточника, Получатели);
	Иначе
		Наименование = Наименование + СтрШаблон(НСтр("ru=' (%1)'"), Получатели);
	КонецЕсли;
	Возврат Наименование;
	
КонецФункции

&НаКлиенте
Процедура ВидимостьЭлементовВидаКоманды()
	
	Элементы.СтраницыКоманд.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	Если Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.ВключитьОтключитьСценарий") Тогда
		Элементы.СтраницыКоманд.ТекущаяСтраница = Элементы.СтраницаСценарии;
		Элементы.СценарииВключитьОтключить.Видимость = Истина;
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.ВыполнитьКодИзВнешнейОбработки") Тогда
		Элементы.СтраницыКоманд.ТекущаяСтраница = Элементы.СтраницаВнешняяОбработка;
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.ВыполнитьПрограммныйКод")
			Или Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.ВыполнитьПрограммныйКодВФоне") Тогда
		Элементы.СтраницыКоманд.ТекущаяСтраница = Элементы.СтраницаПрограммныйКод;
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.ВыполнитьСписокКоманд") Тогда
		Элементы.СтраницыКоманд.ТекущаяСтраница = Элементы.СтраницаКоманды;
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.ЗаполнитьИсточник") Тогда
		Элементы.СтраницыКоманд.ТекущаяСтраница = Элементы.СтраницаЗаполнитьИсточник;
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.ЗапуститьСценарии") Тогда
		Элементы.СтраницыКоманд.ТекущаяСтраница = Элементы.СтраницаСценарии;
		Элементы.СценарииВключитьОтключить.Видимость = Ложь;
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.ОтправитьЭлектронноеПисьмо") Тогда
		Элементы.СтраницыКоманд.ТекущаяСтраница = Элементы.СтраницаОтправитьПисьмо;
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.ПроверитьЗаполнениеИсточника") Тогда
		Элементы.СтраницыКоманд.ТекущаяСтраница = Элементы.СтраницаПроверитьЗаполнение;
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.СоздатьЗадачу") Тогда
		Элементы.СтраницыКоманд.ТекущаяСтраница = Элементы.СтраницаСоздатьЗадачу;
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.СоздатьНапоминаниеПользователю") Тогда
		Элементы.СтраницыКоманд.ТекущаяСтраница = Элементы.СтраницаСоздатьНапоминание;
	Иначе
		Элементы.СтраницыКоманд.ТекущаяСтраница = Элементы.СтраницаПусто;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьПолеПолучателя()
	
	Если Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.ОтправитьЭлектронноеПисьмо") Тогда
		ТекущаяСтрока = Объект.ПолучателиПисем.НайтиПоИдентификатору(Элементы.ПолучателиПисем.ТекущаяСтрока);
		ЭлементПолучатель = Элементы.ПолучателиПисемПолучатель;
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.СоздатьЗадачу") Тогда
		ТекущаяСтрока = Объект.Задачи.НайтиПоИдентификатору(Элементы.Задачи.ТекущаяСтрока);
		ЭлементПолучатель = Элементы.ЗадачиПолучатель;
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.СоздатьНапоминаниеПользователю") Тогда
		ТекущаяСтрока = Объект.ПолучателиНапоминаний.НайтиПоИдентификатору(Элементы.ПолучателиНапоминаний.ТекущаяСтрока);
		ЭлементПолучатель = Элементы.ПолучателиНапоминанийПолучатель;
	КонецЕсли;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СпособЗаполнения = ТекущаяСтрока.СпособЗаполнения;
	ЭлементПолучатель.ТолькоПросмотр = Не ЗначениеЗаполнено(СпособЗаполнения);
	Если ЭлементПолучатель.ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;
	
	Если СпособЗаполнения = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыПолучателей.УказатьВручную") Тогда
		ЭлементПолучатель.РедактированиеТекста = Истина;
		ЭлементПолучатель.КнопкаВыбора = Ложь;
		ЭлементПолучатель.ОграничениеТипа = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100));
	ИначеЕсли СпособЗаполнения = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыПолучателей.ВыбратьИзБазы") Тогда
		ЭлементПолучатель.РедактированиеТекста = Ложь;
		ЭлементПолучатель.КнопкаВыбора = Истина;
		//Получение массива типов
		Если Объект.Вид = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.ОтправитьЭлектронноеПисьмо") Тогда
			МассивТипов = ПолучитьТипыСКонтактнойИнформацией();
			МассивТипов.Добавить(Тип("СправочникСсылка.ГруппыПользователей"));
		Иначе
			МассивТипов = Новый Массив;
			МассивТипов.Добавить(Тип("СправочникСсылка.Пользователи"));
		КонецЕсли;
		ЭлементПолучатель.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	Иначе
		ЭлементПолучатель.РедактированиеТекста = Ложь;
		ЭлементПолучатель.КнопкаВыбора = Истина;
		ЭлементПолучатель.ОграничениеТипа = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(150));
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТипыСКонтактнойИнформацией()
	Возврат АвтоматизацияПовтИсп.ПолучитьТипыСКонтактнойИнформацией();
КонецФункции

&НаСервереБезКонтекста
Функция ЗаполнитьСписокВыбораПолучателя(ТипИсточника, ВидКоманды)
	
	СписокРеквизитов = Новый СписокЗначений;
	МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ТипИсточника);
	Если МетаданныеОбъекта = Неопределено Тогда
		Возврат СписокРеквизитов;
	КонецЕсли;	
	
	Если ВидКоманды = ПредопределенноеЗначение("Перечисление.АвтоматизацияВидыКомандСценариев.ОтправитьЭлектронноеПисьмо") Тогда
		
		МассивТипов = АвтоматизацияПовтИсп.ПолучитьТипыСКонтактнойИнформацией();
		МассивТипов.Добавить(Тип("СправочникСсылка.ГруппыПользователей"));
		
	Иначе
		
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("СправочникСсылка.Пользователи"));
		
	КонецЕсли;

	//Поиск реквизитов объекта с наличием контактной информации
	ДобавитьВСписокРеквизитыСКонтактами(МетаданныеОбъекта, СписокРеквизитов, МассивТипов);
	Для Каждого ТабЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
		ДобавитьВСписокРеквизитыСКонтактами(ТабЧасть, СписокРеквизитов, МассивТипов, Истина);
	КонецЦикла;
		
	Возврат СписокРеквизитов;
КонецФункции

&НаСервереБезКонтекста
Процедура ДобавитьВСписокРеквизитыСКонтактами(МетаданныеОбъекта, СписокРеквизитов, МассивТипов, 
		ЭтоТЧ = Ложь, Родитель = Неопределено, РодительРеквизит = Неопределено)
	
	//Поиск реквизитов объекта с наличием контактной информации
	Для Каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		//Анализируем каждый тип реквизита
		МассивТиповРеквизита = Реквизит.Тип.Типы();
		Для Каждого ТипРеквизита Из МассивТиповРеквизита Цикл
			
			//Поиск вложенных реквизитов
			Если Родитель = Неопределено Тогда
				МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТипРеквизита);
				Если МетаданныеРеквизита <> Неопределено И 
					(Метаданные.Справочники.Содержит(МетаданныеРеквизита) ИЛИ Метаданные.Документы.Содержит(МетаданныеРеквизита)) Тогда
					ДобавитьВСписокРеквизитыСКонтактами(МетаданныеРеквизита, СписокРеквизитов, МассивТипов, ЭтоТЧ, МетаданныеОбъекта, Реквизит);
				КонецЕсли;
			КонецЕсли;
			
			//Тип не соответствует ранее отобранным
			Если МассивТипов.Найти(ТипРеквизита) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если Родитель = Неопределено Тогда
				СписокРеквизитов.Добавить(Реквизит.ПолноеИмя(), ?(ЭтоТЧ, МетаданныеОбъекта.Синоним+".", "") + Реквизит.Синоним);
			ИначеЕсли ЭтоТЧ Тогда
				СписокРеквизитов.Добавить(
						Родитель.ПолноеИмя()+".Реквизит."+РодительРеквизит.Имя+".Реквизит."+Реквизит.Имя, 
						Родитель.Синоним+"."+РодительРеквизит.Синоним+"."+Реквизит.Синоним
				);
			Иначе
				СписокРеквизитов.Добавить(
						Родитель.ПолноеИмя()+".Реквизит."+РодительРеквизит.Имя+".Реквизит."+Реквизит.Имя, 
						РодительРеквизит.Синоним+"."+Реквизит.Синоним
				);
			КонецЕсли;
			Прервать;
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры
	
&НаСервере
Процедура ЗаполнитьСписокРеквизитовИсточника()
	
	Реквизиты = АвтоматизацияСервер.СписокРеквизитовИсточника(Объект.ТипИсточника);
	Для Каждого Реквизит Из Реквизиты Цикл		
		Элементы.ЗаполнениеИсточникаРеквизит.СписокВыбора.Добавить(Реквизит.Значение, Реквизит.Представление);	
		Элементы.ПроверкаЗаполненияИсточникаРеквизит.СписокВыбора.Добавить(Реквизит.Значение, Реквизит.Представление);	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти