#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает структуру реквизитов, заполненную по ДаннымЗаполнения.
//
Функция СформироватьСтруктуруРеквизитовШаблонаПисьма(Знач ДанныеЗаполнения) Экспорт
	
	Результат = Новый Структура;
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	Результат.Вставить("Дата", ТекущаяДата());
	Результат.Вставить("Автор", ТекущийПользователь);
	Результат.Вставить("Важность", Перечисления.ВажностьПисем.Обычная);
	Результат.Вставить("ТипТекста", Перечисления.ТипыТекстовПочтовыхСообщений.ПростойТекст);
	
	КодировкаИсходящихПисем =
		ВстроеннаяПочтаСерверПовтИсп.ПолучитьПерсональнуюНастройку("КодировкаИсходящихПисем");
	
	Если ПустаяСтрока(КодировкаИсходящихПисем) Тогда
		КодировкаИсходящихПисем = "utf-8";
	КонецЕсли;
	
	Результат.Вставить("Кодировка", КодировкаИсходящихПисем);
	
	УчетнаяЗаписьДляОтправки = ВстроеннаяПочтаСервер.ПолучитьУчетнуюЗаписьДляОтправки();
	Если ЗначениеЗаполнено(УчетнаяЗаписьДляОтправки) Тогда
		УчетнаяЗаписьИнфо = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			УчетнаяЗаписьДляОтправки,
			"ИмяПользователя, АдресЭлектроннойПочты");
		
		Результат.Вставить("УчетнаяЗапись", УчетнаяЗаписьДляОтправки);
		Результат.Вставить("ОтправительКонтакт", ТекущийПользователь);
			
	Иначе
		Результат.Вставить("УчетнаяЗапись", Неопределено);
		Результат.Вставить("ОтправительКонтакт", ТекущийПользователь);
	КонецЕсли;
	
	Если ВстроеннаяПочтаКлиентСервер.ЭтоПисьмо(ДанныеЗаполнения) Тогда
		
		ЗаполнитьСтруктуруРеквизитовПоПисьму(Результат, ДанныеЗаполнения);
		
	КонецЕсли;
	
	Если Результат.Свойство("ПолучателиПисьма") И Результат.Свойство("ПолучателиКопий") Тогда
		ПолучателиСтрокой = ВстроеннаяПочтаСервер.ТаблицаПолучателейВСтроку(
			Результат.ПолучателиПисьма);
		Результат.Вставить("ПолучателиПисьмаСтрокой", ПолучателиСтрокой);
	ИначеЕсли Результат.Свойство("ПолучателиПисьма") И Результат.ПолучателиПисьма.Количество() > 0 Тогда
		ПолучателиСтрокой = ВстроеннаяПочтаСервер.ТаблицаПолучателейВСтроку(Результат.ПолучателиПисьма);
		Результат.Вставить("ПолучателиПисьмаСтрокой", ПолучателиСтрокой);
	Иначе
		Результат.Вставить("ПолучателиПисьмаСтрокой", "");
	КонецЕсли;
	
	//Если Не Результат.Свойство("Проект") Или Не ЗначениеЗаполнено(Результат.Проект) Тогда 
	//	Результат.Вставить("Проект", РаботаСПроектами.ПолучитьПроектПоУмолчанию());
	//КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// РАСБОТА С ТЕКСТОМ ШАБЛОНА

// Устанавливает содержание шаблона письма
//
Процедура УстановитьСодержаниеШаблонаПисьма(
	Знач Текст,
	Знач ТипТекстаПисьма = Неопределено,
	Знач КодировкаПисьма = Неопределено) Экспорт
	
	ТипТекста = ?(ЗначениеЗаполнено(ТипТекстаПисьма),
		ТипТекстаПисьма,
		Перечисления.ТипыТекстовПочтовыхСообщений.ПростойТекст);
	
	Кодировка = ?(ЗначениеЗаполнено(КодировкаПисьма),
		КодировкаПисьма,
		"utf-8");
	
	Почта.ИсправитьПереводыСтрок(Текст);
	
	Если ТипТекста = Перечисления.ТипыТекстовПочтовыхСообщений.HTML Тогда
		
		ТекстШаблонаПисьмаHTML = Текст;
		ТекстШаблонаПисьма = РаботаС_HTML.ПолучитьТекстИзHTML(Текст);
		
	Иначе	
		
		ТекстШаблонаПисьма = Текст;
		ТекстШаблонаПисьмаHTML = "";
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает структуру "ТипТекста, Кодировка, Текст"
//
Функция ПолучитьСодержаниеШаблона() Экспорт
	
	Результат = Новый Структура("ТипТекста, Кодировка, Текст");
	
	ТекстПисьма = "";
	
	Если ТипТекста = Перечисления.ТипыТекстовПочтовыхСообщений.HTML Тогда
		Результат.ТипТекста = Перечисления.ТипыТекстовПочтовыхСообщений.HTML;
		
		ТекстПисьма = ТекстШаблонаПисьмаHTML;
		Если ПустаяСтрока(ТекстПисьма) Тогда
			ТекстПисьма = ТекстШаблонаПисьма;
		КонецЕсли;
		
	Иначе
		Результат.ТипТекста = Перечисления.ТипыТекстовПочтовыхСообщений.ПростойТекст;
		
		ТекстПисьма = ТекстШаблонаПисьма;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекстПисьма) Тогда
		ТекстПисьма = " "; // обход ошибки платформы
	КонецЕсли;	
	
	Результат.Кодировка = Кодировка;
	Результат.Текст = ТекстПисьма;
	
	Возврат Результат;
	
КонецФункции

// Возвращает текст письма в виде простого текста
Функция ПолучитьТекстовоеПредставлениеСодержанияШаблона() Экспорт
	
	Результат = "";
	
	Если ТипТекста = Перечисления.ТипыТекстовПочтовыхСообщений.HTML Тогда
		
		Результат = ТекстШаблонаПисьмаHTML;
		
		Если ПустаяСтрока(Результат) Тогда
			
			Результат = ТекстШаблонаПисьма;
			
		Иначе
			
			Результат = РаботаС_HTML.ПолучитьТекстИзHTML(Результат, Кодировка);
			
		КонецЕсли;
		
	Иначе
		
		Результат = ТекстШаблонаПисьма;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	Автор = ПользователиКлиентСервер.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	СтруктураРеквизитов = СформироватьСтруктуруРеквизитовШаблонаПисьма(ДанныеЗаполнения);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураРеквизитов);
	
	Если СтруктураРеквизитов.Свойство("ПолучателиПисьма") Тогда
		Для каждого СтруктураАдресата Из СтруктураРеквизитов.ПолучателиПисьма Цикл
			ЗаполнитьЗначенияСвойств(ПолучателиПисьма.Добавить(), СтруктураАдресата);
		КонецЦикла;
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("ПолучателиКопий") Тогда
		Для каждого СтруктураАдресата Из СтруктураРеквизитов.ПолучателиКопий Цикл
			ЗаполнитьЗначенияСвойств(ПолучателиКопий.Добавить(), СтруктураАдресата);
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИсходящееПисьмо") Тогда
		ТекстШаблонаПисьмаHTML                 = ДанныеЗаполнения.ТекстПисьмаHTMLХранилище.Получить();
		ТекстШаблонаПисьма                     = ДанныеЗаполнения.ТекстХранилище.Получить();
		ПолноеИмяТипаПараметраВводаНаОсновании = НСтр("ru='Общий'");
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВходящееПисьмо") Тогда
		ТекстШаблонаПисьмаHTML                 = ДанныеЗаполнения.ТекстПисьмаHTMLХранилище.Получить();
		ТекстШаблонаПисьма                     = ДанныеЗаполнения.ТекстПисьмаПростойТекстХранилище.Получить();
		ПолноеИмяТипаПараметраВводаНаОсновании = НСтр("ru='Общий'");
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда 
		ЗаполнитьНаОснованииСтруктуры(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ДополнительныеСвойства.Свойство("ТекстПисьма") Тогда
		
		УстановитьСодержаниеШаблонаПисьма(
			ДополнительныеСвойства.ТекстПисьма,
			ТипТекста,
			Кодировка);
		
	КонецЕсли;
	
	Если Не Ссылка.Пустая() Тогда
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "ПометкаУдаления");
		ПредыдущаяПометкаУдаления = ЗначенияРеквизитов.ПометкаУдаления;
		ДополнительныеСвойства.Вставить("ПредыдущаяПометкаУдаления", ЗначенияРеквизитов.ПометкаУдаления);
		
		Если ПометкаУдаления <> ПредыдущаяПометкаУдаления Тогда 
			
			Если ПометкаУдаления Тогда
				
				ОткрыватьФайлыИсходящегоПисьмаНаРедактирование =
					ВстроеннаяПочтаСервер.ПолучитьПерсональнуюНастройку("ОткрыватьФайлыИсходящегоПисьмаНаРедактирование");
				
				// упрощенный режим работы с файлами - освободим файлы	
				Если ОткрыватьФайлыИсходящегоПисьмаНаРедактирование Тогда
					РаботаСФайламиВызовСервера.ОсвободитьФайлыВладельца(Ссылка);
				КонецЕсли;	
				
			КонецЕсли;	
			
			РаботаСФайламиВызовСервера.ПометитьНаУдалениеПриложенныеФайлы(Ссылка, ПометкаУдаления);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьСтруктуруРеквизитовПоПисьму(СтруктураРеквизитов, Знач Письмо, ДополнительныеПараметры = Неопределено)
	
	Если Письмо.ПолучателиОтвета.Количество() = 0 Тогда
		ПеренестиОтправителяВПолучатели = Истина;
	Иначе
		ПеренестиОбратныеАдресаВПолучатели = Истина;
	КонецЕсли;
	ПеренестиВсехПолучателейВПолучатели = Истина;
	
	ПисьмоИнфо = Неопределено;
	Если ВстроеннаяПочтаКлиентСервер.ЭтоВходящееПисьмо(Письмо) Тогда
		ПисьмоИнфо = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Письмо,
			"Ссылка,
			|Кодировка,
			|Предмет,
			|Проект,
			|Тема,
			|УчетнаяЗапись,
			|ОтправительАдресат,
			|ТипТекста,
			|ВнутреннийЗаголовок");
		Адресат = ПисьмоИнфо.ОтправительАдресат;
		ПисьмоИнфо.Вставить("ОтправительАдресат", Адресат);
		ДанныеУчетнойЗаписи = Почта.ПолучитьДанныеУчетнойЗаписи(ПисьмоИнфо.УчетнаяЗапись);
	ИначеЕсли ВстроеннаяПочтаКлиентСервер.ЭтоИсходящееПисьмо(Письмо) Тогда
		ПисьмоИнфо = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Письмо,
			"Ссылка,
			|Кодировка,
			|Предмет,
			|Проект,
			|Тема,
			|УчетнаяЗапись,
			|ОтправительКонтакт,
			|ТипТекста");
		ДанныеУчетнойЗаписи = Почта.ПолучитьДанныеУчетнойЗаписи(ПисьмоИнфо.УчетнаяЗапись);
		Адрес = ДанныеУчетнойЗаписи.АдресЭлектроннойПочты;
		Представление = ДанныеУчетнойЗаписи.ПредставлениеАдресаЭлектроннойПочты;
		Адресат = ВстроеннаяПочтаСерверПовтИсп.ПолучитьПочтовогоАдресата(Адрес, Представление);
		ПисьмоИнфо.Вставить("ОтправительАдресат", Адресат);
	КонецЕсли;
	
	Попытка
		ОтветственныеЗаОбработкуПисемВыборка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			ПисьмоИнфо.УчетнаяЗапись, "ОтветственныеЗаОбработкуПисем");
		ОтветственныеЗаОбработкуПисем = ОтветственныеЗаОбработкуПисемВыборка.Выгрузить();
		Если ПисьмоИнфо.УчетнаяЗапись.ОтветственныеЗаОбработкуПисем.Найти(
			СтруктураРеквизитов.Автор,
			"Пользователь") <> Неопределено Тогда
			СтруктураРеквизитов.Вставить("УчетнаяЗапись", ПисьмоИнфо.УчетнаяЗапись);
		КонецЕсли;
	Исключение // нет прав на учетную запись - берем учетку по умолчанию
		УчетнаяЗаписьДляОтправки = ВстроеннаяПочтаСервер.ПолучитьУчетнуюЗаписьДляОтправки();
		СтруктураРеквизитов.Вставить("УчетнаяЗапись", УчетнаяЗаписьДляОтправки);
	КонецПопытки;
	
	СтруктураРеквизитов.Вставить("ТипТекста", ПисьмоИнфо.ТипТекста);
	СтруктураРеквизитов.ТипТекста = ПисьмоИнфо.ТипТекста; // копируется тип текста из письма основания
	
	Если ВстроеннаяПочтаКлиентСервер.ЭтоВходящееПисьмо(Письмо) Тогда
		ContentType = ВстроеннаяПочтаСервер.ПолучитьЗначениеПоляИзЗаголовкаПисьма(ПисьмоИнфо.ВнутреннийЗаголовок, "Content-Type");
		Если Найти(НРег(ContentType), "text/calendar") > 0 Тогда 
			СтруктураРеквизитов.ТипТекста = Перечисления.ТипыТекстовПочтовыхСообщений.HTML; // на iCalendar ответ всегда в HTML 
		КонецЕсли;
	КонецЕсли;
	
	СтруктураРеквизитов.Вставить("Кодировка", ПисьмоИнфо.Кодировка);
	
	НоваяТема = ПисьмоИнфо.Тема;
	
	СтруктураРеквизитов.Вставить("ПисьмоОснование", Письмо);
	СтруктураРеквизитов.Вставить("Предмет", ПисьмоИнфо.Предмет);
	СтруктураРеквизитов.Вставить("Проект", ПисьмоИнфо.Проект);
	СтруктураРеквизитов.Вставить("Тема", НоваяТема);
	СтруктураРеквизитов.Вставить("ПолучателиПисьма", Новый Массив);
	СтруктураРеквизитов.Вставить("ПолучателиКопий", Новый Массив);
	
	АдресаПолучателей = Новый Соответствие; // Соответствие для контроля уникальности адресов получателей.
	Если ЗначениеЗаполнено(СтруктураРеквизитов.УчетнаяЗапись) Тогда
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			СтруктураРеквизитов.УчетнаяЗапись,
			"АдресЭлектроннойПочты");
		УчетнаяЗаписьИнфо = Почта.ПолучитьДанныеУчетнойЗаписи(СтруктураРеквизитов.УчетнаяЗапись);
		Если ЗначениеЗаполнено(УчетнаяЗаписьИнфо.АдресЭлектроннойПочты) Тогда
			АдресаПолучателей.Вставить(НРег(УчетнаяЗаписьИнфо.АдресЭлектроннойПочты), "");
		КонецЕсли;
		
	КонецЕсли;
		
	Для Каждого Получатель Из Письмо.ПолучателиОтвета Цикл
		Если АдресаПолучателей.Получить(НРег(Получатель.Адресат.Адрес)) = Неопределено Тогда
			СтруктураАдресата = Новый Структура;
			СтруктураАдресата.Вставить("Адресат", Получатель.Адресат);
			СтруктураРеквизитов.ПолучателиПисьма.Добавить(СтруктураАдресата);
			АдресаПолучателей.Вставить(НРег(Получатель.Адресат.Адрес), "");
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Получатель Из Письмо.ПолучателиПисьма Цикл
		
		Если АдресаПолучателей.Получить(НРег(Получатель.Адресат.Адрес)) = Неопределено Тогда
			СтруктураАдресата = Новый Структура;
			СтруктураАдресата.Вставить("Адресат", Получатель.Адресат);
			СтруктураРеквизитов.ПолучателиПисьма.Добавить(СтруктураАдресата);
			АдресаПолучателей.Вставить(НРег(Получатель.Адресат.Адрес), "");
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого Получатель Из Письмо.ПолучателиКопий Цикл
		
		Если АдресаПолучателей.Получить(НРег(Получатель.Адресат.Адрес)) = Неопределено Тогда
			СтруктураАдресата = Новый Структура;
			СтруктураАдресата.Вставить("Адресат", Получатель.Адресат);
			СтруктураРеквизитов.ПолучателиКопий.Добавить(СтруктураАдресата);
			АдресаПолучателей.Вставить(НРег(Получатель.Адресат.Адрес), "");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСтруктуруРеквизитовПоСтруктуреДанных(СтруктураРеквизитов, ДанныеЗаполнения)
	
	Если ДанныеЗаполнения.Свойство("Тема") Тогда 
		СтруктураРеквизитов.Вставить("Тема", ДанныеЗаполнения.Тема);
	КонецЕсли;	
	
	Если ДанныеЗаполнения.Свойство("ТипТекста") Тогда 
		СтруктураРеквизитов.Вставить("ТипТекста", ДанныеЗаполнения.ТипТекста);
	КонецЕсли;	
	
	Если ДанныеЗаполнения.Свойство("АдресаПолучателей") И ТипЗнч(ДанныеЗаполнения.АдресаПолучателей) = Тип("Массив") Тогда 
		СтруктураРеквизитов.Вставить("ПолучателиПисьма", Новый Массив);
		Для Каждого Адрес Из ДанныеЗаполнения.АдресаПолучателей Цикл
			Адресат = ВстроеннаяПочтаСерверПовтИсп.ПолучитьПочтовогоАдресата(Адрес, Адрес);
			Если ЗначениеЗаполнено(Адресат) Тогда 
				СтруктураАдресата = Новый Структура;
				СтруктураАдресата.Вставить("Адресат", Адресат);
				СтруктураРеквизитов.ПолучателиПисьма.Добавить(СтруктураАдресата);
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьНаОснованииСтруктуры(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ПараметрыШаблона = ШаблоныСообщений.ОписаниеПараметровШаблона();
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыШаблона, ДанныеЗаполнения, Истина);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПараметрыШаблона);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("ПредназначенДляSMS")
		И ДанныеЗаполнения.ПредназначенДляSMS Тогда
			ПараметрыШаблона.ТипШаблона = "SMS";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыШаблона.ВнешняяОбработка) Тогда
		ЭтотОбъект.ШаблонПоВнешнейОбработке = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыШаблона.ПолноеИмяТипаНазначения) Тогда
		МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ПараметрыШаблона.ПолноеИмяТипаНазначения);
		ЭтотОбъект.ПолноеИмяТипаПараметраВводаНаОсновании = ПараметрыШаблона.ПолноеИмяТипаНазначения;
		ЭтотОбъект.Назначение= МетаданныеОбъекта.Представление();
		ЭтотОбъект.ПредназначенДляВводаНаОсновании = Истина;
	КонецЕсли;
	
	Если ПараметрыШаблона.ТипШаблона = "Письмо" Тогда
		
		ЭтотОбъект.ПредназначенДляSMS              = Ложь;
		ЭтотОбъект.ПредназначенДляЭлектронныхПисем = Истина;
		ЭтотОбъект.Тема                      = ПараметрыШаблона.Тема;
		
		Если ПараметрыШаблона.ФорматПисьма = Перечисления.ТипыТекстовПочтовыхСообщений.HTML Тогда
			ЭтотОбъект.ТекстШаблонаПисьмаHTML = СтрЗаменить(ПараметрыШаблона.Текст, Символы.ПС, "<BR>");
			ЭтотОбъект.ТипТекста        = Перечисления.ТипыТекстовПочтовыхСообщений.HTML;
		Иначе
			ЭтотОбъект.ТекстШаблонаПисьма = СтрЗаменить(ПараметрыШаблона.Текст, "<BR>", Символы.ПС);
			ЭтотОбъект.ТипТекста    = Перечисления.ТипыТекстовПочтовыхСообщений.ПростойТекст;
		КонецЕсли;
		
	ИначеЕсли ПараметрыШаблона.ТипШаблона = "SMS" Тогда
		
		ЭтотОбъект.ПредназначенДляSMS              = Истина;
		ЭтотОбъект.ПредназначенДляЭлектронныхПисем = Ложь;
		ЭтотОбъект.ТекстШаблонаSMS                 = ПараметрыШаблона.Текст;
		ЭтотОбъект.ОтправлятьВТранслите            = ПараметрыШаблона.ПеревестиВТранслит;
		
	ИначеЕсли ПараметрыШаблона.ТипШаблона = "Общий" Тогда
		
		ЭтотОбъект.ПредназначенДляSMS              = Ложь;
		ЭтотОбъект.ПредназначенДляЭлектронныхПисем = Ложь;
		
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецЕсли
