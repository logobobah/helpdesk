
&НаКлиенте
// Имя картинки, которую пользователь выбирает. Например "Логотип", "ПодписьРуководителя" или "ПодписьБухгалтера".
Перем ВыбираемаяКартинка;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МожноРедактироватьФайлы = ПравоДоступа("Редактирование", Метаданные.Справочники.Файлы);
	
	МассивИменКартинок = Новый Массив;
	МассивИменКартинок.Добавить("Логотип");
	МассивИменКартинок.Добавить("Печать");
	МассивИменКартинок.Добавить("ПодписьРуководителя");
	МассивИменКартинок.Добавить("ПодписьГлавногоБухгалтера");
	МассивИменКартинок.Добавить("ФаксимильнаяПечать");
	
	МассивИменЭлементов = Новый Массив;
	МассивИменЭлементов.Добавить("ЗагрузитьОчистить");
	МассивИменЭлементов.Добавить("ЗагрузитьКартинку");
	МассивИменЭлементов.Добавить("ВыбратьИзПрисоединенныхФайлов");
	МассивИменЭлементов.Добавить("Очистить");
	
	Для Каждого ИмяКартинки Из МассивИменКартинок Цикл
		ИмяФайла          = "Файл" + ИмяКартинки;
		ИмяАдресаКартинки = "Адрес" + ИмяКартинки;
		
		ТекущийФайл = Объект[ИмяФайла];
		Если НЕ ТекущийФайл.Пустая() Тогда
			Попытка
				ЭтотОбъект[ИмяАдресаКартинки] = РаботаСФайлами.ДанныеФайла(ТекущийФайл, УникальныйИдентификатор).СсылкаНаДвоичныеДанныеФайла;
			Исключение
				ИнформацияОбОшибке = ИнформацияОбОшибке();
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Организация'"), УровеньЖурналаРегистрации.Ошибка,
					Метаданные.Справочники.Организации, Объект.Ссылка,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Ошибка получения картинки для ""%1"". Подробности в журнале регистрации.'"),
						ЗаголовокРеквизитаКартинки(ИмяАдресаКартинки)),
					Объект.Ссылка);
				Элементы[ИмяАдресаКартинки].ТекстНевыбраннойКартинки = НСтр("ru = 'Ошибка получения файла'");
			КонецПопытки;
		Конецесли;
		Для Каждого ИмяЭлемента Из МассивИменЭлементов Цикл
			Элементы[ИмяЭлемента + ИмяКартинки].Доступность = МожноРедактироватьФайлы;
		КонецЦикла;
	КонецЦикла;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		Модифицированность	= Истина;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыбранноеЗначение);
		ЗаполнитьЗначенияСвойств(Объект, ВыбранноеЗначение);
		
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Игнорируем собственные оповещения, которые предназначены для других форм.
	Если Источник = ЭтотОбъект Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_Файл" Тогда
		
		Если ТипЗнч(Параметр) = Тип("Структура")
			И Параметр.Свойство("ВладелецФайла")
			И Параметр.ВладелецФайла = Объект.Ссылка
			И ЗначениеЗаполнено(ВыбираемаяКартинка) Тогда
			
			Модифицированность = Истина;
			
			ФайлКартинки = ?(ТипЗнч(Источник) = Тип("Массив"), Источник[0], Источник);
			УстановитьКартинкуВЭлементе(ФайлКартинки, ВыбираемаяКартинка);
			
			ВыбираемаяКартинка = Неопределено;
			
		КонецЕсли;
	КонецЕсли;
		
	УправлениеФормой(ЭтотОбъект);
	
	Если ИмяСобытия = "ФормаОрганизации_АктивироватьПолеПечать" Тогда
		Если Параметр = Объект.Ссылка Тогда
			Если Элементы.ГруппаЛоготипИПечать.Родитель = Элементы.ГруппаЛоготипИПечатьСвернуто Тогда
				АктивироватьПолеПечать();
			Иначе
				ТекущийЭлемент = Элементы.АдресПечать;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	Объект.Наименование = Строка(Объект.Исполнитель);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	ЭтоНовый = НЕ ЗначениеЗаполнено(Объект.Ссылка);
	
	// Группа Логотип и подпись
	ИменаКартинок = Новый Структура;
	ИменаКартинок.Вставить("Логотип",                   НСтр("ru='логотип'"));
	ИменаКартинок.Вставить("Печать",                    НСтр("ru='печать'"));
	ИменаКартинок.Вставить("ПодписьРуководителя",       НСтр("ru='подпись'"));
	ИменаКартинок.Вставить("ПодписьГлавногоБухгалтера", НСтр("ru='подпись'"));
	ИменаКартинок.Вставить("ФаксимильнаяПечать",        НСтр("ru='факсимильную печать и подпись'"));
	Для Каждого КлючИЗначение Из ИменаКартинок Цикл
		ИмяФайла       = "Файл" + КлючИЗначение.Ключ;
		ЭлементФормы   = "ЗагрузитьОчистить" + КлючИЗначение.Ключ;
		ОбъектДействия = КлючИЗначение.Значение;
		Если Объект[ИмяФайла].Пустая() Тогда
			Форма[ЭлементФормы] = СтрШаблон(НСтр("ru='Загрузить %1'"), ОбъектДействия); // Например, "Загрузить логотип"
		Иначе
			Форма[ЭлементФормы] = СтрШаблон(НСтр("ru='Очистить %1'"),  ОбъектДействия); // Например, "Очистить логотип"
		Конецесли;
	КонецЦикла;
	
КонецПроцедуры



#Область Печать
	
&НаКлиенте
Процедура ВыбратьИзПрисоединенныхФайловПечать(Команда)
	
	ВыбратьКартинкуИзПрисоединенныхФайлов("Печать");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКартинкуПечать(Команда)
	
	ЗагрузитьКартинку("Печать");
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПечать(Команда)
	
	ОчиститьКартинку("Печать");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзПрисоединенныхФайловПодписьРуководителя(Команда)
	
	ВыбратьКартинкуИзПрисоединенныхФайлов("ПодписьРуководителя");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКартинкуПодписьРуководителя(Команда)
	
	ЗагрузитьКартинку("ПодписьРуководителя");
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПодписьРуководителя(Команда)
	
	ОчиститьКартинку("ПодписьРуководителя");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзПрисоединенныхФайловПодписьГлавногоБухгалтера(Команда)
	
	ВыбратьКартинкуИзПрисоединенныхФайлов("ПодписьГлавногоБухгалтера");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКартинкуПодписьГлавногоБухгалтера(Команда)
	
	ЗагрузитьКартинку("ПодписьГлавногоБухгалтера");
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПодписьГлавногоБухгалтера(Команда)
	
	ОчиститьКартинку("ПодписьГлавногоБухгалтера");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОчиститьКартинку(ИмяКартинки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	Если Объект["Файл" + ИмяКартинки].Пустая() Тогда
		ЗагрузитьКартинку(ИмяКартинки);
	Иначе
		ОчиститьКартинку(ИмяКартинки);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКартинку(ИмяЭлементаСКартинкой)
	
	Если Объект.Ссылка.Пустая() Тогда
		Если НЕ Записать() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ВыбираемаяКартинка = ИмяЭлементаСКартинкой;
	
	Если ИмяЭлементаСКартинкой = "Печать"
		ИЛИ ИмяЭлементаСКартинкой = "ПодписьРуководителя"
		ИЛИ ИмяЭлементаСКартинкой = "ПодписьГлавногоБухгалтера" Тогда
		
		Фильтр = НСтр("ru = 'Формат PNG(*.png*)|*.png'");
		
	Иначе
	
		Фильтр = НСтр("ru = 'Все картинки (*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf)|*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf"
			+ "|Все файлы(*.*)|*.*"
			+ "|Формат bmp(*.bmp*;*.dib;*.rle)|*.bmp;*.dib;*.rle"
			+ "|Формат GIF(*.gif*)|*.gif"
			+ "|Формат JPEG(*.jpeg;*.jpg)|*.jpeg;*.jpg"
			+ "|Формат PNG(*.png*)|*.png"
			+ "|Формат TIFF(*.tif)|*.tif"
			+ "|Формат icon(*.ico)|*.ico"
			+ "|Формат метафайл(*.wmf;*.emf)|*.wmf;*.emf'");
	
	КонецЕсли;
		
	РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Ссылка, УникальныйИдентификатор, Фильтр);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроверитьРазмерКартинки(ДанныеКартинки)
	
	УправлениеПечатью.ДопустимыйРазмерКартинки(ДанныеКартинки.Размер, ДанныеКартинки.ИмяФайла, ДанныеКартинки.Владелец, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОчиститьПечатьНажатие(Элемент, СтандартнаяОбработка)
	
	ЗагрузитьОчиститьКартинку("Печать", СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОчиститьПодписьРуководителяНажатие(Элемент, СтандартнаяОбработка)
	
	ЗагрузитьОчиститьКартинку("ПодписьРуководителя", СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОчиститьПодписьГлавногоБухгалтераНажатие(Элемент, СтандартнаяОбработка)
	
	ЗагрузитьОчиститьКартинку("ПодписьГлавногоБухгалтера", СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКартинку(ИмяЭлементаСКартинкой)

	Модифицированность = Истина;
	ИмяФайла = "Файл" + ИмяЭлементаСКартинкой;
	ИмяАдресаКартинки = "Адрес" + ИмяЭлементаСКартинкой;
	Объект[ИмяФайла] = Неопределено;
	
	УстановитьКартинкуНаФорме(ЭтотОбъект[ИмяАдресаКартинки], Объект[ИмяФайла]);
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура АдресЛоготипНажатие(Элемент, СтандартнаяОбработка)
	ОбработатьНажатиеКартинки(СтандартнаяОбработка, "Логотип");
КонецПроцедуры

&НаКлиенте
Процедура АдресПечатьНажатие(Элемент, СтандартнаяОбработка)
	ОбработатьНажатиеКартинки(СтандартнаяОбработка, "Печать");
КонецПроцедуры

&НаКлиенте
Процедура АдресПодписьРуководителяНажатие(Элемент, СтандартнаяОбработка)
	ОбработатьНажатиеКартинки(СтандартнаяОбработка, "ПодписьРуководителя");
КонецПроцедуры

&НаКлиенте
Процедура АдресФаксимильнаяПечатьНажатие(Элемент, СтандартнаяОбработка)
	ОбработатьНажатиеКартинки(СтандартнаяОбработка, "ФаксимильнаяПечать");
КонецПроцедуры

&НаКлиенте
Процедура АдресПодписьГлавногоБухгалтераНажатие(Элемент, СтандартнаяОбработка)
	ОбработатьНажатиеКартинки(СтандартнаяОбработка, "ПодписьГлавногоБухгалтера");
КонецПроцедуры

#КонецОбласти

#Область ЛоготипИФаксимиле

&НаКлиенте
// Процедура отвечает за обработку нажатия на картинки формы (логотип/факсим. печать)
//
Процедура ОбработатьНажатиеКартинки(СтандартнаяОбработка, ИмяЭлементаСКартинкой)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект["Файл"+ИмяЭлементаСКартинкой]) Тогда
		
		ДанныеФайла = ПолучитьДанныеФайла(Объект["Файл"+ИмяЭлементаСКартинкой], УникальныйИдентификатор);
		РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);
		
	ИначеЕсли МожноРедактироватьФайлы Тогда
		
		ЗагрузитьКартинку(ИмяЭлементаСКартинкой);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеФайла(ФайлКартинки, УникальныйИдентификатор)
	
	Возврат РаботаСФайлами.ДанныеФайла(ФайлКартинки, УникальныйИдентификатор);
	
КонецФункции

&НаСервереБезКонтекста
// Функция возвращает навигационую ссылку файла
//
Функция ПолучитьКартинку(ФайлКартинки, УникальныйИдентификатор)
	
	ДанныеКартинки = РаботаСФайлами.ДанныеФайла(ФайлКартинки, УникальныйИдентификатор);
	ПроверитьРазмерКартинки(ДанныеКартинки);
	Возврат ДанныеКартинки.СсылкаНаДвоичныеДанныеФайла;
	
КонецФункции

&НаКлиенте
// Процедура отвечает за отображение/обновление соответствующей картинки
//
Процедура УстановитьКартинкуНаФорме(АктивныйАдрес, РеквизитОбъекта)
	
	Если ЗначениеЗаполнено(РеквизитОбъекта) Тогда
		АктивныйАдрес = ПолучитьКартинку(РеквизитОбъекта, УникальныйИдентификатор);
	Иначе
		АктивныйАдрес = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОчиститьЛоготипНажатие(Элемент, СтандартнаяОбработка)
	
	ЗагрузитьОчиститьКартинку("Логотип", СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОчиститьФаксимилеНажатие(Элемент, СтандартнаяОбработка)
	
	ЗагрузитьОчиститьКартинку("ФаксимильнаяПечать", СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКартинкуВЭлементе(ФайлКартинки, ИмяЭлементаСКартинкой)
	
	Модифицированность = Истина;
	ИмяФайла = "Файл" + ИмяЭлементаСКартинкой;
	ИмяАдресаКартинки = "Адрес" + ИмяЭлементаСКартинкой;
	Объект[ИмяФайла] = ФайлКартинки;
	УстановитьКартинкуНаФорме(ЭтотОбъект[ИмяАдресаКартинки], ФайлКартинки);
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКартинкуИзПрисоединенныхФайлов(ИмяЭлементаСКартинкой)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ВладелецФайла", Объект.Ссылка);
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
		
		ДополнительныеПараметры = Новый Структура("ИмяЭлементаСКартинкой", ИмяЭлементаСКартинкой);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьКартинкуИзПрисоединенныхФайловЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы", ПараметрыФормы, Элементы["Адрес"+ИмяЭлементаСКартинкой], , , , ОписаниеОповещения);
		
	Иначе
		
		ТекстСообщения = НСтр("ru = 'Элемент справочника еще не записан.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКартинкуИзПрисоединенныхФайловЗавершение(ВыбраннаяКартинка, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ВыбраннаяКартинка) Тогда
		
		УстановитьКартинкуВЭлементе(ВыбраннаяКартинка, ДополнительныеПараметры.ИмяЭлементаСКартинкой);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаголовокРеквизитаКартинки(ИмяЭлементаСКартинкой)
	ЭлементКартинки = Элементы[ИмяЭлементаСКартинкой];
	Если ЗначениеЗаполнено(ЭлементКартинки.Заголовок) Тогда
		Возврат ЭлементКартинки.Заголовок;
	КонецЕсли;
	
	ПутьКДанным = ЭлементКартинки.ПутьКДанным;
	Реквизиты = ПолучитьРеквизиты();
	Для Каждого Реквизит Из Реквизиты Цикл
		Если Реквизит.Имя = ПутьКДанным Тогда
			Если ЗначениеЗаполнено(Реквизит.Заголовок) Тогда
				Возврат СокрЛП(Реквизит.Заголовок);
			КонецЕсли;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ИмяЭлементаСКартинкой;
КонецФункции

// Переносит реквизиты печати и подписей в раскрытую группу, активирует поле "Печать".
//
&НаСервере
Процедура АктивироватьПолеПечать()
	Элементы.Переместить(Элементы.ГруппаЛоготипИПечать, Элементы.ГруппаЛоготипИПечатьРазвернуто);
	ТекущийЭлемент = Элементы.АдресПечать;
КонецПроцедуры

#КонецОбласти

