#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Преобразует событие уведомление в вид бизнес события, если возможно.
//
// Параметры:
//  СобытиеУведомления - СправочникСсылка.ВидыБизнесСобытий, ПеречислениеСсылка.СобытияУведомлений - Событие уведомления.
//
// Возвращаемое значение:
//  СправочникСсылка.ВидыБизнесСобытий, ПеречислениеСсылка.СобытияУведомлений - Приведенный вид события.
//
Функция ВидБизнесСобытия(СобытиеУведомления) Экспорт
	
	ВидБизнесСобытия = СобытиеУведомления;
	Если СобытиеУведомления = ВыполнениеМоейЗадачи Тогда
		ВидБизнесСобытия = Справочники.ВидыБизнесСобытий.ВыполнениеЗадачи;
		
	ИначеЕсли СобытиеУведомления = ПеренаправлениеМоейЗадачи Тогда
		ВидБизнесСобытия = Справочники.ВидыБизнесСобытий.ПеренаправлениеЗадачи;
		
	КонецЕсли;
	
	Возврат ВидБизнесСобытия;
	
КонецФункции

// Формирует список доступных видов событий по объекту.
//
// Параметры:
//  Объект - ЛюбаяСсылка - Объект.
//
// Возвращаемое значение:
//  СписокЗначений - Виды событий по объекту.
//
Функция ВидыСобытийПоОбъекту(Объект) Экспорт
	
	СписокВидовБизнесСобытий = Новый СписокЗначений;
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.Задачи") Тогда
		СписокВидовБизнесСобытий.Добавить(ПодошелСрокЗадачи);
		СписокВидовБизнесСобытий.Добавить(ПросроченаЗадача);
		СписокВидовБизнесСобытий.Добавить(Справочники.ВидыБизнесСобытий.ПеренаправлениеЗадачи);
		СписокВидовБизнесСобытий.Добавить(Справочники.ВидыБизнесСобытий.ОтменаВыполненияЗадачи);
		СписокВидовБизнесСобытий.Добавить(Справочники.ВидыБизнесСобытий.ВыполнениеЗадачи);
		СписокВидовБизнесСобытий.Добавить(Справочники.ВидыБизнесСобытий.СозданиеСообщения);
		СписокВидовБизнесСобытий.Добавить(Справочники.ВидыБизнесСобытий.ИзменениеЗадачи);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Файлы") Тогда
		СписокВидовБизнесСобытий.Добавить(Справочники.ВидыБизнесСобытий.ИзменениеФайла);
		СписокВидовБизнесСобытий.Добавить(Справочники.ВидыБизнесСобытий.ОсвобождениеФайла);
		СписокВидовБизнесСобытий.Добавить(Справочники.ВидыБизнесСобытий.ЗахватФайлаДляРедактирования);
		СписокВидовБизнесСобытий.Добавить(Справочники.ВидыБизнесСобытий.СозданиеСообщения);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.ПапкиФайлов") Тогда
		СписокВидовБизнесСобытий.Добавить(Справочники.ВидыБизнесСобытий.СозданиеФайла);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Пользователи") Тогда
		СписокВидовБизнесСобытий.Добавить(Справочники.ВидыБизнесСобытий.СозданиеЗадачи);
		СписокВидовБизнесСобытий.Добавить(Справочники.ВидыБизнесСобытий.ПеренаправлениеЗадачи);
		СписокВидовБизнесСобытий.Добавить(ПодошелСрокЗадачи);
		СписокВидовБизнесСобытий.Добавить(ПросроченаЗадача);
		СписокВидовБизнесСобытий.Добавить(ПросроченаЗадачаАвтора);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
		СписокВидовБизнесСобытий.Добавить(Справочники.ВидыБизнесСобытий.СозданиеСообщения);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.ТемыОбсуждений") Тогда
		СписокВидовБизнесСобытий.Добавить(Справочники.ВидыБизнесСобытий.СозданиеСообщения);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Проекты") Тогда
		СписокВидовБизнесСобытий.Добавить(Справочники.ВидыБизнесСобытий.СозданиеСообщения);
		СписокВидовБизнесСобытий.Добавить(Справочники.ВидыБизнесСобытий.ИзменениеПроекта);
	КонецЕсли;
	
	Для Каждого ЭлементСписка Из СписокВидовБизнесСобытий Цикл
		ЭлементСписка.Представление = ПредставлениеВидаСобытия(ЭлементСписка.Значение, Объект);
	КонецЦикла;
	СписокВидовБизнесСобытий.СортироватьПоПредставлению();
	
	Возврат СписокВидовБизнесСобытий;
	
КонецФункции

// Формирует список видов событий подписки на бизнес-событие.
//
// Параметры:
//  ВидСобытия - СправочникСсылка.ВидыБизнесСобытий, ПеречислениеСсылка.СобытияУведомлений - Вид события.
//
// Возвращаемое значение:
//  Массив - Виды событий подписки.
//
Функция ВидыСобытийПодписки(ВидСобытия) Экспорт
	
	ВидыСобытий = Новый Массив;
	ВидыСобытий.Добавить(ВидСобытия);
	Если ВидСобытия = Справочники.ВидыБизнесСобытий.ВыполнениеЗадачи Тогда
		ВидыСобытий.Добавить(ВыполнениеМоейЗадачи);
		
	ИначеЕсли ВидСобытия = Справочники.ВидыБизнесСобытий.ПеренаправлениеЗадачи Тогда
		ВидыСобытий.Добавить(ПеренаправлениеМоейЗадачи);
		
	КонецЕсли;
	
	Возврат ВидыСобытий;
	
КонецФункции

// Формирует представление события для конкретного объекта.
//
// Параметры:
//  ВидСобытия - СправочникСсылка.ВидыБизнесСобытий, ПеречислениеСсылка.СобытияУведомлений - Вид события.
//  Объект - ЛюбаяСсылка - Объект.
//  Пользователь - СправочникСсылка.Пользователи - Пользователь.
// 
// Возвращаемое значение:
//  Строка - Представление события.
//
Функция ПредставлениеВидаСобытия(ВидСобытия, Объект, Пользователь = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.Задачи") Тогда
		
		Если ВидСобытия = ПодошелСрокЗадачи Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Истекает срок исполнения задачи'");
		ИначеЕсли ВидСобытия = Справочники.ВидыБизнесСобытий.ВыполнениеЗадачи Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Выполнена задача'");
		ИначеЕсли ВидСобытия = Справочники.ВидыБизнесСобытий.ПеренаправлениеЗадачи Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Перенаправлена задача'");
		ИначеЕсли ВидСобытия = Справочники.ВидыБизнесСобытий.ОтменаВыполненияЗадачи Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Отменено выполнение задачи'");
		ИначеЕсли ВидСобытия = Справочники.ВидыБизнесСобытий.СозданиеЗадачи Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Новая задача'");
		ИначеЕсли ВидСобытия = Справочники.ВидыБизнесСобытий.СозданиеСообщения Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Новый ответ в обсуждении задачи'");
		ИначеЕсли ВидСобытия = ПеренаправлениеМоейЗадачи Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Перенаправлена моя задача'");
		ИначеЕсли ВидСобытия = ВыполнениеМоейЗадачи Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Выполнена моя задача'");
		ИначеЕсли ВидСобытия = Справочники.ВидыБизнесСобытий.ИзменениеЗадачи Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Изменилась задача'");
		Иначе
			ПредставлениеБизнесСобытия = Строка(ВидСобытия);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Файлы") Тогда
		
		Если ВидСобытия = Справочники.ВидыБизнесСобытий.ЗахватФайлаДляРедактирования Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Захвачен файл для редактирования'");
		ИначеЕсли ВидСобытия = Справочники.ВидыБизнесСобытий.ИзменениеФайла Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Изменился файл'");
		ИначеЕсли ВидСобытия = Справочники.ВидыБизнесСобытий.ОсвобождениеФайла Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Освобожден файл'");
		ИначеЕсли ВидСобытия = Справочники.ВидыБизнесСобытий.СозданиеСообщения Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Новый ответ в обсуждении файла'");
		Иначе
			ПредставлениеБизнесСобытия = Строка(ВидСобытия);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.ПапкиФайлов") Тогда
		
		Если ВидСобытия = Справочники.ВидыБизнесСобытий.СозданиеФайла Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Создан новый файл в папке'");
		Иначе
			ПредставлениеБизнесСобытия = Строка(ВидСобытия);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Пользователи") Тогда
		
		Если ВидСобытия = Справочники.ВидыБизнесСобытий.СозданиеЗадачи Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Поступила новая задача пользователю'");
		ИначеЕсли ВидСобытия = Справочники.ВидыБизнесСобытий.ПеренаправлениеЗадачи Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Перенаправлена задача пользователю'");
		ИначеЕсли ВидСобытия = ПодошелСрокЗадачи Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Подошел срок задачи пользователя'");
		ИначеЕсли ВидСобытия = ПросроченаЗадача Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Просрочена задача пользователя'");
		ИначеЕсли ВидСобытия = ПросроченаЗадачаАвтора Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Просрочена задача автора'");
		Иначе
			ПредставлениеБизнесСобытия = Строка(ВидСобытия);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
		
		Если ВидСобытия = Справочники.ВидыБизнесСобытий.СозданиеСообщения Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Новый ответ на сообщение обсуждения'");
		Иначе
			ПредставлениеБизнесСобытия = Строка(ВидСобытия);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.ТемыОбсуждений") Тогда
		
		Если ВидСобытия = Справочники.ВидыБизнесСобытий.СозданиеСообщения Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Новое сообщение в теме обсуждения'");
		Иначе
			ПредставлениеБизнесСобытия = Строка(ВидСобытия);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Проекты") Тогда
		
		Если ВидСобытия = Справочники.ВидыБизнесСобытий.СозданиеСообщения Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Новый ответ в обсуждении проекта'");
		ИначеЕсли ВидСобытия = Справочники.ВидыБизнесСобытий.ИзменениеПроекта Тогда
			ПредставлениеБизнесСобытия = НСтр("ru = 'Изменился проект'");
		Иначе
			ПредставлениеБизнесСобытия = Строка(ВидСобытия);
		КонецЕсли;
			
	Иначе
		
		ПредставлениеБизнесСобытия = Строка(ВидСобытия);
		
	КонецЕсли;
	
	Возврат ПредставлениеБизнесСобытия;
	
КонецФункции

// Формирует признак доступности подписка на событие для конкретного объекта.
//
// Параметры:
//  ВидСобытия - СправочникСсылка.ВидыБизнесСобытий, ПеречислениеСсылка.СобытияУведомлений - Вид события.
//  Объект - ЛюбаяСсылка - Объект.
// 
// Возвращаемое значение:
//  Булево - Доступна подписка на событие.
//
Функция ДоступнаПодпискаНаСобытие(ВидСобытия, ОбъектПодписки) Экспорт
	
	ДоступнаПодпискаНаСобытие = Ложь;
	Если ТипЗнч(ОбъектПодписки) = Тип("ДокументСсылка.Задачи") Тогда
		
		Если ВидСобытия = ПодошелСрокЗадачи
			Или ВидСобытия = ПросроченаЗадача
			Или ВидСобытия = ПросроченаЗадачаАвтора
			Или ВидСобытия = Справочники.ВидыБизнесСобытий.ОтменаВыполненияЗадачи
			Или ВидСобытия = Справочники.ВидыБизнесСобытий.ПеренаправлениеЗадачи
			Или ВидСобытия = Справочники.ВидыБизнесСобытий.СозданиеСообщения Тогда
			ДоступнаПодпискаНаСобытие = Истина;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ОбъектПодписки) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
		
		Если ВидСобытия = Справочники.ВидыБизнесСобытий.СозданиеСообщения Тогда
			
			ДоступнаПодпискаНаСобытие = Истина;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ОбъектПодписки) = Тип("СправочникСсылка.ТемыОбсуждений") Тогда
		
		Если ВидСобытия = Справочники.ВидыБизнесСобытий.СозданиеСообщения Тогда
			
			ДоступнаПодпискаНаСобытие = Истина;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ОбъектПодписки) = Тип("СправочникСсылка.Проекты") Тогда
		
		Если ВидСобытия = Справочники.ВидыБизнесСобытий.СозданиеСообщения Тогда
			
			ДоступнаПодпискаНаСобытие = Истина;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ОбъектПодписки) = Тип("СправочникСсылка.Файлы") Тогда
		
		Если ВидСобытия = Справочники.ВидыБизнесСобытий.СозданиеСообщения Тогда
			
			ДоступнаПодпискаНаСобытие = Истина;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ОбъектПодписки) = Тип("СправочникСсылка.Пользователи") Тогда
		
		Если ВидСобытия = Справочники.ВидыБизнесСобытий.СозданиеОтсутствия
			Или ВидСобытия = Справочники.ВидыБизнесСобытий.ИзменениеОтсутствия
			Или ВидСобытия = Перечисления.СобытияУведомлений.СозданиеЗаписиКалендаря Тогда
			
			ДоступнаПодпискаНаСобытие = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДоступнаПодпискаНаСобытие;
	
КонецФункции

// Выполняет дополнительную проверку подписки.
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - Пользователь.
//  ВидСобытия - СправочникСсылка.ВидыБизнесСобытий, ПеречислениеСсылка.СобытияУведомлений - Вид события.
//  Объект - ЛюбаяСсылка - Объект.
// 
// Возвращаемое значение:
//  Булево - Результат проверки.
//
Функция ДополнительнаяПроверкаПодписки(Пользователь, ВидСобытия, Объект) Экспорт
	
	Результат = Истина;
	
	Если ТипЗнч(Объект) = Тип("СправочникСсылка.СообщенияОбсуждений")
		И ВидСобытия = Справочники.ВидыБизнесСобытий.СозданиеСообщения Тогда
		// Не посылать уведомление о создание нового сообщения автору этого сообщения.
		Результат = (Объект.Автор <> Пользователь);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Определяет вид уведомления программы.
//
// Параметры:
//  ВидСобытия - СправочникСсылка.ВидыБизнесСобытий, ПеречислениеСсылка.СобытияУведомлений - Вид события.
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.ВидыУведомленийПрограммы - Вид уведомления программы.
//
Функция ОпределитьВидУведомления(ВидСобытия) Экспорт
	
	ВидУведомления = Перечисления.ВидыУведомленийПрограммы.Информация;
	Если ВидСобытия = ПодошелСрокЗадачи
		Или ВидСобытия = ПросроченаЗадача
		Или ВидСобытия = ПросроченаЗадачаАвтора Тогда
		ВидУведомления = Перечисления.ВидыУведомленийПрограммы.Предупреждение;
	ИначеЕсли ВидСобытия = УведомлениеПрограммы Тогда
		ВидУведомления = Перечисления.ВидыУведомленийПрограммы.Ошибка;
	КонецЕсли;
	
	Возврат ВидУведомления;
	
КонецФункции

#КонецОбласти

#КонецЕсли